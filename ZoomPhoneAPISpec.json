{
  "openapi": "3.0.0",
  "info": {
    "title": "Zoom Phone API",
    "description": "You can access information from Zoom with Zoom Phone APIs to build private services or public applications on the [Zoom App Marketplace](https://marketplace.zoom.us/).\n\n  To learn how to get your credentials and create private or public applications, see Zoom APIs use [OAuth 2.0 authorization](https://developers.zoom.us/docs/integrations/oauth/). \n\n  All endpoints are available through `https` at `api.zoom.us/v2/`. For instance, `https://api.zoom.us/v2/users/` returns all users on an account. You'll receive a `403` error message if you have not set up Zoom Phone.",
    "termsOfService": "https://zoom.us/docs/en-us/zoom_api_license_and_tou.html",
    "contact": {
      "name": "Zoom Developers",
      "url": "https://developer.zoom.us/"
    },
    "version": "2"
  },
  "externalDocs": {
    "description": "",
    "url": ""
  },
  "servers": [{ "url": "https://api.zoom.us/v2" }],
  "paths": {
    "/phone/account_settings": {
      "get": {
        "tags": ["Accounts"],
        "summary": "List an account's zoom phone settings",
        "description": "Returns an account's Zoom phone settings.\n\n**Prerequisites:**\n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_account_settings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "listZoomPhoneAccountSettings",
        "parameters": [
          {
            "name": "setting_types",
            "in": "query",
            "description": "The comma separated list of the setting items you want to fetch. Allowed values: `call_live_transcription`,`local_survivability_mode`,`external_calling_on_zoom_room_common_area`, `select_outbound_caller_id`, `personal_audio_library`, `voicemail`, `voicemail_transcription`, `voicemail_notification_by_email`, `shared_voicemail_notification_by_email`, `restricted_call_hours`, `allowed_call_locations`, `check_voicemails_over_phone`, `auto_call_recording`, `ad_hoc_call_recording`, `international_calling`, `outbound_calling`, `outbound_sms`, `sms`, `sms_etiquette_tool`, `zoom_phone_on_mobile`, `zoom_phone_on_pwa`, `e2e_encryption`, `call_handling_forwarding_to_other_users`, `call_overflow`, `call_transferring`, `elevate_to_meeting`, `call_park`, `hand_off_to_room`, `mobile_switch_to_carrier`, `delegation`, `audio_intercom`, `block_calls_without_caller_id`, `block_external_calls`,`call_queue_opt_out_reason`,`auto_delete_data_after_retention_duration`,`auto_call_from_third_party_apps`, `override_default_port`,`peer_to_peer_media`,`advanced_encryption`,`display_call_feedback_survey`,`block_list_for_inbound_calls_and_messaging`,`block_calls_as_threat`.",
            "required": false,
            "schema": { "type": "string", "example": "call_live_transcription" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nAccount settings retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_live_transcription": {
                      "type": "object",
                      "description": "Whether to let users turn on live transcriptions for a call.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "transcription_start_prompt": {
                              "type": "object",
                              "properties": {
                                "enable": {
                                  "type": "boolean",
                                  "example": true
                                },
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio prompt file ID. If the audio was removed from the user's audio library, it is marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://developers.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "audio_name": {
                                  "type": "string",
                                  "description": "The audio prompt file name.",
                                  "example": "example.mp3"
                                }
                              },
                              "description": "Whether to play a prompt to call participants when the transcription has started."
                            }
                          }
                        }
                      ]
                    },
                    "local_survivability_mode": {
                      "type": "object",
                      "description": "Whether to allow user or extension to have core phone services in the event of an outage.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "external_calling_on_zoom_room_common_area": {
                      "type": "object",
                      "description": "Whether to allow Zoom Rooms to call external phone numbers based on the calling plans and other Zoom Phone policies.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "select_outbound_caller_id": {
                      "type": "object",
                      "description": "Whether to allow extensions to change outbound caller ID when placing calls.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "allow_hide_outbound_caller_id": {
                              "type": "boolean",
                              "description": "Whether to allow extensions to hide outbound caller ID.",
                              "example": true
                            }
                          }
                        }
                      ]
                    },
                    "personal_audio_library": {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "allow_music_on_hold_customization": {
                              "type": "boolean",
                              "description": "Whether to allow music on hold customization.",
                              "example": true
                            },
                            "allow_voicemail_and_message_greeting_customization": {
                              "type": "boolean",
                              "description": "Whether to allow voicemail and message greeting customization.",
                              "example": true
                            }
                          }
                        }
                      ]
                    },
                    "voicemail": {
                      "type": "object",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "allow_videomail": {
                              "type": "boolean",
                              "description": "This field allows videomail",
                              "example": true
                            },
                            "allow_download": {
                              "type": "boolean",
                              "description": "This field allows users to download their own voicemail or videomail.",
                              "example": false
                            },
                            "allow_delete": {
                              "type": "boolean",
                              "description": "This field allows users to delete their own voicemail or videomail.",
                              "example": true
                            },
                            "allow_share": {
                              "type": "boolean",
                              "description": "This field allows users to share their own voicemail.",
                              "example": true
                            },
                            "allow_virtual_background": {
                              "type": "boolean",
                              "description": "This field allows virtual background for voicemail or videomail greeting",
                              "example": true
                            }
                          }
                        }
                      ]
                    },
                    "voicemail_transcription": {
                      "type": "object",
                      "description": "Whether to enable voicemail/videomail transcription feature for User, Auto Receptionist, Call Queue, and Shared Line Groups.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "voicemail_notification_by_email": {
                      "type": "object",
                      "description": "Whether to enable voicemail or videomail transcription feature for User, Auto Receptionist, Call Queue, and Shared Line Groups.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "include_voicemail_file": {
                              "type": "boolean",
                              "description": "Whether to include the voicemail file.",
                              "example": true
                            },
                            "include_voicemail_transcription": {
                              "type": "boolean",
                              "description": "Whether to include the voicemail transcription.",
                              "example": false
                            },
                            "forward_voicemail_to_email": {
                              "type": "boolean",
                              "description": "Whether to forward the voicemail to email.",
                              "example": true
                            }
                          }
                        }
                      ]
                    },
                    "shared_voicemail_notification_by_email": {
                      "type": "object",
                      "description": "Once enabled, users receive email notification when there is a new shared voicemail or videomail. If the extension that shares the voicemail or videomail has disabled the voicemail or videomail notification by email policy, then users do not receive notifications. It only displays when the voicemail policy is using the new policy framework.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "restricted_call_hours": {
                      "type": "object",
                      "description": "Once enabled, define when the extension or user cannot make or accept calls and send SMS.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "time_zone": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The [time zone list](https://developer.zoom.us/docs/api-reference/other-references/abbreviation-lists/#timezones) for supported time zones and their formats.",
                                  "example": "America/Adak"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The time zone name. If time zone id is empty, it shows as `setByExtension`.",
                                  "example": "(GMT-9:00) Adak"
                                }
                              },
                              "description": "This field sets either time zone `id` or `set_by_extension`."
                            },
                            "restricted_hours_applied": {
                              "type": "boolean",
                              "description": "Whether restricted hours have been applied.",
                              "example": false
                            },
                            "restricted_holiday_hours_applied": {
                              "type": "boolean",
                              "description": "Whether restricted holiday hours have been applied.",
                              "example": false
                            },
                            "allow_internal_calls": {
                              "type": "boolean",
                              "description": "Whether to allow internal calls or SMS during restricted hours.",
                              "example": true
                            }
                          }
                        }
                      ]
                    },
                    "allowed_call_locations": {
                      "type": "object",
                      "description": "Once enabled, it defines where the extension or user can make and accept calls and send SMS.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "locations_applied": {
                              "type": "boolean",
                              "description": "Whether locations have been applied.",
                              "example": false
                            },
                            "allow_internal_calls": {
                              "type": "boolean",
                              "description": "Whether to allow internal calls when outside of the allowed locations",
                              "example": true
                            }
                          }
                        }
                      ]
                    },
                    "check_voicemails_over_phone": {
                      "type": "object",
                      "description": "Whether to allow extension owners or members of a shared line group to check voicemails for extension numbers over the phone using a PIN code.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "auto_call_recording": {
                      "type": "object",
                      "description": "Whether to allow automatic recording of all inbound and outbound calls.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "recording_calls": {
                              "type": "string",
                              "description": "The type of calls automatically recorded: \n* `inbound` \n* `outbound` \n* `both`",
                              "example": "inbound",
                              "enum": ["inbound", "outbound", "both"]
                            },
                            "recording_transcription": {
                              "type": "boolean",
                              "description": "Whether the call recording transcription is enabled.",
                              "example": true
                            },
                            "recording_start_prompt": {
                              "type": "boolean",
                              "description": "Whether a prompt plays to call participants when the recording has started.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` to operate inbound and outbound prompt separately.\n\n<b>Note:</b> \n* If customers opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt` and `inbound_audio_notification.recording_start_prompt` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt` will be also updated.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` will be also updated.",
                              "example": true,
                              "deprecated": true
                            },
                            "recording_start_prompt_audio_id": {
                              "type": "string",
                              "description": "The audio that plays when the recording has started. You can use this audio ID to get the audio information using [Get an audio item](https://developer.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_start_prompt_audio_id` and `outbound_audio_notification.recording_start_prompt_audio_id` to operate inbound and outbound prompt separately.\n\n<b>Note:</b> \n* If customers opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt_audio_id` and `inbound_audio_notification.recording_start_prompt_audio_id` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt_audio_id` will be also updated.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt_audio_id`, `inbound_audio_notification.recording_start_prompt_audio_id`, and `outbound_audio_notification.recording_start_prompt_audio_id` always remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt_audio_id`, and `outbound_audio_notification.recording_start_prompt_audio_id` will be also updated.",
                              "example": "ySMexBgBQsioV8KKCUybTA",
                              "deprecated": true
                            },
                            "recording_explicit_consent": {
                              "type": "boolean",
                              "description": "Whether the **Press 1** option that provides recording consent is enabled.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` to operate inbound and outbound prompt separately.\n\n<b>Note:</b> \n* If customers opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent` and `inbound_audio_notification.recording_explicit_consent` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_explicit_consent` will be also updated.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent. When the field is updated, the `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` will be also updated.",
                              "example": true,
                              "deprecated": true
                            },
                            "allow_stop_resume_recording": {
                              "type": "boolean",
                              "description": "Whether the stop and resume of automatic call recording is enabled.",
                              "example": true
                            },
                            "disconnect_on_recording_failure": {
                              "type": "boolean",
                              "description": "Whether a call disconnects when there is an issue with the automatic call recording, and the call cannot reconnect after five seconds. This does **not** include emergency calls.",
                              "example": true
                            },
                            "play_recording_beep_tone": {
                              "type": "object",
                              "properties": {
                                "enable": {
                                  "type": "boolean",
                                  "description": "Whether to play a side tone beep for recorded users while recording.",
                                  "example": true
                                },
                                "play_beep_member": {
                                  "type": "string",
                                  "description": "Whether to  play the recording beep tone for all participants in the call or only the recording user. It displays only when `enable` is true.",
                                  "example": "allMembers",
                                  "enum": ["allMembers", "recordingUser"]
                                },
                                "play_beep_volume": {
                                  "type": "integer",
                                  "description": "The volume of the side tone beep. It displays only when `enable` is set to `true`.",
                                  "example": 60,
                                  "enum": [0, 20, 40, 60, 80, 100]
                                },
                                "play_beep_time_interval": {
                                  "type": "integer",
                                  "description": "The beep time interval in seconds. It displays only when `enable` is true.",
                                  "example": 15,
                                  "enum": [5, 10, 15, 20, 25, 30, 60, 120]
                                }
                              }
                            },
                            "inbound_audio_notification": {
                              "type": "object",
                              "properties": {
                                "recording_start_prompt": {
                                  "type": "boolean",
                                  "description": "Whether a prompt plays to call participants when the recording has started for inbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                                  "example": true
                                },
                                "recording_start_prompt_audio_id": {
                                  "type": "string",
                                  "description": "The audio that plays when the recording has started for inbound call. You can use this audio ID to get the audio information using [Get an audio item](https://developer.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt_audio_id`, `inbound_audio_notification.recording_start_prompt_audio_id`, and `outbound_audio_notification.recording_start_prompt_audio_id` always remain consistent.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt_audio_id` and `outbound_audio_notification.recording_start_prompt_audio_id` with the same value.",
                                  "example": "ySMexBgBQsioV8KKCUybTA"
                                },
                                "recording_explicit_consent": {
                                  "type": "boolean",
                                  "description": "Whether the **Press 1** option that provides recording consent for inbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` with the same value.",
                                  "example": true
                                }
                              }
                            },
                            "outbound_audio_notification": {
                              "type": "object",
                              "properties": {
                                "recording_start_prompt": {
                                  "type": "boolean",
                                  "description": "Whether a prompt plays to call participants when the recording has started for outbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                                  "example": true
                                },
                                "recording_start_prompt_audio_id": {
                                  "type": "string",
                                  "description": "The audio that plays when the recording has started for outbound call. You can use this audio ID to get the audio information using [Get an audio item](https://developer.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt_audio_id`, `inbound_audio_notification.recording_start_prompt_audio_id`, and `outbound_audio_notification.recording_start_prompt_audio_id` always remain consistent.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt_audio_id` and `outbound_audio_notification.recording_start_prompt_audio_id` with the same value.",
                                  "example": "ySMexBgBQsioV8KKCUybTA"
                                },
                                "recording_explicit_consent": {
                                  "type": "boolean",
                                  "description": "Whether the **Press 1** option that provides recording consent for outbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` with the same value.",
                                  "example": true
                                }
                              }
                            }
                          }
                        }
                      ]
                    },
                    "ad_hoc_call_recording": {
                      "type": "object",
                      "properties": {
                        "recording_transcription": {
                          "type": "boolean",
                          "description": "Whether the call recording transcription is enabled.",
                          "example": true
                        },
                        "allow_download": {
                          "type": "boolean",
                          "description": "Whether to allow the user to download their own ad-hoc recording.",
                          "example": true
                        },
                        "allow_delete": {
                          "type": "boolean",
                          "description": "Whether to allow user to delete their own ad-hoc recording.",
                          "example": true
                        },
                        "recording_start_prompt": {
                          "type": "boolean",
                          "description": "Whether a prompt plays to call participants when the recording has started.",
                          "example": true
                        },
                        "recording_explicit_consent": {
                          "type": "boolean",
                          "description": "Whether the **Press 1** option that provides recording consent is enabled.",
                          "example": true
                        },
                        "play_recording_beep_tone": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to play the side tone beep for recorded users while recording. It displays only when auto call recording policy uses the new framework.",
                              "example": true
                            },
                            "play_beep_member": {
                              "type": "string",
                              "description": "Whether to  play the recording beep tone all participants in the call or only the recording user. It displays only when `enable` is true.",
                              "example": "allMembers",
                              "enum": ["allMembers", "recordingUser"]
                            },
                            "play_beep_volume": {
                              "type": "integer",
                              "description": "The side tone beep volume. It displays only when `enable` is set to `true`.",
                              "example": 60,
                              "enum": [0, 20, 40, 60, 80, 100]
                            },
                            "play_beep_time_interval": {
                              "type": "integer",
                              "description": "The beep time interval in seconds. It displays only when the `enable` is set to true.",
                              "example": 15,
                              "enum": [5, 10, 15, 20, 25, 30, 60, 120]
                            }
                          }
                        }
                      },
                      "description": "Whether to allow extensions to record and save calls in the cloud.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "international_calling": {
                      "type": "object",
                      "description": "Whether to allow extensions to place international calls outside of the calling plan.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "outbound_calling": {
                      "type": "object",
                      "description": "Whether to define calling rules to restrict the user or extension from calling specific countries, cities, or numbers.   \n  Note: Only for use by customers who opted for OP flag `Enable New Version Outbound Blocked List`. ",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "outbound_sms": {
                      "type": "object",
                      "description": "Whether to allow users to send and receive messages. You must assign a valid calling plan and phone number to each user for them to send and receive messages.   \n  Note: Only for use by customers who opted for OP flag `Enable New Version Outbound Blocked List`. ",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "sms": {
                      "type": "object",
                      "description": "Whether to allow users to send and receive messages. You must assign a valid calling plan and phone number to each user for them to send and receive messages.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "international_sms": {
                              "type": "boolean",
                              "description": "Whether the user can send and receive international messages. You can set this field only if `sms` is enabled.",
                              "example": true
                            }
                          }
                        }
                      ]
                    },
                    "sms_etiquette_tool": {
                      "type": "object",
                      "properties": {
                        "sms_etiquette_policy": {
                          "type": "array",
                          "description": "The SMS etiquette policy. The maximum size is 50.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The SMS etiquette policy ID.",
                                "example": "PdPtFFDbQhKr05WepCHhWQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The SMS etiquette policy name.",
                                "example": "invalid symbol"
                              },
                              "description": {
                                "type": "string",
                                "description": "The SMS etiquette policy description.",
                                "example": "invalid symbol"
                              },
                              "rule": {
                                "type": "integer",
                                "description": "The SMS etiquette policy rule, `1` - Keywords, `2` - Regular Expression.",
                                "example": 1,
                                "enum": [1, 2]
                              },
                              "content": {
                                "type": "string",
                                "description": "The SMS etiquette policy content. For rule `1`, add keywords separated by comma, the following characters are supported A-Z, a-z, 0-9. For rule `2`, add regular expressions. Back references and zero-width assertions area are not supported.",
                                "example": "test"
                              },
                              "action": {
                                "type": "integer",
                                "description": "The actions taken when a policy is triggered, `1` - ask user to confirm sending of message, `2` - block the message.",
                                "example": 1,
                                "enum": [1, 2]
                              },
                              "active": {
                                "type": "boolean",
                                "description": "Whether active or not.",
                                "example": true
                              }
                            }
                          }
                        }
                      },
                      "description": "This field identifies defined keywords and text patterns over SMS and prevents users from sharing unwanted messages.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "zoom_phone_on_mobile": {
                      "type": "object",
                      "description": "Whether to allow user to use Zoom Phone on mobile clients (iOS, iPad OS and Android).",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "allow_calling_sms_mms": {
                              "type": "boolean",
                              "description": "This field allows calling and SMS or MMS functions on mobile.",
                              "example": true
                            }
                          }
                        }
                      ]
                    },
                    "zoom_phone_on_pwa": {
                      "type": "object",
                      "description": "Whether to allow users to use Zoom Phone on Zoom Progressive Web App.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "e2e_encryption": {
                      "type": "object",
                      "description": "Whether to allow users to switch their calls to End-to-End Encryption. If users have **Automatic Call Recording** turned on, they can't use End-to-End Encryption.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "call_handling_forwarding_to_other_users": {
                      "type": "object",
                      "description": "Whether to allow users to forward their calls to other numbers.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "call_forwarding_type": {
                              "type": "integer",
                              "description": "`1` - Low restriction (external numbers not allowed)\n`2` - Medium restriction (external numbers and external contacts not allowed)\n `3` - High restriction (external numbers, external contacts and internal extensions without inbound automatic call recording not allowed)\n`4` - No restriction",
                              "example": 1,
                              "enum": [1, 2, 3, 4]
                            }
                          }
                        }
                      ]
                    },
                    "call_overflow": {
                      "type": "object",
                      "description": "Whether to allow users to forward their calls to other numbers when a call is not answered",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "call_overflow_type": {
                              "type": "integer",
                              "description": "`1` - Low restriction (external numbers not allowed)\n`2` - Medium restriction (external numbers and external contacts not allowed)\n `3` - High restriction (external numbers, external contacts and internal extensions without inbound automatic call recording not allowed)\n`4` - No restriction",
                              "example": 1,
                              "enum": [1, 2, 3, 4]
                            }
                          }
                        }
                      ]
                    },
                    "call_transferring": {
                      "type": "object",
                      "description": "This field allows users to warm or blind transfer their calls. This does not apply to warm transfer on IP Phones except for Yealink. Voicemail is transferable only to internal extensions.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "call_transferring_type": {
                              "type": "integer",
                              "description": "1-No restriction.\n2-Medium restriction (external numbers and external contacts not allowed).\n3-High restriction (external numbers, unrecorded external contacts, and internal extensions without inbound automatic recording not allowed).\n4-Low restriction (external numbers not allowed).",
                              "example": 2,
                              "enum": [1, 2, 3, 4]
                            }
                          }
                        }
                      ]
                    },
                    "elevate_to_meeting": {
                      "type": "object",
                      "description": "Whether to allow users to elevate their phone calls to a meeting.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "call_park": {
                      "type": "object",
                      "properties": {
                        "expiration_period": {
                          "type": "integer",
                          "description": "A time limit for parked calls in minutes. After the expiration period ends, the retrieval code is no longer valid and a new code is generated.",
                          "example": 3,
                          "enum": [
                            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30, 35,
                            40, 45, 50, 55, 60
                          ]
                        },
                        "call_not_picked_up_action": {
                          "type": "integer",
                          "description": "The action when a parked call is not picked up. \n `100` - Ring back to parker \n`0` - Forward to voicemail of the parker \n`9` - Disconnect \n `50` - Forward to another extension",
                          "example": 50
                        },
                        "forward_to": {
                          "type": "object",
                          "properties": {
                            "display_name": {
                              "type": "string",
                              "description": "The extension's name.",
                              "example": "ZOOM_API Test"
                            },
                            "extension_id": {
                              "type": "string",
                              "description": "The extension ID.",
                              "example": "TO586CYlQFC_WCUvPRXytA"
                            },
                            "extension_number": {
                              "type": "integer",
                              "description": "The extension number.",
                              "example": 100014
                            },
                            "extension_type": {
                              "type": "string",
                              "description": "The type of extension: \n* `user` \n* `zoomRoom` \n* `commonArea`\n* `ciscoRoom/polycomRoom` \n* `autoReceptionist` \n* `sharedLineGroup` \n* `callQueue`",
                              "example": "user",
                              "enum": [
                                "user",
                                "zoomRoom",
                                "commonArea",
                                "ciscoRoom/polycomRoom",
                                "autoReceptionist",
                                "callQueue",
                                "sharedLineGroup"
                              ]
                            },
                            "id": {
                              "type": "string",
                              "description": "The ID of the extension `user`, `zoomRoom`, `commonArea`, `ciscoRoom/polycomRoom`, `autoReceptionist`, `callQueue` or `sharedLineGroup`.",
                              "example": "oG_nYRFuTJiY1tu0Fur_4Q"
                            }
                          },
                          "description": "The extension's forwarding information."
                        },
                        "sequence": {
                          "type": "integer",
                          "description": "This field is only used in the new policy framework. You can choose how parked calls are assigned to a Busy Lamp Field (BLF) key. Sequential assignment parks the call at the next available BLF key. Random assignment parks the call at a randomly selected BLF key. \n`0` - Random \n`1` - Sequential",
                          "example": 1,
                          "enum": [0, 1]
                        }
                      },
                      "description": "Whether to allow calls placed on hold to resume from another location using a retrieval code.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "hand_off_to_room": {
                      "type": "object",
                      "description": "Whethet to allow users to send a call to a Zoom Room.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "mobile_switch_to_carrier": {
                      "type": "object",
                      "description": "Whether to allow the user to switch from a Zoom Phone to their native carrier.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "delegation": {
                      "type": "object",
                      "description": "Whether the user can use [call delegation](https://support.zoom.us/hc/en-us/articles/360032881731-Setting-up-call-delegation-shared-lines-appearance-).",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "audio_intercom": {
                      "type": "object",
                      "description": "Whether to allow hands-free peer-to-peer conversations. When an intercom call is received, the phone beeps to notify the user of the incoming intercom call, and the user's phone automatically answers the intercom call.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "block_calls_without_caller_id": {
                      "type": "object",
                      "description": "Whether calls without caller ID are blocked.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "block_external_calls": {
                      "type": "object",
                      "properties": {
                        "block_business_hours": {
                          "type": "boolean",
                          "example": true
                        },
                        "block_closed_hours": {
                          "type": "boolean",
                          "example": true
                        },
                        "block_holiday_hours": {
                          "type": "boolean",
                          "example": true
                        },
                        "block_call_action": {
                          "type": "integer",
                          "description": "The action when a call is blocked. `9` - Disconnect, `0`- Forward to voicemail/videomail.",
                          "example": 0,
                          "enum": [0, 9]
                        }
                      },
                      "description": "This field allows you to set rules for blocking external calls during business, closed, and holiday hours. This feature is only available for user, Zoom Room, and common areas.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "call_queue_opt_out_reason": {
                      "type": "object",
                      "properties": {
                        "call_queue_opt_out_reasons_list": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "code": { "type": "string", "example": "Break" },
                              "system": {
                                "type": "boolean",
                                "description": "The system default reason. It cannot be edited.",
                                "example": true
                              },
                              "enable": { "type": "boolean", "example": true }
                            }
                          }
                        }
                      },
                      "description": "This field sets the opt-out reasons for call queues. When enabled, call queue members should select an opt-out reason when they turn off the `receive queue call` feature.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "auto_delete_data_after_retention_duration": {
                      "type": "object",
                      "properties": {
                        "items": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "description": "The data types.",
                                "example": "callLog",
                                "enum": [
                                  "callLog",
                                  "onDemandRecording",
                                  "automaticRecording",
                                  "voicemail",
                                  "videomail",
                                  "sms"
                                ]
                              },
                              "duration": {
                                "type": "integer",
                                "description": "The retention duration where -1 means unlimited. For units of time, see the `time_unit` below. For `year`, the duration:-1, 1-10; for `day`, the duration:-1, 1-60; for `month`, the duration:-1, 1-18.",
                                "example": -1
                              },
                              "time_unit": {
                                "type": "string",
                                "description": "The unit of time.",
                                "example": "year",
                                "enum": ["year", "month", "day"]
                              }
                            }
                          }
                        },
                        "delete_type": {
                          "type": "integer",
                          "description": "The deletion policy.   \n * 1 - soft delete   \n * 2 - permanent delete",
                          "example": 1,
                          "enum": [1, 2]
                        }
                      },
                      "description": "This field allows Zoom to automatically delete data after the retention duration has lapsed.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "auto_call_from_third_party_apps": {
                      "type": "object",
                      "description": "This field allows the user to perform call control actions from authorized Zoom Marketplace apps.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "override_default_port": {
                      "type": "object",
                      "properties": {
                        "min_port": { "type": "integer", "example": 9000 },
                        "max_port": { "type": "integer", "example": 9998 }
                      },
                      "description": "This field sets a range for port assignment. Zoom desktop, mobile clients, Zoom Rooms, and Zoom Phone Appliances use ports during a call. The range should be between 9,000 and 9,999. At least 50 ports need to be configured to ensure the functionality is not affected.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "peer_to_peer_media": {
                      "type": "object",
                      "description": "Whether to allow Zoom clients to send media directly to each other. Users or devices that have certain features enabled, such as recording or monitoring, might not be able to use peer to peer media.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "advanced_encryption": {
                      "type": "object",
                      "properties": {
                        "disable_incoming_unencrypted_voicemail": {
                          "type": "boolean",
                          "description": "Whether to disable incoming unencrypted voicemail.",
                          "example": true
                        }
                      },
                      "description": "Whether to allow voicemail to be encrypted with keys that are not accessible to Zoom servers. These Voicemail can be decrypted only by the intended user recipient. Shared Line Appearance, Shared Line Group, Call Queue, or Auto Receptionist Voicemail is encrypted, but can still be played. Email to Voicemail, transcriptions, checking Voicemails by dialing into the Voicemail system, or web is not available when this feature is enabled. This policy requires a Power Pack license to be enabled. If the user does who inherits this policy does not have a Power Pack license, the policy is not applied. Settings is only available with client version 5.12 or later.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "display_call_feedback_survey": {
                      "type": "object",
                      "properties": {
                        "feedback_type": {
                          "type": "integer",
                          "description": "This field allows you to display feedback survey, `1` - display for every call, `2` - display when call quality issues are detected. Default `1`, if set with value `2`, need to set `feed_back_mos` or `feedback_duration`.",
                          "example": 1,
                          "enum": [1, 2]
                        },
                        "feedback_mos": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "min": { "type": "string", "example": "1.1" },
                            "max": { "type": "string", "example": "3.0" }
                          },
                          "description": "The MOS score. Min: 1.0, Max: 3.0, format one decimal point."
                        },
                        "feedback_duration": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "min": { "type": "integer", "example": 0 },
                            "max": { "type": "integer", "example": 60 }
                          },
                          "description": "The call duration, in seconds, 0-60."
                        }
                      },
                      "description": "Whether to display a thumbs up or down survey at the end of each call. If participants respond with thumbs down, they can provide additional information about what went wrong.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "block_list_for_inbound_calls_and_messaging": {
                      "description": "Whether to allow users and administrators to block inbound calls and SMS/MMS from phone numbers or prefixes.\n\nNote: Only for use by customers who opted for OP flag `Enable New Version Inbound Blocked List`.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account"]
                            }
                          }
                        }
                      ]
                    },
                    "block_calls_as_threat": {
                      "description": "Whether to allow users to block and classify calls as threat. \n\nInbound calls from these phones numbers can be configured with custom handling options.\n\n**Note**: Only customers who opted for OP flag `Enable New Version Inbound Blocked List` can use this feature.",
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "invalid"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Setting type(s) supplied in query parameter setting_types is invalid. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_account_settings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_account_settings:admin"]
        }
      }
    },
    "/phone/outbound_caller_id/customized_numbers": {
      "get": {
        "tags": ["Accounts"],
        "summary": "List an account's customized outbound caller ID phone numbers",
        "description": "Retrieves phone numbers that can be used as the `account-level` customized outbound caller ID. Note that when multiple sites policy is enabled, users cannot manage the `account-level` configuration. The system will throw an exception. \n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license.\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_customized_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "listCustomizeOutboundCallerNumbers",
        "parameters": [
          {
            "name": "selected",
            "in": "query",
            "description": "The status of the phone numbers.  \n  `true`- Numbers already added to the custom list.   \n  `false`- Numbers not yet added to the custom list",
            "required": false,
            "schema": { "type": "boolean", "example": true }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "This field filters phone numbers that belong to the site.",
            "required": false,
            "schema": { "type": "string", "example": "SQv52YtkRLC2dwrDdYtGsA" }
          },
          {
            "name": "extension_type",
            "in": "query",
            "description": "The type of extension to which the phone number belongs.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "callQueue",
              "enum": ["autoReceptionist", "callQueue", "sharedLineGroup"]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "A search keyword for phone or extension numbers.",
            "required": false,
            "schema": { "type": "string", "example": "408" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nCustomized numbers for outbound caller ID listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customize_numbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "customize_id": {
                            "type": "string",
                            "description": "The customization ID.",
                            "example": "8_RkKw9OQ42oYsXqJJjs4A"
                          },
                          "phone_number_id": {
                            "type": "string",
                            "description": "The ID of the phone number.",
                            "example": "55JUZPwERHuGttd_j4qBsQ"
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number in E164 format.",
                            "example": "+12055437350"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "Name of the phone number.",
                            "example": "test abc"
                          },
                          "incoming": {
                            "type": "boolean",
                            "description": "Whether the incoming policy is enabled for the phone number.",
                            "example": true
                          },
                          "outgoing": {
                            "type": "boolean",
                            "description": "Whether the outgoing policy is enabled for the phone number.",
                            "example": true
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "The extension ID.",
                            "example": "HaSokHMCSeK8taMdv2vnXQ"
                          },
                          "extension_type": {
                            "type": "string",
                            "description": "The extension type.",
                            "example": "callQueue"
                          },
                          "extension_number": {
                            "type": "string",
                            "description": "The extension number.",
                            "example": "10001"
                          },
                          "extension_name": {
                            "type": "string",
                            "description": "The extension name.",
                            "example": "SJ CQ"
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the site.",
                                "example": "testSite"
                              }
                            }
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call for each page.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_customized_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_customized_number:admin"]
        }
      },
      "post": {
        "tags": ["Accounts"],
        "summary": "Add phone numbers for an account's customized outbound caller ID",
        "description": "Adds the `account-level` customized outbound caller ID phone numbers. Note that when multiple sites policy is enabled, users cannot manage the `account-level` configuration. The system will throw an exception.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:customized_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addOutboundCallerNumbers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone_number_ids": {
                    "maximum": 30,
                    "type": "array",
                    "description": "The phone number IDs.",
                    "items": {
                      "type": "string",
                      "example": "55JUZPwERHuGttd_j4qBsQ"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \nCustomized caller ID numbers added successfully.",
            "content": { "application/json": { "schema": {} } }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nValidation Failed. Site does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:customized_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:customized_number:admin"]
        }
      },
      "delete": {
        "tags": ["Accounts"],
        "summary": "Delete phone numbers for an account's customized outbound caller ID",
        "description": "Deletes the `account-level` customized outbound caller ID phone numbers. Note that when multiple sites policy is enabled, users cannot manage the `account-level` configuration. The system will throw an exception.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:customized_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteOutboundCallerNumbers",
        "parameters": [
          {
            "name": "customize_ids",
            "in": "query",
            "description": "The customization IDs.",
            "required": false,
            "schema": {
              "maxItems": 30,
              "type": "array",
              "items": { "type": "string", "example": "8_RkKw9OQ42oYsXqJJjs4A" }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **Created**  \n \nCustomized numbers have been deleted successfully.  "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nValidation Failed. Site does not exist.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:customized_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:customized_number:admin"]
        }
      }
    },
    "/phone/alert_settings": {
      "get": {
        "tags": ["Alerts"],
        "summary": "List alert settings with paging query",
        "description": "Gets [alert settings](https://support.zoom.us/hc/en-us/articles/7146944434445) for an account with paging query.\n\n**Prerequisites**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_alert_settings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "ListAlertSettingsWithPagingQuery",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records a single API call returns.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The current page number of the returned records.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2z0Ov7kngllAbfQi4ZR2eQTb3mFVYQpYAe2"
            }
          },
          {
            "name": "module",
            "in": "query",
            "description": "This field filters the specific alert list by the module. The module and its code mappings are shown as:  \n \n`Call Queue Management`-`1`, `Route Group Management`-`2`, `Devices &amp; Phones Management`-`3`, `Call Quality Management`-`4`, `Emergency Services Management`-`5`",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1,
              "enum": [1, 2, 3, 4, 5]
            }
          },
          {
            "name": "rule",
            "in": "query",
            "description": "This field filters the specific alert list by the rule. The rule and its code mappings display as:  \n \n`Service Level`-`1`, `Inbound Abandoned Calls`-`2`, `Inbound Overflowed Calls`-`3`, `Inbound Avg Call Waiting Time`-`4`, `Inbound Forwarded to Voicemail`-`5`, `Number of Waiting Calls`-`6`, `Member Availability (Active)`-`7`, `Member Availability (Opt-in/Opt-out)`-`8`, `Route groups status change`-`9`, `Devices go offline`-`10`, `Devices go online`-`11`, `Device offline rate`-`12`, `QoS Alert`-`13`, `Emergency Call Alert`-`14`.  \n \nWhen the value of the `module` is `1`, the value of `rule` can only be in the range of `1` to `8`.   \n \nWhen the value of the `module` is `2`, the value of `rule` can only be `9`.  \n \nWhen the value of the `module` is `3`, the value of `rule` can only be in the range of `10` to `12`.  \n \nWhen the value of the `module` is `4`, the value of `rule` can only be `13`.  \n \nWhen the value of the `module` is `5`, the value of `rule` can only be `14`.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1,
              "enum": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The alert's status:\n* `0` &mdash; Inactive.\n* `1` &mdash; Active.",
            "required": false,
            "schema": { "type": "integer", "example": 1, "enum": [0, 1] }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nAlert settings listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of the available result list exceeds the page size.",
                      "example": "2z0Ov7kngllAbfQi4ZR2eQTb3mFVYQpYAe3"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The size of each page.",
                      "example": 30
                    },
                    "alert_settings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "alert_setting_id": {
                            "type": "string",
                            "description": "The unique identifier of the alert setting.",
                            "example": "uvsOCaiDQR2M-NviKFHo0w"
                          },
                          "alert_setting_name": {
                            "type": "string",
                            "description": "The name of the alert setting.",
                            "example": "Call Queue Alert"
                          },
                          "module": {
                            "type": "integer",
                            "description": "The module of the alert. The module and its code mappings display as:  \n \n`Call Queue Management`-`1`, `Route Group Management`-`2`, `Devices &amp; Phones Management`-`3`, `Call Quality Management`-`4`, `Emergency Services Management`-`5`",
                            "example": 1
                          },
                          "rule": {
                            "type": "integer",
                            "description": "The rule of the alert. The rule and its code mappings display as:  \n \n`Service Level`-`1`, `Inbound Abandoned Calls`-`2`, `Inbound Overflowed Calls`-`3`, `Inbound Avg Call Waiting Time`-`4`, `Inbound Forwarded to Voicemail`-`5`, `Number of Waiting Calls`-`6`, `Member Availability (Active)`-`7`, `Member Availability (Opt-in/Opt-out)`-`8`, `Route groups status change`-`9`, `Devices go offline`-`10`, `Devices go online`-`11`, `Device offline rate`-`12`, `QoS Alert`-`13`, `Emergency Call Alert`-`14`.",
                            "example": 1
                          },
                          "rule_conditions": {
                            "type": "array",
                            "description": "The rule conditions.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "rule_condition_type": {
                                  "type": "integer",
                                  "description": "The condition type. \n* `1`-`Threshold` \n* `2`-`Warning` \n* `3`-`Critical` \n* `4`-`Alert` \n* `5`-`Severity`.   \n \n The `Threshold` is used in the case of the `Service Level` rule.   \n \n The `Warning` or `Critical` is used in the case of the `Service Level` or `Inbound Abandoned Calls` or `Inbound Overflowed Calls` or `Number of Waiting Calls` or `Inbound Forwarded to Voicemail` or `Member Availability (Active)` or `Member Availability (Opt-in/Opt-out)` or `Device offline rate` or `Inbound Avg Call Waiting Time` or `QoS Alert` rule.   \n \n The `Alert` is used in the case of the `Devices go offline` or `device_online_time` rule.   \n \n The `Severity` is used in the case of the `Emergency Call Alert` or `Route groups status change` rule.",
                                  "example": 5,
                                  "enum": [1, 2, 3, 4, 5]
                                },
                                "rule_condition_value": {
                                  "type": "string",
                                  "description": "The rule condition value.  \n \n In the case of the value of `rule_condition_type`  is `1`, the available values: `15`, `30`, `60`, `120`, `180`, `240`, `300`.   \n \n In the case of the value of `rule_condition_type `is `2` or `3`, when the value of `rule` represents `Service Level` or `Inbound Abandoned Calls` or `Inbound Overflowed Calls` or `Inbound Forwarded to Voicemail` or `Member Availability (Active)` or `Member Availability (Opt-in/Opt-out)` or `Device offline rate`, the unit is `percentage`, the value can only be in the range of `1` to `100`, when the value of `rule` represents `Inbound Avg Call Waiting Time`, the unit is `seconds`, the available values: `10`, `15`, `20`, `25`, `30`, `45`, `60`, `120`, `180`, `240`, `300`, `600`, `900`, `1200`, `1500`, `1800`, when the value of `rule` represents `QoS Alert`, the value can be only in the range of `0` to `5`.   \n \n In the case of the value of `rule_condition_type` is `4`, the available values:`5`, `10`, `15`,`30`,`60`.  \n \nIn the case of the value of `rule_condition_type` is `5`,the available values:`Warning`,`Critical`.",
                                  "example": "Warning"
                                }
                              }
                            }
                          },
                          "targets": {
                            "type": "array",
                            "description": "The targets of the alert.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "target_name": {
                                  "type": "string",
                                  "description": "The target name.",
                                  "example": "test api"
                                }
                              }
                            }
                          },
                          "time_frame_type": {
                            "type": "string",
                            "description": "The time frame type.  \n \nThe available values: `all_day`, `specific_time`",
                            "example": "specific_time",
                            "enum": ["all_day", "specific_time"]
                          },
                          "time_frame_from": {
                            "type": "string",
                            "description": "The start time of time frame in which the alert was triggered, in `HH:mm:ss` format.   \n \nWhen the `time_frame_type` is `all_day`, the value is `00:00:00`",
                            "example": "08:30:00"
                          },
                          "time_frame_to": {
                            "type": "string",
                            "description": "The end time of time frame in which the alert was triggered, in `HH:mm:ss` format.   \n \nWhen the `time_frame_type` is `all_day`, the value is `00:00:00`",
                            "example": "18:00:00"
                          },
                          "frequency": {
                            "type": "integer",
                            "description": "The frequency of alert triggers. The unit is `minutes`.   \n \n When the value of `module` represents `Call Queue Management` or `Route Group Management` or `Devices &amp; Phones Management` or `Call Quality Management`, it will be used.",
                            "example": 5,
                            "enum": [5, 10, 15, 30, 60]
                          },
                          "email_recipients": {
                            "type": "array",
                            "description": "The email addresses of recipients.",
                            "items": {
                              "type": "string",
                              "example": "test@example.com"
                            }
                          },
                          "chat_channels": {
                            "type": "array",
                            "description": "The chat channels.   \n \n This field applies when the value of `module` represents `Call Queue Management` or `Route Group Management` or `Devices &amp; Phones Management` or `Call Quality Management`.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "chat_channel_name": {
                                  "type": "string",
                                  "description": "The channel name.",
                                  "example": "ApiTA_Site_2020_07_21_11_02_26_901"
                                },
                                "token": {
                                  "type": "string",
                                  "description": "The verification token.",
                                  "example": "eyJhbGciOiJIUzUxMiIsInYiOiIy"
                                },
                                "end_point": {
                                  "type": "string",
                                  "description": "The end point.",
                                  "example": "https://www.testexample.com"
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "integer",
                            "description": "The alert's status:\n* `0` &mdash; Inactive.\n* `1` &mdash; Active.",
                            "example": 1,
                            "enum": [0, 1]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13000` <br>\n Only power pack user can get CQ rules.<br> <br>\n**Error Code:** `13001` <br>\n Non super admin can only list CQ rules.<br> <br>\n**Error Code:** `13002` <br>\n Current operation is not allowed, please contact support.<br> <br>\n**Error Code:** `13012` <br>\n The module:{0} does not support this rule:{1}.<br> <br>\n**Error Code:** `403` <br>\n You do not have permission. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized \n\n **Error Code:** `124` <br>\n Account does not exist: {accountId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_alert_settings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_alert_settings:admin"]
        }
      },
      "post": {
        "tags": ["Alerts"],
        "summary": "Add an alert setting",
        "description": "[Adds an alert setting](https://support.zoom.us/hc/en-us/articles/7146944434445).\n\n**Prerequisites:**  \n \n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:alert_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "AddAnAlertSetting",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "alert_setting_name",
                  "module",
                  "rule",
                  "rule_conditions",
                  "target_type",
                  "time_frame_from",
                  "time_frame_to",
                  "time_frame_type"
                ],
                "type": "object",
                "properties": {
                  "alert_setting_name": {
                    "type": "string",
                    "description": "The name of the alert setting.",
                    "example": "Call Queue Alert"
                  },
                  "module": {
                    "type": "integer",
                    "description": "The module of the alert. The module and its code mappings are shown as:\n\n `Call Queue Management`-`1`, `Route Group Management`-`2`, `Devices &amp; Phones Management`-`3`, `Call Quality Management`-`4`, and `Emergency Services Management`-`5`",
                    "example": 1
                  },
                  "rule": {
                    "type": "integer",
                    "description": "The rule of the alert. The rule and its code mappings are shown as: \n\n`Service Level`-`1`, `Inbound Abandoned Calls`-`2`, `Inbound Overflowed Calls`-`3`, `Inbound Avg Call Waiting Time`-`4`, `Inbound Forwarded to Voicemail`-`5`, `Number of Waiting Calls`-`6`, `Member Availability (Active)`-`7`, `Member Availability (Opt-in/Opt-out)`-`8`, `Route groups status change`-`9`, `Devices go offline`-`10`, `Devices go online`-`11`, `Device offline rate`-`12`, `QoS Alert`-`13`, and `Emergency Call Alert`-`14`. \n\nWhen the value of the `module` is `1`, the value of `rule` can only be in the range of `1` to `8`. \n\nWhen the value of the `module` is `2`, the value of `rule` can only be `9`. \n\nWhen the value of the `module` is `3`, the value of `rule` can only be in the range of `10` to `12`. \n\nWhen the value of the `module` is `4`, the value of `rule` can only be `13`. \n\nWhen the value of the `module` is `5`, the value of `rule` can only be `14`. \n\n Alerts of rule `7` or rule `8` cannot exceed 30 in number.",
                    "example": 1
                  },
                  "target_type": {
                    "type": "integer",
                    "description": "The target type. \n* `1`-`User` \n* `2`-`Account` \n* `3`-`Call Queue` \n* `4`-`Site` \n* `5`-`Device`",
                    "example": 1,
                    "enum": [1, 2, 3, 4, 5]
                  },
                  "target_ids": {
                    "type": "array",
                    "description": "The target IDs of the alert. The target type can be `User`, `Account`, `Call Queue`, `Site`, and  `Device`. \n\nWhen the value of `rule` is in the range of `1` to `8`, it only supports the `Call Queue` and if the number of `Call Queue` is `1`, you should pass the `Extension ID` of the specific call queue. \n\nWhen the value of the `rule` is `9`, it can only support the `Account`. You only need to specify the value of `target_type`. This field doesn't need a specified value. \n\nWhen the value of the `rule` is `10`, it can support the `Account` or `Device`. If you want to set the `Account`, you only need to specify the value of `target_type`. This field doesn't need a specified value. If you want to set the `Device`, you should pass the `Device ID` of the specific device. The number of `Device` is up to `5`. \n\nWhen the value of the `rule` is `11`, it can support the `Device`. The number of `Device` is up to `5`. You should pass the `Device ID` of the specific device. \n\nWhen the value of the `rule` is `12`, it can support the `Site` and the number of `Site` is `1`. You should pass the `Site ID` of the specific site. \n\nWhen the value of the `rule` is `13`, it can support the `User` and the number of `User` is up to `5`. You should pass the `Extension ID` of the specific user. \n\nWhen the value of the `rule` is `14`, it can support the `Site` and the number of `Site` is `1`. You should pass the `Site ID` of the specific site.",
                    "items": {
                      "type": "string",
                      "example": "1PXbl7s6Q52nbePrUxUZTg"
                    }
                  },
                  "rule_conditions": {
                    "type": "array",
                    "description": "The rule conditions.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rule_condition_type": {
                          "type": "integer",
                          "description": "The condition type. \n* `1`-`Threshold` \n* `2`-`Warning` \n* `3`-`Critical` \n* `4`-`Alert` \n* `5`-`Severity` \n\nWe use the `Threshold` for the `Service Level` rule. \n\nWe use the `Warning` or `Critical` for: `Service Level`, `Inbound Abandoned Calls`, `Inbound Overflowed Calls`, `Inbound Forwarded to Voicemail`, `Number of Waiting Calls`, `Member Availability (Active)`, `Member Availability (Opt-in/Opt-out)`, `Device offline rate`, `Inbound Avg Call Waiting Time`, or `QoS Alert` rule. \n\nWe use `Alert` for the `Devices go offline` or `Devices go online` rule. \n\nWe use `Severity` for the `Emergency Call Alert` or `Route groups status change` rule.",
                          "example": 5,
                          "enum": [1, 2, 3, 4, 5]
                        },
                        "rule_condition_value": {
                          "type": "string",
                          "description": "The rule condition value. \n\n`rule_condition_type` is `1`: The available values are `15`, `30`, `60`, `120`, `180`, `240`, `300`. \n\n`rule_condition_type `is `2` or `3`: When the value of `rule` represents `Service Level`, `Inbound Abandoned Calls`, `Inbound Overflowed Calls`, `Inbound Forwarded to Voicemail`, `Member Availability (Active)`, `Member Availability (Opt-in/Opt-out)`, or `Device offline rate`, the unit is `percentage`. The value can only be in the range of `1` to `100`. When the value of `rule` represents `Inbound Avg Call Waiting Time`, the unit is `seconds`. The available values are `10`, `15`, `20`, `25`, `30`, `45`, `60`, `120`, `180`, `240`, `300`, `600`, `900`, `1200`, `1500`, and `1800`. When the value of `rule` represents `QoS Alert`, the value can be only in the range of `0` to `5`. \n\n`rule_condition_type` is `4`: The available values:`5`, `10`, `15`,`30`, and `60`. \n\n`rule_condition_type` is `5`: The available values are`Warning` and `Critical`.",
                          "example": "Warning"
                        }
                      }
                    }
                  },
                  "time_frame_type": {
                    "type": "string",
                    "description": "The time frame type. \n\nThe available values: `all_day` and `specific_time`",
                    "example": "specific_time",
                    "enum": ["all_day", "specific_time"]
                  },
                  "time_frame_from": {
                    "type": "string",
                    "description": "The start time of time frame in which the alert was triggered, in `HH:mm:ss` format. \n\nWhen the `time_frame_type` is `all_day`, the value is `00:00:00`. \n\nThe value should be either at the whole hour or at half past the hour.",
                    "example": "08:30:00"
                  },
                  "time_frame_to": {
                    "type": "string",
                    "description": "The end time of time frame in which the alert was triggered, in `HH:mm:ss` format. \n\nWhen the `time_frame_type` is `all_day`, the value is `00:00:00`. \n\nThe value should be either at the whole hour or at half past the hour.",
                    "example": "18:00:00"
                  },
                  "frequency": {
                    "type": "integer",
                    "description": "The frequency of alert triggers. The unit is `minutes`. \n\nWhen the value of `module` represents `Call Queue Management` or `Route Group Management` or `Devices &amp; Phones Management` or `Call Quality Management`, it will be used.",
                    "example": 5,
                    "enum": [5, 10, 15, 30, 60]
                  },
                  "email_recipients": {
                    "type": "array",
                    "description": "The email addresses of recipients. The number of the emails is up to `10`",
                    "items": { "type": "string", "example": "test@example.com" }
                  },
                  "chat_channels": {
                    "type": "array",
                    "description": "The chat channels. It's used When the value of `module` represents `Call Queue Management`, `Route Group Management`, `Devices &amp; Phones Management`, and `Call Quality Management`. The number of the chat channels is up to `3`",
                    "items": {
                      "type": "object",
                      "properties": {
                        "chat_channel_name": {
                          "type": "string",
                          "description": "The channel name",
                          "example": "ApiTA_Site_2020_07_21_11_02_26_901"
                        },
                        "token": {
                          "type": "string",
                          "description": "The verification token.",
                          "example": "eyJhbGciOiJIUzUxMiIsInYiOiIy"
                        },
                        "end_point": {
                          "type": "string",
                          "description": "The end point.",
                          "example": "https://www.testexample.com"
                        }
                      }
                    }
                  },
                  "status": {
                    "type": "integer",
                    "description": "The alert's status: \n* `0` — Inactive. \n* `1` — Active.",
                    "example": 1,
                    "enum": [0, 1]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \nAlert setting added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alert_setting_id": {
                      "type": "string",
                      "description": "The unique identifier of the alert setting.",
                      "example": "uvsOCaiDQR2M-NviKFHo0w"
                    },
                    "alert_setting_name": {
                      "type": "string",
                      "description": "The name of the alert setting.",
                      "example": "Call Queue Alert"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n Validation Failed<br> <br>\n**Error Code:** `13004` <br>\n Alert rule on this target already exists.<br> <br>\n**Error Code:** `13005` <br>\n This alert can only be set up once.<br> <br>\n**Error Code:** `13006` <br>\n The number of target is invalid. <br> <br>\n**Error Code:** `13007` <br>\n The number of email recipients is invalid. <br> <br>\n**Error Code:** `13008` <br>\n The number of chat channels is invalid.<br> <br>\n**Error Code:** `13009` <br>\n Fail to create alert.<br> <br>\n**Error Code:** `13010` <br>\n Invalid parameters.<br> <br>\n**Error Code:** `13012` <br>\n The module:{0} does not support this rule:{1}.<br> <br>\n**Error Code:** `13013` <br>\n The rule:{0} does not support this target type:{1}.<br> <br>\n**Error Code:** `13014` <br>\n The target id:{0} is invalid.<br> <br>\n**Error Code:** `403` <br>\n You do not have permission.<br> <br>\n**Error Code:** `13015` <br>\n The rule:{0} can not support the rule condition type:{1}.<br> <br>\n**Error Code:** `13016` <br>\n The rule:{0} is missing the rule condition type:{1}.<br> <br>\n**Error Code:** `13017` <br>\n The value of the rule condition type:{0} is invalid.<br> <br>\n**Error Code:** `13018` <br>\n The value of alert field:{0} is invalid.<br> <br>\n**Error Code:** `13019` <br>\n The group does not exist, groupId:{0}.<br> <br>\n**Error Code:** `13020` <br>\n There are duplicated rule condition types.<br> <br>\n**Error Code:** `13021` <br>\n The rule condition value can not be same.<br> <br>\n**Error Code:** `13022` <br>\n The number of alerts for this module:{0} has reached the limit, and it is not allowed to create alerts of this rule:{1}.<br> <br>\n**Error Code:** `13023` <br>\n The number of email recipients is invalid.<br> <br>\n**Error Code:** `13024` <br>\n The number of chat channels is invalid. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:alert_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:alert_setting:admin"]
        }
      }
    },
    "/phone/alert_settings/{alertSettingId}": {
      "get": {
        "tags": ["Alerts"],
        "summary": "Get alert setting details",
        "description": "Returns detailed information about a specific [alert setting](https://support.zoom.us/hc/en-us/articles/7146944434445).\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:alert_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "GetAlertSettingDetails",
        "parameters": [
          {
            "name": "alertSettingId",
            "in": "path",
            "description": "The unique Identifier of the alert setting.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n\n Alert setting information retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alert_setting_id": {
                      "type": "string",
                      "description": "The unique identifier of the alert setting.",
                      "example": "uvsOCaiDQR2M-NviKFHo0w"
                    },
                    "alert_setting_name": {
                      "type": "string",
                      "description": "The name of the alert setting.",
                      "example": "Call Queue Alert"
                    },
                    "module": {
                      "type": "integer",
                      "description": "The module of the alert. The module and its code mappings displays as: `Call Queue Management`-`1`, `Route Group Management`-`2`, `Devices &amp; Phones Management`-`3`, `Call Quality Management`-`4`, `Emergency Services Management`-`5`",
                      "example": 1
                    },
                    "rule": {
                      "type": "integer",
                      "description": "The rule of the alert. The rule and its code mappings displays as: `Service Level`-`1`, `Inbound Abandoned Calls`-`2`, `Inbound Overflowed Calls`-`3`, `Inbound Avg Call Waiting Time`-`4`, `Inbound Forwarded to Voicemail`-`5`, `Number of Waiting Calls`-`6`, `Member Availability (Active)`-`7`, `Member Availability (Opt-in/Opt-out)`-`8`, `Route groups status change`-`9`, `Devices go offline`-`10`, `Devices go online`-`11`, `Device offline rate`-`12`, `QoS Alert`-`13`, `Emergency Call Alert`-`14`.",
                      "example": 1
                    },
                    "rule_conditions": {
                      "type": "array",
                      "description": "The rule conditions.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rule_condition_type": {
                            "type": "integer",
                            "description": "The condition type. \n* `1`-`Threshold` \n* `2`-`Warning` \n* `3`-`Critical` \n* `4`-`Alert` \n* `5`-`Severity`. \n\nThe `Threshold` is used for the `Service Level` rule. \n\nThe `Warning` or `Critical` is used for the `Service Level`, `Inbound Abandoned Calls`, `Inbound Overflowed Calls`, `Number of Waiting Calls`, `Inbound Forwarded to Voicemail`, `Member Availability (Active)`, `Member Availability (Opt-in/Opt-out)`, `Device offline rate`, `Inbound Avg Call Waiting Time`, or `QoS Alert` rule. \n\nThe `Alert` is used for the `Devices go offline` or `device_online_time` rule. \n\nThe `Severity` is used for the `Emergency Call Alert` or `Route groups status change` rule.",
                            "example": 1,
                            "enum": [1, 2, 3, 4, 5]
                          },
                          "rule_condition_value": {
                            "type": "string",
                            "description": "The rule condition value. \n\n If the `rule_condition_type` is `1`, the available values are `15`, `30`, `60`, `120`, `180`, `240`, and `300`. \n\nIn the case of the value of `rule_condition_type `is `2` or `3`, when the value of `rule` represents `Service Level`, `Inbound Abandoned Calls`, `Inbound Overflowed Calls`, `Inbound Forwarded to Voicemail`, `Member Availability (Active)`, `Member Availability (Opt-in/Opt-out)`, or `Device offline rate`, the unit is `percentage`. The value can only be in the range of `1` to `100`, when the value of `rule` represents `Inbound Avg Call Waiting Time`, the unit is `seconds`. The available values are `10`, `15`, `20`, `25`, `30`, `45`, `60`, `120`, `180`, `240`, `300`, `600`, `900`, `1200`, `1500`, and `1800`. When the value of `rule` represents `QoS Alert`, the value can be only in the range of `0` to `5`. \n\nIn the case of the value of `rule_condition_type` is `4`, the available values are`5`, `10`, `15`,`30`, and `60`. \n\nIn the case of the value of `rule_condition_type` is `5`, the available values are `Warning` and`Critical`.",
                            "example": "Warning"
                          }
                        }
                      }
                    },
                    "targets": {
                      "type": "array",
                      "description": "The targets of the alert.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "target_id": {
                            "type": "string",
                            "description": "The target ID.",
                            "example": "-GHFnf5WQe-H-_r0Wwx9iQ"
                          },
                          "target_name": {
                            "type": "string",
                            "description": "The target name.",
                            "example": "test api"
                          },
                          "target_type": {
                            "type": "integer",
                            "description": "The target type. \n* `1`-`User` \n* `2`-`Account` \n* `3`-`Call Queue` \n* `4`-`Site` \n* `5`-`Device`",
                            "example": 1,
                            "enum": [1, 2, 3, 4, 5]
                          },
                          "target_extension_number": {
                            "type": "integer",
                            "description": "The extension number of the Zoom Phone that the `User` uses.",
                            "format": "int64",
                            "example": 123
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user.",
                                "example": "123123"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672).",
                                "example": "Main Site"
                              }
                            }
                          },
                          "assignees": {
                            "type": "array",
                            "description": "This field applies when the the value of `target_type` represents `Devices`.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extension_number": {
                                  "type": "integer",
                                  "description": "The extension number of the Zoom Phone the `user` or `commonArea` uses.",
                                  "format": "int64",
                                  "example": 123
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name.",
                                  "example": "Pooja"
                                },
                                "extension_type": {
                                  "type": "string",
                                  "description": "The type of the assignee. Its available only if the device is assigned.",
                                  "example": "user",
                                  "enum": ["user", "commonArea"]
                                },
                                "extension_id": {
                                  "type": "string",
                                  "description": "The extension ID of the `user` or `common area`.",
                                  "example": "MjGXQfCxShapaxJDka7"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "time_frame_type": {
                      "type": "string",
                      "description": "The time frame type. \n\nThe available values: `all_day`, `specific_time`",
                      "example": "specific_time",
                      "enum": ["all_day", "specific_time"]
                    },
                    "time_frame_from": {
                      "type": "string",
                      "description": "The start time of time frame in which the alert was triggered, in `HH:mm:ss` format.\n\n When the `time_frame_type` is `all_day`, the value is `00:00:00`",
                      "example": "08:30:00"
                    },
                    "time_frame_to": {
                      "type": "string",
                      "description": "The end time of time frame in which the alert was triggered, in `HH:mm:ss` format. \n\n When the `time_frame_type` is `all_day`, the value is `00:00:00`",
                      "example": "18:00:00"
                    },
                    "frequency": {
                      "type": "integer",
                      "description": "The frequency of alert triggers. The unit is `minutes`. \n\nIt's used when the value of `module` represents `Call Queue Management`, `Route Group Management`, `Devices &amp; Phones Management`, or `Call Quality Management`.",
                      "example": 5,
                      "enum": [5, 10, 15, 30, 60]
                    },
                    "email_recipients": {
                      "type": "array",
                      "description": "The email addresses of recipients.",
                      "items": {
                        "type": "string",
                        "example": "test@example.com"
                      }
                    },
                    "chat_channels": {
                      "type": "array",
                      "description": "The chat channels. This field applies when the value of `module` represents `Call Queue Management`, `Route Group Management`, `Devices &amp; Phones Management`, or `Call Quality Management`.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "chat_channel_name": {
                            "type": "string",
                            "description": "The channel name.",
                            "example": "ApiTA_Site_2020_07_21_11_02_26_901"
                          },
                          "token": {
                            "type": "string",
                            "description": "The verification token.",
                            "example": "eyJhbGciOiJIUzUxMiIsInYiOiIy"
                          },
                          "end_point": {
                            "type": "string",
                            "description": "The end point.",
                            "example": "https://www.testexample.com"
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "integer",
                      "description": "The alert's status: \n* `0` — Inactive. \n* `1` — Active.",
                      "example": 1,
                      "enum": [0, 1]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `403` <br>\n You do not have permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13003` <br>\n The alert setting does not exist, alertSettingId:{0}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:alert_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:alert_setting:admin"]
        }
      },
      "delete": {
        "tags": ["Alerts"],
        "summary": "Delete an alert setting",
        "description": "Deletes an [alert setting](https://support.zoom.us/hc/en-us/articles/7146944434445).\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions.\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:alert_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "DeleteAnAlertSetting",
        "parameters": [
          {
            "name": "alertSettingId",
            "in": "path",
            "description": "The alert setting ID.",
            "required": true,
            "schema": { "type": "string", "example": "brW-o_riQSG3T9tLJ4v1yw" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nAlert setting deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `403` <br>\n You do not have permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `13003` <br>\n The alert setting does not exist, alertSettingId:{0}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:alert_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:alert_setting:admin"]
        }
      },
      "patch": {
        "tags": ["Alerts"],
        "summary": "Update an alert setting",
        "description": "Updates information of an [Alert setting](https://support.zoom.us/hc/en-us/articles/7146944434445).\n\n**Prerequisites:**  \n \n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:patch:alert_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateAnAlertSetting",
        "parameters": [
          {
            "name": "alertSettingId",
            "in": "path",
            "description": "The alert setting ID.",
            "required": true,
            "schema": { "type": "string", "example": "brW-o_riQSG3T9tLJ4v1yw" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "alert_setting_name": {
                    "type": "string",
                    "description": "The name of the alert setting.",
                    "example": "Call Queue Alert"
                  },
                  "rule_conditions": {
                    "type": "array",
                    "description": "The rule conditions.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "rule_condition_type": {
                          "type": "integer",
                          "description": "The condition type. \n* `1`-`Threshold` \n* `2`-`Warning` \n* `3`-`Critical` \n* `4`-`Alert` \n* `5`-`Severity`.   \n \n The `Threshold` is used for the `Service Level` rule.   \n \n The `Warning` or `Critical` is used for the `Service Level`, `Inbound Abandoned Calls`, `Inbound Overflowed Calls`, `Number of Waiting Calls`, `Inbound Forwarded to Voicemail`, `Member Availability (Active)`, `Member Availability (Opt-in/Opt-out)`, `Device offline rate`, `Inbound Avg Call Waiting Time`, or `QoS Alert` rule.   \n \n The `Alert` is used for the `Devices go offline` or `device_online_time` rule.   \n \n The `Severity` is used for the `Emergency Call Alert` or `Route groups status change` rule.",
                          "example": 1,
                          "enum": [1, 2, 3, 4, 5]
                        },
                        "rule_condition_value": {
                          "type": "string",
                          "description": "The rule condition value.  \n \n In the case of the value of `rule_condition_type`  is `1`, the available values: `15`, `30`, `60`, `120`, `180`, `240`, `300`.   \n \n In the case of the value of `rule_condition_type `is `2` or `3`, when the value of `rule` represents `Service Level` or `Inbound Abandoned Calls` or `Inbound Overflowed Calls` or `Inbound Forwarded to Voicemail` or `Member Availability (Active)` or `Member Availability (Opt-in/Opt-out)` or `Device offline rate`, the unit is `percentage`, the value can only be in the range of `1` to `100`, when the value of `rule` represents `Inbound Avg Call Waiting Time`, the unit is `seconds`, the available values: `10`, `15`, `20`, `25`, `30`, `45`, `60`, `120`, `180`, `240`, `300`, `600`, `900`, `1200`, `1500`, `1800`, when the value of `rule` represents `QoS Alert`, the value can be only in the range of `0` to `5`.   \n \n In the case of the value of `rule_condition_type` is `4`, the available values:`5`, `10`, `15`,`30`,`60`.  \n \nIn the case of the value of `rule_condition_type` is `5`,the available values:`Warning`,`Critical`.",
                          "example": "Warning"
                        }
                      }
                    }
                  },
                  "target_ids": {
                    "type": "array",
                    "description": "The target IDs of the alert.   \n \nWhen the rule is `Devices go offline` and the old value of this field does not represents `Account`, it can be updated incrementally.  \n \n When the rule is `Devices go online` or `QoS Alert`, it can be updated incrementally.   \n \n\n In the case of `Devices go online` or `Devices go offline` rule, you should pass the `Device ID` of the specific device and the number of Device is up to `5`  \n \n In the case of `QoS Alert` rule, you should pass the `Extension ID` of the specific user and the number of User is up to `5`",
                    "items": {
                      "type": "string",
                      "example": "vcmGf5wETQy2qExibfWUiA"
                    }
                  },
                  "time_frame_type": {
                    "type": "string",
                    "description": "The time frame type.  \n \nThe available values: `all_day`, `specific_time`",
                    "example": "specific_time",
                    "enum": ["all_day", "specific_time"]
                  },
                  "time_frame_from": {
                    "type": "string",
                    "description": "The start time of time frame in which the alert was triggered, in `HH:mm:ss` format.   \n \nWhen the `time_frame_type` is `all_day`, the value is `00:00:00`.\n\n The value should be either at the whole hour or at half past the hour.",
                    "example": "08:30:00"
                  },
                  "time_frame_to": {
                    "type": "string",
                    "description": "The end time of time frame in which the alert was triggered, in `HH:mm:ss` format.   \n \nWhen the `time_frame_type` is `all_day`, the value is `00:00:00`.\n\n The value should be either at the whole hour or at half past the hour.",
                    "example": "18:00:00"
                  },
                  "frequency": {
                    "type": "integer",
                    "description": "The frequency of alert triggers. The unit is `minutes`.    \n \n When the value of `module` represents `Call Queue Management` or `Route Group Management` or `Devices &amp; Phones Management` or `Call Quality Management`, it will be used.",
                    "example": 5,
                    "enum": [5, 10, 15, 30, 60]
                  },
                  "email_recipients": {
                    "type": "array",
                    "description": "The email addresses of recipients. The number of the emails is up to `10`",
                    "items": { "type": "string", "example": "test@example.com" }
                  },
                  "chat_channels": {
                    "type": "array",
                    "description": "The chat channels.    \n \n This field applies when the value of `module` represents `Call Queue Management` or `Route Group Management` or `Devices &amp; Phones Management` or `Call Quality Management`. The number of the chat channels is up to `3`",
                    "items": {
                      "type": "object",
                      "properties": {
                        "chat_channel_name": {
                          "type": "string",
                          "description": "The channel name.",
                          "example": "ApiTA_Site_2020_07_21_11_02_26_901"
                        },
                        "token": {
                          "type": "string",
                          "description": "The verification token.",
                          "example": "eyJhbGciOiJIUzUxMiIsInYiOiIy"
                        },
                        "end_point": {
                          "type": "string",
                          "description": "The end point.",
                          "example": "https://www.testexample.com"
                        }
                      }
                    }
                  },
                  "status": {
                    "type": "integer",
                    "description": "The alert's status:\n* `0` &mdash; Inactive.\n* `1` &mdash; Active.",
                    "example": 1,
                    "enum": [0, 1]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nAlert setting updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n Validation Failed<br> <br>\n**Error Code:** `13006` <br>\n The number of target is invalid.<br> <br>\n**Error Code:** `13007` <br>\n The number of email recipients is invalid. <br> <br>\n**Error Code:** `13008` <br>\n The number of chat channels is invalid.<br> <br>\n**Error Code:** `13010` <br>\n Invalid parameters.<br> <br>\n**Error Code:** `13011` <br>\n The specified extension is in the private directory whom you do not have access to.<br> <br>\n**Error Code:** `13014` <br>\n The target id:{0} is invalid.<br> <br>\n**Error Code:** `403` <br>\n You do not have permission.<br> <br>\n**Error Code:** `13023` <br>\n The number of email recipients is invalid.<br> <br>\n**Error Code:** `13024` <br>\n The number of chat channels is invalid. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `13003` <br>\n The alert setting does not exist, alertSettingId:{0}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:patch:alert_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:patch:alert_setting:admin"]
        }
      }
    },
    "/phone/audios/{audioId}": {
      "get": {
        "tags": ["Audio Library"],
        "summary": "Get an audio item",
        "description": "Returns an audio item. Only the admin or user can access your audio.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:read`,`phone:read:admin`\n\n**Granular Scopes:** `phone:read:audio`,`phone:read:audio:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "GetAudioItem",
        "parameters": [
          {
            "name": "audioId",
            "in": "path",
            "description": "The unique identifier of the audio item.",
            "required": true,
            "schema": { "type": "string", "example": "yCT14TwySDGVUypVlKNEyA" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**Successfully listed an audio item.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "audio_id": {
                      "type": "string",
                      "description": "The unique identifier of the audio item.",
                      "example": "yCT14TwySDGVUypVlKNEyA"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the audio item.",
                      "example": "hello.mp3"
                    },
                    "play_url": {
                      "type": "string",
                      "description": "The URL of the audio file. (The URL is valid for 6 hours.)",
                      "example": "https://file.example.com/file?jwt=eyJhbGciOiJIUzI1NiJ9.eyJleHAiOjE2MzY3MjY0MDEsImlzcyI6ImNyb3NzZmlsZSIsImF1ZCI6ImZpbGUiLCJkaWciOiIzM2MyZGFhZjQ2ZDQ2MzFiNGJkMWUzZmRmYmI5OTBjOTUzNTEwZmE5ZDYxZjYyNDAyNGY5OWZiYmY5ZmZlMWU4In0.kPwNFT1C_twZHl3CTeyaiOLhxmJBcHb__SvDBmgGpiQ&mode=download&path=zoomfs%3A%2F%2Fpbx-voice%2F%2Fprompt%2FNNNiWOl7SSmO-qXFOSXPMA%2FhcAjVmo0SVmdSvW2Sm7VrA.mp3"
                    },
                    "text": {
                      "type": "string",
                      "description": "The message to play. The maximum message length is 3000.",
                      "example": "hello"
                    },
                    "voice_language": {
                      "type": "string",
                      "description": "The audio voice language. The language and its code mappings, such as:  `American English`-`en-US`, or  `British English`-`en-GB`.",
                      "example": "en-US",
                      "enum": [
                        "en-US",
                        "en-GB",
                        "en-GB-WLS",
                        "en-AU",
                        "en-IN",
                        "en-ZA",
                        "en-NZ",
                        "es-ES",
                        "es-US",
                        "es-MX",
                        "fr-CA",
                        "da-DK",
                        "de-DE",
                        "fr-FR",
                        "it-IT",
                        "is-IS",
                        "nl-NL",
                        "pt-PT",
                        "ja-JP",
                        "ko-KO",
                        "ko-KR",
                        "pt-BR",
                        "pl-PL",
                        "zh-CN",
                        "zh-TW",
                        "cmn-CN",
                        "tr-TR",
                        "nb-NO",
                        "ro-RO",
                        "ru-RU",
                        "sv-SE",
                        "cy-GB",
                        "ca-ES",
                        "de-AT",
                        "arb"
                      ]
                    },
                    "voice_accent": {
                      "type": "string",
                      "description": "The accent of the audio file, such as `Joanna-Female` or `Joey-Male`.",
                      "example": "Joanna-Female"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read",
              "phone:read:admin",
              "phone:read:audio",
              "phone:read:audio:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read", "phone:read:admin"],
          "x-granular-scopes": ["phone:read:audio", "phone:read:audio:admin"]
        }
      },
      "delete": {
        "tags": ["Audio Library"],
        "summary": "Delete an audio item",
        "description": "Deletes an audio item. Only the admin or user can delete your audio.\n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write`,`phone:write:admin`\n\n**Granular Scopes:** `phone:delete:audio`,`phone:delete:audio:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "DeleteAudioItem",
        "parameters": [
          {
            "name": "audioId",
            "in": "path",
            "description": "Unique identifier of the audio item.",
            "required": true,
            "schema": { "type": "string", "example": "yCT14TwySDGVUypVlKNEyA" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\n\nSuccessfully deleted an audio item"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n  <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write",
              "phone:write:admin",
              "phone:delete:audio",
              "phone:delete:audio:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write", "phone:write:admin"],
          "x-granular-scopes": [
            "phone:delete:audio",
            "phone:delete:audio:admin"
          ]
        }
      },
      "patch": {
        "tags": ["Audio Library"],
        "summary": "Update an audio item",
        "description": "Updates an audio item. Only the admin or user can update your audio.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write`,`phone:write:admin`\n\n**Granular Scopes:** `phone:update:audio`,`phone:update:audio:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateAudioItem",
        "parameters": [
          {
            "name": "audioId",
            "in": "path",
            "description": "Unique identifier of the audio item.",
            "required": true,
            "schema": { "type": "string", "example": "yCT14TwySDGVUypVlKNEyA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name"],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the audio item.",
                    "example": "hello.mp3"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\n\nSuccessfully updated an audio item"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n  <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write",
              "phone:write:admin",
              "phone:update:audio",
              "phone:update:audio:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write", "phone:write:admin"],
          "x-granular-scopes": [
            "phone:update:audio",
            "phone:update:audio:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/audios": {
      "get": {
        "tags": ["Audio Library"],
        "summary": "List audio items",
        "description": "Returns personal audios. \n\nOnly the admin or user can query your audios and directly pass the `me` value instead of the `userId` parameter.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:read`,`phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_audios`,`phone:read:list_audios:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "ListAudioItems",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "DnEopNmXQEGU2uvvzjgojw" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nSuccessfully listed the audio items.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "audios": {
                      "maxItems": 100,
                      "type": "array",
                      "description": "The audio item list.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "audio_id": {
                            "type": "string",
                            "description": "The unique identifier of the audio item.",
                            "example": "fPOSdWWqRVqhohLYs7TW9Q"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the audio item.",
                            "example": "hello.mp3"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n**Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read",
              "phone:read:admin",
              "phone:read:list_audios",
              "phone:read:list_audios:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read", "phone:read:admin"],
          "x-granular-scopes": [
            "phone:read:list_audios",
            "phone:read:list_audios:admin"
          ]
        }
      },
      "post": {
        "tags": ["Audio Library"],
        "summary": "Add an audio item for text-to-speech conversion",
        "description": "Adds an audio item for [text-to-speech conversion](https://support.zoom.us/hc/en-us/articles/4402414203533-Using-the-audio-library-to-customize-audio#h_01F8B0D2ZJBKEDH10DFZ7J2CM7). Only the admin or user can add your audio and directly pass the `me` value instead of the `userId` parameter.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write`,`phone:write:admin`\n\n**Granular Scopes:** `phone:write:audio`,`phone:write:audio:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "AddAnAudio",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "fPOSdWWqRVqhohLYs7TW9Q" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "audio_name": {
                    "type": "string",
                    "description": "The name of the audio item.",
                    "example": "hello.mp3"
                  },
                  "text": {
                    "type": "string",
                    "description": "The message to play. The maximum message length is 3000",
                    "example": "hello"
                  },
                  "voice_language": {
                    "type": "string",
                    "description": "Language `en-US` or `en-GB` for example.",
                    "example": "en-US"
                  },
                  "voice_accent": {
                    "type": "string",
                    "description": "The accent of the audio file, `Joanna-Female` or `Joey-Male` for example.",
                    "example": "Joanna-Female"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**\n\n\nAdded an audio item successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "audio_id": {
                      "type": "string",
                      "description": "Unique identifier of the audio item",
                      "example": "fPOSdWWqRVqhohLYs7TW9Q"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the audio item",
                      "example": "hello.mp3"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n Invalid user ID.<br>\nUser does not exist.<br>\nThe language is not supported.<br>\nThe voice accent is not supported.<br>\nThe text is empty.<br>\nMaximum text length has been exceeded. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write",
              "phone:write:admin",
              "phone:write:audio",
              "phone:write:audio:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write", "phone:write:admin"],
          "x-granular-scopes": ["phone:write:audio", "phone:write:audio:admin"]
        }
      }
    },
    "/phone/users/{userId}/audios/batch": {
      "post": {
        "tags": ["Audio Library"],
        "summary": "Add audio items",
        "description": "Adds the audio items. You can only upload voice files at this time. Only the admin or user can add your audio and directly pass the `me` value instead of the `userId` parameter.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n**Size and quantity limits for audio attachments:**\n* Up to 5 attachments\n* Each file size should be no more than 1MB\n\n**Scopes:** `phone:write`,`phone:write:admin`\n\n**Granular Scopes:** `phone:write:batch_audios`,`phone:write:batch_audios:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "AddAudioItem",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "DnEopNmXQEGU2uvvzjgojw" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "attachments": {
                    "maxItems": 5,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "audio_type": {
                          "type": "string",
                          "description": "The format of the attachments. Supported formats: audio/mpeg, audio/wav",
                          "example": "audio/mpeg, audio/wav"
                        },
                        "base64_encoding": {
                          "type": "string",
                          "description": "The ASCII string to send [Base64 encoded](https://en.wikipedia.org/wiki/Base64) attachments as text.",
                          "example": "TWFuIGlzIGRpc3Rpbmd1aXNoZWQsIG5vdCBvbmx5IGJ5IGhpcyByZWFzb24sIGJ1dCBieSB0aGlz\nIHNpbmd1bGFyIHBhc3Npb24gZnJvbSBvdGhlciBhbmltYWxzLCB3aGljaCBpcyBhIGx1c3Qgb2Yg\ndGhlIG1pbmQsIHRoYXQgYnkgYSBwZXJzZXZlcmFuY2Ugb2YgZG="
                        },
                        "name": {
                          "type": "string",
                          "description": "The audio file name.",
                          "example": "hello.mp3"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**\n\n\nAudio items successfully added.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "audios": {
                      "maxItems": 5,
                      "type": "array",
                      "description": "The audio item list.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "audio_id": {
                            "type": "string",
                            "description": "The unique identifier of the audio item.",
                            "example": "fPOSdWWqRVqhohLYs7TW9Q"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the audio item.",
                            "example": "hello.mp3"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n The type of audio is invalid, audio name: {0}.\r\nThe size of audio exceeds limit, audio name: {0}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n**Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write",
              "phone:write:admin",
              "phone:write:batch_audios",
              "phone:write:batch_audios:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write", "phone:write:admin"],
          "x-granular-scopes": [
            "phone:write:batch_audios",
            "phone:write:batch_audios:admin"
          ]
        }
      }
    },
    "/phone/auto_receptionists": {
      "get": {
        "tags": ["Auto Receptionists"],
        "summary": "List auto receptionists",
        "description": "Returns a list of auto receptionists.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_auto_receptionists:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listAutoReceptionists",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The total number of records returned from a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nList of [auto receptionists](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-auto-receptionists) retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "auto_receptionists": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "cost_center": {
                            "type": "string",
                            "description": "`nullable` Cost center name.",
                            "example": "testCostCenter"
                          },
                          "department": {
                            "type": "string",
                            "description": "`nullable` Department name.",
                            "example": "testDepartment"
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "Extension ID",
                            "example": "WfsrPERXS8inWrpH1Hi_KQ"
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "Extension number of the auto receptionist.",
                            "format": "int64",
                            "example": 555550000000001
                          },
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the auto receptionist.",
                            "example": "nqerMCD0Tu6RPGoCpVbPtA"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the auto receptionist.",
                            "example": "JamieAuto"
                          },
                          "timezone": {
                            "type": "string",
                            "description": "[Timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) of the Auto Receptionist.",
                            "example": "Pacific/Midway"
                          },
                          "audio_prompt_language": {
                            "type": "string",
                            "description": "Audio prompt language.",
                            "example": "en-US"
                          },
                          "holiday_hours": {
                            "type": "array",
                            "description": "The holiday hours.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The holiday ID.",
                                  "example": "i3gP6xFUTHqSFrIE6nHs7Q"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the holiday.",
                                  "example": "Holiday 1"
                                },
                                "from": {
                                  "type": "string",
                                  "description": "The holiday start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.",
                                  "format": "date-time",
                                  "example": "2022-03-08T16:00:00Z"
                                },
                                "to": {
                                  "type": "string",
                                  "description": "The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.",
                                  "format": "date-time",
                                  "example": "2022-03-09T16:00:00Z"
                                }
                              }
                            }
                          },
                          "phone_numbers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Unique identifier of the phone number.",
                                  "example": "KsxwNLEhQ0SJ4U4Bor4ShA"
                                },
                                "number": {
                                  "type": "string",
                                  "description": "Phone number.",
                                  "example": "+12058945717"
                                }
                              }
                            }
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.",
                                "example": "O4rBC_zEQnCVoiHfXKGKNA"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the site.",
                                "example": "jamietestsite"
                              }
                            }
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "Total number of records returned from a single API call.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "Total number of records found for this query.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_auto_receptionists:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_auto_receptionists:admin"]
        }
      },
      "post": {
        "tags": ["Auto Receptionists"],
        "summary": "Add an auto receptionist",
        "description": "Adds an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-) to a Zoom Phone. Auto receptionists answer calls with a personalized recording and routes calls to a phone user, call queue, common area, voicemail or an IVR system. \n\n**Prerequisites:**\n* Pro or higher account with Zoom Phone license.\n* Account owner or admin privileges \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:auto_receptionist:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addAutoReceptionist",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name"],
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Provide a name to help identify the auto receptionist.",
                    "example": "JamieAuto"
                  },
                  "site_id": {
                    "type": "string",
                    "description": "Unique identifier of the site where the auto receptionist is to be assigned. This field is required only if you have [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) enabled.",
                    "example": "O4rBC_zEQnCVoiHfXKGKNA"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**\n\nAuto receptionist added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "extension_number": {
                      "type": "integer",
                      "description": " Extension number assigned to the auto receptionist.",
                      "format": "int64",
                      "example": 555550000000001
                    },
                    "id": {
                      "type": "string",
                      "description": "Auto receptionist ID. The unique identifier of the auto receptionist.",
                      "example": "nqerMCD0Tu6RPGoCpVbPtA"
                    },
                    "name": {
                      "type": "string",
                      "description": " Name of the auto receptionist.",
                      "example": "JamieAuto"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n  <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:auto_receptionist:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:auto_receptionist:admin"]
        }
      }
    },
    "/phone/auto_receptionists/{autoReceptionistId}": {
      "get": {
        "tags": ["Auto Receptionists"],
        "summary": "Get an auto receptionist",
        "description": "Returns information on a specific auto receptionist.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:auto_receptionist:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "getAutoReceptionistDetail",
        "parameters": [
          {
            "name": "autoReceptionistId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "nqerMCD0Tu6RPGoCpVbPtA" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nSuccessfully get an auto receptionist detail.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cost_center": {
                      "type": "string",
                      "description": "`nullable` The cost center name.",
                      "example": "testCostCenter"
                    },
                    "department": {
                      "type": "string",
                      "description": "`nullable` The name of the department.",
                      "example": "testDepartment"
                    },
                    "extension_id": {
                      "type": "string",
                      "description": "The extension ID",
                      "example": "WfsrPERXS8inWrpH1Hi_KQ"
                    },
                    "extension_number": {
                      "type": "integer",
                      "description": "The extension number of the auto receptionist.",
                      "format": "int64",
                      "example": 555550000000001
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the auto receptionist.",
                      "example": "JamieAuto"
                    },
                    "timezone": {
                      "type": "string",
                      "description": "[Timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) of the auto receptionist.",
                      "example": "Pacific/Midway"
                    },
                    "audio_prompt_language": {
                      "type": "string",
                      "description": "The language for all default audio prompts for the auto receptionist. \n* `en-US` : English (US) \n* `en-GB` : English (UK) \n* `es-US` : Spanish (US) \n* `fr-CA` : French (Canada) \n* `da-DK` : Danish (Denmark) \n* `de-DE` : German (Germany) \n* `es-ES` : Spanish (Spain) \n* `fr-FR` : French (France) \n* `it-IT` : Italian (Italy) \n* `nl-NL` : Dutch (Netherlands) \n* `pt-PT` : Portuguese (Portugal) \n* `ja` : Japanese \n* `ko-KR` : Korean (Korea) \n* `pt-BR` : Portuguese (Brazil) \n* `zh-CN` : Chinese (PRC)",
                      "example": "en-US",
                      "enum": [
                        "en-US",
                        "en-GB",
                        "es-US",
                        "fr-CA",
                        "da-DK",
                        "de-DE",
                        "es-ES",
                        "fr-FR",
                        "it-IT",
                        "nl-NL",
                        "pt-PT",
                        "ja",
                        "ko-KR",
                        "pt-BR",
                        "zh-CN"
                      ]
                    },
                    "holiday_hours": {
                      "maxItems": 100,
                      "type": "array",
                      "description": "The holiday hours.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The holiday ID.",
                            "example": "i3gP6xFUTHqSFrIE6nHs7Q"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the holiday.",
                            "example": "Holiday 1"
                          },
                          "from": {
                            "type": "string",
                            "description": "The holiday start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.",
                            "format": "date-time",
                            "example": "2022-03-08T16:00:00Z"
                          },
                          "to": {
                            "type": "string",
                            "description": "The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.",
                            "format": "date-time",
                            "example": "2022-03-09T16:00:00Z"
                          }
                        }
                      }
                    },
                    "phone_numbers": {
                      "maxItems": 50,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the phone number.",
                            "example": "KsxwNLEhQ0SJ4U4Bor4ShA"
                          },
                          "number": {
                            "type": "string",
                            "description": "The phone number.",
                            "example": "+12058945717"
                          }
                        }
                      }
                    },
                    "site": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.",
                          "example": "O4rBC_zEQnCVoiHfXKGKNA"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the site.",
                          "example": "jamietestsite"
                        }
                      }
                    },
                    "recording_storage_location": {
                      "type": "string",
                      "description": "Where the recording will be stored. Recording includes Phone recordings, voicemail, voicemail transcripts, and custom greeting prompts. \n* `US` : United States \n* `AU` : Australia \n* `CA` : Canada \n* `DE` : Germany \n* `IN` : India \n* `JP` : Japan \n* `SG` : Singapore \n* `BR` : Brazil \n* `CN` : China \n* `MX` : Mexico \n\n<b>Note:</b> \n* If the setting is locked at the Account level, it can't be updated.",
                      "example": "US",
                      "enum": [
                        "US",
                        "AU",
                        "CA",
                        "DE",
                        "IN",
                        "JP",
                        "SG",
                        "BR",
                        "CN",
                        "MX"
                      ]
                    },
                    "own_storage_name": {
                      "type": "string",
                      "description": "The name of your own storage. Use your own storage provided by Oracle Cloud Infrastructure (OCI) to store Zoom Phone recordings, voicemails, and voicemail transcripts, and custom greeting prompts.",
                      "example": "us-oracle-storage"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation Failed. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:auto_receptionist:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:auto_receptionist:admin"]
        }
      },
      "delete": {
        "tags": ["Auto Receptionists"],
        "summary": "Delete a non-primary auto receptionist",
        "description": "[Deletes a non-primary auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-#h_1d5ffc56-6ba3-4ce5-9d86-4a1a1ee743f3).\n\nAn auto receptionist answers calls with a personalized recording and routes calls to a phone user, call queue, common area (phone), or to a voicemail. An auto receptionist can also be set up so that it routes calls to an interactive voice response (IVR) system to allow callers to select the routing options.\n\n\n**Prerequisites:**\n* Pro or higher account with Zoom Phone license.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:auto_receptionist:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteAutoReceptionist",
        "parameters": [
          {
            "name": "autoReceptionistId",
            "in": "path",
            "description": "The unique identifier of the auto receptionist. It can be retrieved from the [List auto receptionists API](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listAutoReceptionists).",
            "required": true,
            "schema": { "type": "string", "example": "nqerMCD0Tu6RPGoCpVbPtA" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n  **No Content**  \n \nAuto Receptionist deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Unable to delete main Auto receptionist.<br><br> <br>\n**Error Code:** `404` <br>\n AutoReceptionist does not exist: {autoReceptionistId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:auto_receptionist:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:auto_receptionist:admin"]
        }
      },
      "patch": {
        "tags": ["Auto Receptionists"],
        "summary": "Update an auto receptionist",
        "description": "[Changes information](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-#h_1d5ffc56-6ba3-4ce5-9d86-4a1a1ee743f3) such as the display name and the extension number assigned to the main auto receptionist.\n\nAn auto receptionist answers calls with a personalized recording. And it routes calls to a phone user, call queue, common area, or voicemail. An auto receptionist can also be set up so that it routes calls to an interactive voice response (IVR) system to allow callers to select the routing options.\n\n\n**Prerequisites:**\n* Pro or higher account with Zoom Phone license.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:auto_receptionist:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateAutoReceptionist",
        "parameters": [
          {
            "name": "autoReceptionistId",
            "in": "path",
            "description": "The unique identifier of the auto receptionist. It can be retrieved from the [List auto receptionists API](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listAutoReceptionists).",
            "required": true,
            "schema": { "type": "string", "example": "nqerMCD0Tu6RPGoCpVbPtA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cost_center": {
                    "type": "string",
                    "description": "The cost center name.",
                    "example": "testCostCenter"
                  },
                  "department": {
                    "type": "string",
                    "description": "The department name.",
                    "example": "testDepartment"
                  },
                  "extension_number": {
                    "type": "integer",
                    "description": "The extension number to be assigned to the auto receptionist. If site code is enabled, provide the short extension number instead.",
                    "format": "int64",
                    "example": 555550000000001
                  },
                  "name": {
                    "maxLength": 32,
                    "type": "string",
                    "description": "Display name of the auto receptionist.",
                    "example": "JamieAuto"
                  },
                  "audio_prompt_language": {
                    "type": "string",
                    "description": "The language for all default audio prompts for the Auto Receptionist. \n* `en-US` : English (US) \n* `en-GB` : English (UK) \n* `es-US` : Spanish (US) \n* `fr-CA` : French (Canada) \n* `da-DK` : Danish (Denmark) \n* `de-DE` : German (Germany) \n* `es-ES` : Spanish (Spain) \n* `fr-FR` : French (France) \n* `it-IT` : Italian (Italy) \n* `nl-NL` : Dutch (Netherlands) \n* `pt-PT` : Portuguese (Portugal) \n* `ja` : Japanese \n* `ko-KR` : Korean (Korea) \n* `pt-BR` : Portuguese (Brazil) \n* `zh-CN` : Chinese (PRC)",
                    "example": "en-US",
                    "enum": [
                      "en-US",
                      "en-GB",
                      "es-US",
                      "fr-CA",
                      "da-DK",
                      "de-DE",
                      "es-ES",
                      "fr-FR",
                      "it-IT",
                      "nl-NL",
                      "pt-PT",
                      "ja",
                      "ko-KR",
                      "pt-BR",
                      "zh-CN"
                    ]
                  },
                  "timezone": {
                    "type": "string",
                    "description": "The [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) of the Auto Receptionist.",
                    "example": "Pacific/Midway"
                  },
                  "recording_storage_location": {
                    "type": "string",
                    "description": "Where the recording will be stored. The recording includes Phone recordings, voicemail, voicemail transcripts, and custom greeting prompts. \n* `US` : United States \n* `AU` : Australia \n* `CA` : Canada \n* `DE` : Germany \n* `IN` : India \n* `JP` : Japan \n* `SG` : Singapore \n* `BR` : Brazil \n* `CN` : China \n* `MX` : Mexico \n\n<b>Note:</b> \n* If the setting is locked at the Account level, it can't be updated.",
                    "example": "US",
                    "enum": [
                      "US",
                      "AU",
                      "CA",
                      "DE",
                      "IN",
                      "JP",
                      "SG",
                      "BR",
                      "CN",
                      "MX"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n  **No Content**  \n \nAuto Receptionist details updated sucessfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Extension Number must be {min} to {max} digits<br>\nValidation Failed. AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionistId}<br>\nAudio prompt language is invalid:{0}<br>\nTime zone is invalid:{0}<br> <br>\n**Error Code:** `400` <br>\n Invalid short number length.<br>\nInvalid full extension number length.<br><br> <br>\n**Error Code:** `10001` <br>\n Number {extensionNumber} is a reserved extension number.<br>\nExtension number {extensionNumber} is already used.<br>\nLanguage setting is invalid. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:auto_receptionist:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:auto_receptionist:admin"]
        }
      }
    },
    "/phone/auto_receptionists/{autoReceptionistId}/phone_numbers": {
      "post": {
        "tags": ["Auto Receptionists"],
        "summary": "Assign phone numbers",
        "description": "Assigns available phone numbers to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). The available numbers can be retrieved using the List Phone Numbers API with `type` query parameter set to &quot;unassigned&quot;.\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom Phone License\n* Account owner or admin permissions  \n \n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:auto_receptionist_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "assignPhoneNumbersAutoReceptionist",
        "parameters": [
          {
            "name": "autoReceptionistId",
            "in": "path",
            "description": "The unique identifier of the auto receptionist. It can be retrieved from the [List auto receptionists API](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listAutoReceptionists).",
            "required": true,
            "schema": { "type": "string", "example": "nqerMCD0Tu6RPGoCpVbPtA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone_numbers": {
                    "type": "array",
                    "description": "Provide either the unique identifier of the Phone Number  in the `id` field or provide the phone number in the `number` field.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique Identifier of the Phone number.",
                          "example": "KsxwNLEhQ0SJ4U4Bor4ShA"
                        },
                        "number": {
                          "type": "string",
                          "description": "Phone number in e164 format.",
                          "example": "+12058945717"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nPhone numbers assigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Unable to update this number as it is used for outbound caller ID to public safety answering point.<br>\nPhone number does not exist, phonenumberId:{phonenumberId}<br>\nphoneNumber is used, phonenumberId:{phonenumberId} <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:auto_receptionist_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:auto_receptionist_number:admin"]
        }
      },
      "delete": {
        "tags": ["Auto Receptionists"],
        "summary": "Unassign all phone numbers",
        "description": "Unassigns all phone numbers that were previously assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). \n\n**Prerequisites:**\n* Pro or higher account plan with Zoom Phone License\n* Account owner or admin permissions  \n \n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:auto_receptionist_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "unassignAllPhoneNumsAutoReceptionist",
        "parameters": [
          {
            "name": "autoReceptionistId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "nqerMCD0Tu6RPGoCpVbPtA" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nPhone numbers unassigned successfully."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:auto_receptionist_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:auto_receptionist_number:admin"]
        }
      }
    },
    "/phone/auto_receptionists/{autoReceptionistId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "tags": ["Auto Receptionists"],
        "summary": "Unassign a phone number",
        "description": "Unassigns a specific phone number that was previously assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). \n\n**Prerequisites:**\n* Pro or higher account plan with Zoom Phone License\n* Account owner or admin permissions  \n \n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:auto_receptionist_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "unassignAPhoneNumAutoReceptionist",
        "parameters": [
          {
            "name": "autoReceptionistId",
            "in": "path",
            "description": "The unique identifier of the auto receptionist. It can be retrieved from the [List auto receptionists API](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listAutoReceptionists).",
            "required": true,
            "schema": { "type": "string", "example": "nqerMCD0Tu6RPGoCpVbPtA" }
          },
          {
            "name": "phoneNumberId",
            "in": "path",
            "description": "Unique Identifier of the phone number or provide the actual phone number in e164 format (example: +19995550123).",
            "required": true,
            "schema": { "type": "string", "example": "KsxwNLEhQ0SJ4U4Bor4ShA" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nPhone number unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Phone number does not belong to auto receptionist. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n AutoReceptionist does not exist, AutoReceptionistId: {autoReceptionId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:auto_receptionist_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:auto_receptionist_number:admin"]
        }
      }
    },
    "/phone/auto_receptionists/{autoReceptionistId}/policies": {
      "get": {
        "tags": ["Auto Receptionists"],
        "summary": "Get an auto receptionist policy",
        "description": "Returns the policy setting of a specific [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-).\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:auto_receptionist_policy:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "getAutoReceptionistsPolicy",
        "parameters": [
          {
            "name": "autoReceptionistId",
            "in": "path",
            "description": "The unique identifier of the auto receptionist. It can be retrieved from the [List auto receptionists API](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listAutoReceptionists).",
            "required": true,
            "schema": { "type": "string", "example": "nqerMCD0Tu6RPGoCpVbPtA" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nSuccessfully retrieved the auto receptionist policy.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "voicemail_access_members": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "Shared voicemail access member list.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "shared_id": {
                            "type": "string",
                            "description": "Unique identifier of the shared voicemail that the user can access.",
                            "example": "--e8ugg0SeS-9clgrDkn2w"
                          },
                          "access_user_id": {
                            "type": "string",
                            "description": "The Zoom user ID to share the voicemail access permissions with.",
                            "example": "w0RChiauQeqRlv5fgxYULQ"
                          },
                          "delete": {
                            "type": "boolean",
                            "description": "Specifies whether the user has delete permissions. The default is **false**.",
                            "example": false
                          },
                          "download": {
                            "type": "boolean",
                            "description": "Specifies whether the user has download permissions. The default is **false**.",
                            "example": false
                          }
                        }
                      }
                    },
                    "voicemail_transcription": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow users to access transcriptions of voicemails from the Zoom client, the Zoom web portal and email notifications.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits modifying the current settings.",
                          "example": "site",
                          "enum": ["invalid", "account", "site"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      }
                    },
                    "voicemail_notification_by_email": {
                      "type": "object",
                      "properties": {
                        "include_voicemail_file": {
                          "type": "boolean",
                          "description": "Whether to include the voicemail file.",
                          "example": true
                        },
                        "include_voicemail_transcription": {
                          "type": "boolean",
                          "description": "Whether to include the voicemail transcription.",
                          "example": false
                        },
                        "forward_voicemail_to_email": {
                          "type": "boolean",
                          "description": "Whether to forward the voicemail to email.",
                          "example": true
                        },
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits modifying the current settings.",
                          "example": "site",
                          "enum": ["invalid", "account", "site"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      },
                      "description": "Once enabled, users will receive email notifications when there is a new voicemail from users, call queues, auto receptionists or shared line groups. Users who disabled the shared voicemail notification by email policy will not receive notifications. Only displayed when the voicemail policy is using the new policy framework."
                    },
                    "sms": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow users, call queues and auto receptionists to send and receive messages. You will still need to assign a valid calling plan and phone number to each user in order for them to send and receive messages.",
                          "example": true
                        },
                        "international_sms": {
                          "type": "boolean",
                          "description": "Whether the user can send and receive international messages.",
                          "example": true
                        },
                        "international_sms_countries": {
                          "type": "array",
                          "description": "The country to which users can send and receive international messages. The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                          "items": { "type": "string", "example": "US" }
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits modifying the current settings.",
                          "example": "site",
                          "enum": ["invalid", "account", "site"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n  <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:auto_receptionist_policy:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:auto_receptionist_policy:admin"]
        }
      },
      "patch": {
        "tags": ["Auto Receptionists"],
        "summary": "Update an auto receptionist policy",
        "description": "Updates the policy setting of a specific [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-). \n\n**Prerequisites:**\n* Pro or higher account plan with Zoom Phone License\n* Account owner or admin permissions\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:auto_receptionist_policy:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateAutoReceptionistPolicy",
        "parameters": [
          {
            "name": "autoReceptionistId",
            "in": "path",
            "description": "The unique identifier of the auto receptionist. It can be retrieved from the [List auto receptionists API](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listAutoReceptionists).",
            "required": true,
            "schema": { "type": "string", "example": "nqerMCD0Tu6RPGoCpVbPtA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "voicemail_transcription": {
                    "type": "object",
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "Whether to allow users to access transcriptions of voicemails from the Zoom client, the Zoom web portal and email notifications.",
                        "example": true
                      },
                      "reset": {
                        "type": "boolean",
                        "description": "Whether the current settings will use the phone account's settings (applicable if the current settings are using the new policy framework).",
                        "example": true
                      }
                    }
                  },
                  "voicemail_notification_by_email": {
                    "type": "object",
                    "properties": {
                      "include_voicemail_file": {
                        "type": "boolean",
                        "description": "Whether to include the voicemail file.",
                        "example": true
                      },
                      "include_voicemail_transcription": {
                        "type": "boolean",
                        "description": "Whether to include the voicemail transcription.",
                        "example": false
                      },
                      "forward_voicemail_to_email": {
                        "type": "boolean",
                        "description": "Whether to forward the voicemail to email.",
                        "example": true
                      },
                      "enable": { "type": "boolean", "example": true },
                      "reset": {
                        "type": "boolean",
                        "description": "Whether the current settings will use the phone account's settings (applicable if the current settings are using the new policy framework).",
                        "example": true
                      }
                    },
                    "description": "Once enabled, users will receive email notifications when there is a new voicemail from users, call queues, auto receptionists or shared line groups. Users who disabled the shared voicemail notification by email policy will not receive notifications. Only displayed when the voicemail policy is using the new policy framework."
                  },
                  "sms": {
                    "type": "object",
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "Whether to allow users, call queues and auto receptionists to send and receive messages. You will still need to assign a valid calling plan and phone number to each user in order for them to send and receive messages.",
                        "example": true
                      },
                      "reset": {
                        "type": "boolean",
                        "description": "Whether the current settings will use the phone account's settings (applicable if the current settings are using the new policy framework).",
                        "example": true
                      },
                      "international_sms": {
                        "type": "boolean",
                        "description": "Whether the user can send and receive international messages.",
                        "example": true
                      },
                      "international_sms_countries": {
                        "type": "array",
                        "description": "The country which users can send and receive international messages. The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                        "items": { "type": "string", "example": "US" }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n  **No Content**  \n \nAuto receptionist policy updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n  <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:auto_receptionist_policy:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:auto_receptionist_policy:admin"]
        }
      }
    },
    "/phone/auto_receptionists/{autoReceptionistId}/policies/{policyType}": {
      "post": {
        "tags": ["Auto Receptionists"],
        "summary": "Add a policy subsetting",
        "description": "Adds a policy subsetting for a specific [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-) according to the `policyType`. For example, you can use this API to set up shared access members.<br><br>**Prerequisites:**\n* Pro or higher account plan with Zoom Phone License\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:auto_receptionist_policy:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "AddPolicy",
        "parameters": [
          {
            "name": "autoReceptionistId",
            "in": "path",
            "description": "The unique identifier of the auto receptionist. It can be retrieved from the [List auto receptionists API](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listAutoReceptionists).",
            "required": true,
            "schema": { "type": "string", "example": "nqerMCD0Tu6RPGoCpVbPtA" }
          },
          {
            "name": "policyType",
            "in": "path",
            "description": "Corresponds to the policy item you wish to add. Allowed values: `voice_mail`",
            "required": true,
            "schema": { "type": "string", "example": "voice_mail" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "voicemail_access_member": {
                    "type": "object",
                    "properties": {
                      "access_user_id": {
                        "type": "string",
                        "description": "The user that is allowed to access voicemail messages for the extension.",
                        "example": "w0RChiauQeqRlv5fgxYULQ"
                      },
                      "delete": {
                        "type": "boolean",
                        "description": "Specifies whether the user has delete permissions. The default is **false**.",
                        "example": false
                      },
                      "download": {
                        "type": "boolean",
                        "description": "Specifies whether the user has download permissions. The default is **false**.",
                        "example": false
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \nAuto receptionist policy created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "voicemail_access_member": {
                      "type": "object",
                      "properties": {
                        "shared_id": {
                          "type": "string",
                          "description": "Unique identifier of the shared voicemail that the user can access.",
                          "example": "--e8ugg0SeS-9clgrDkn2w"
                        },
                        "access_user_id": {
                          "type": "string",
                          "description": "The user that is allowed to access voicemail messages for the extension.",
                          "example": "w0RChiauQeqRlv5fgxYULQ"
                        },
                        "delete": {
                          "type": "boolean",
                          "description": "Specifies whether the user has delete permissions. The default is **false**.",
                          "example": false
                        },
                        "download": {
                          "type": "boolean",
                          "description": "Specifies whether the user has download permissions. The default is **false**.",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n  <br>\n**Error Code:** `429` <br>\n You can only add up to {0} {1} to access your voicemail.<br>\n\nUser does not exist: {0}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:auto_receptionist_policy:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:auto_receptionist_policy:admin"]
        }
      },
      "delete": {
        "tags": ["Auto Receptionists"],
        "summary": "Delete a policy subsetting",
        "description": "Removes the policy subsetting for a specific [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-) according to the `policyType`. For example, you can use this API to remove shared access members.\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom Phone License\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:auto_receptionist_policy:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "DeletePolicy",
        "parameters": [
          {
            "name": "autoReceptionistId",
            "in": "path",
            "description": "The unique identifier of the auto receptionist. It can be retrieved from the [List auto receptionists](https://developers.zoom.us/docs/api/rest/reference/phone/methods/#operation/listAutoReceptionists) API.",
            "required": true,
            "schema": { "type": "string", "example": "nqerMCD0Tu6RPGoCpVbPtA" }
          },
          {
            "name": "policyType",
            "in": "path",
            "description": "This field corresponds to the policy item you wish to remove. \n\nAllowed values: `voice_mail`",
            "required": true,
            "schema": { "type": "string", "example": "voice_mail" }
          },
          {
            "name": "shared_ids",
            "in": "query",
            "description": "The unique identifier of the voicemail that the user can access. It's required only for `voice_mail` policy type.",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "type": "string", "example": "p8JVVAopTwuA0eLzSwAcwg" }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nAuto receptionist policy successfully deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n  <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:auto_receptionist_policy:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:auto_receptionist_policy:admin"]
        }
      },
      "patch": {
        "tags": ["Auto Receptionists"],
        "summary": "Update a policy subsetting",
        "description": "Updates the policy subsetting of a specific [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-) according to the `policyType`. For example, you can use this API to update shared access members.\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom Phone License\n* Account owner or admin permissions\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:auto_receptionist_policy:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updatePolicy",
        "parameters": [
          {
            "name": "autoReceptionistId",
            "in": "path",
            "description": "The unique identifier of the auto receptionist. It can be retrieved from the [List auto receptionists ](https://developers.zoom.us/docs/api/rest/reference/phone/methods/#operation/listAutoReceptionists) API.",
            "required": true,
            "schema": { "type": "string", "example": "nqerMCD0Tu6RPGoCpVbPtA" }
          },
          {
            "name": "policyType",
            "in": "path",
            "description": "This field corresponds to the policy item you wish to modify. \n\nAllowed values: `voice_mail`",
            "required": true,
            "schema": { "type": "string", "example": "voice_mail" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "voicemail_access_member": {
                    "type": "object",
                    "properties": {
                      "access_user_id": {
                        "type": "string",
                        "description": "The Zoom user ID whose voicemail permissions need to be updated.",
                        "example": "w0RChiauQeqRlv5fgxYULQ"
                      },
                      "delete": {
                        "type": "boolean",
                        "description": "This field specifies whether the user has delete permissions. The default is **false**.",
                        "example": false
                      },
                      "download": {
                        "type": "boolean",
                        "description": "This field specifies whether the user has download permissions. The default is **false**.",
                        "example": false
                      },
                      "shared_id": {
                        "type": "string",
                        "description": "This field is an unique identifier of the shared voicemail that the user can access.",
                        "example": "--e8ugg0SeS-9clgrDkn2w"
                      }
                    },
                    "description": "The setting for voicemail access members."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n  **No Content**  \n \n Auto receptionist policy updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n  <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:auto_receptionist_policy:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:auto_receptionist_policy:admin"]
        }
      }
    },
    "/phone/billing_accounts": {
      "get": {
        "tags": ["Billing Account"],
        "summary": "List billing accounts",
        "description": "Retrieves a list of available billing accounts for a Zoom account owner or a user with admin privileges. \n\nIf the [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) option has been enabled for the account, then `field(site_id)` is required.\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_billing_accounts:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listBillingAccount",
        "parameters": [
          {
            "name": "site_id",
            "in": "query",
            "description": "The unique identifier of the site. Get it from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API. This field is required only if the [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) option has been enabled for the account.",
            "required": false,
            "schema": { "type": "string", "example": "-23AhVTMSfmTPDpnOTuYPQ" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nBilling accounts returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "billing_accounts": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The billing account ID.",
                            "example": "3WWAEiEjTj2IQuyDiKMd_A"
                          },
                          "name": {
                            "type": "string",
                            "description": "The billing account name.",
                            "example": "Delhi billing"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  site_id is invalid \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_billing_accounts:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_billing_accounts:admin"]
        }
      }
    },
    "/phone/billing_accounts/{billingAccountId}": {
      "get": {
        "tags": ["Billing Account"],
        "summary": "Get billing account details",
        "description": "A Zoom account owner or a user with admin privilege can use this API to get information about a billing account.\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:billing_account:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "GetABillingAccount",
        "parameters": [
          {
            "name": "billingAccountId",
            "in": "path",
            "description": "The billing account ID.",
            "required": true,
            "schema": { "type": "string", "example": "2ypsHHwTTFK-fzZJkudYwA" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nBilling account retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The billing account ID.",
                      "example": "3WWAEiEjTj2IQuyDiKMd_A"
                    },
                    "name": {
                      "type": "string",
                      "description": "The billing account name.",
                      "example": "Delhi billing"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nBilling account does not exist: {billingAccountId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:billing_account:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:billing_account:admin"]
        }
      }
    },
    "/phone/blocked_list": {
      "get": {
        "tags": ["Blocked List"],
        "summary": "List blocked lists",
        "description": "Returns all the blocked lists in an acccount. A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers will hear a generic message stating that the person they are calling is not available. \n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_blocked_lists:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listBlockedList",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The total number of records returned from a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nBlocked list returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "blocked_list": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "block_type": {
                            "type": "string",
                            "description": "The block type.\n`inbound`: The blocked number or numbers with the specified prefix are prevented from calling in to phone users.\n`outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.",
                            "example": "inbound",
                            "enum": ["inbound", "outbound", "threat"]
                          },
                          "comment": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "Comments to help you identify the blocked number or prefix.",
                            "example": "test"
                          },
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the blocked list.",
                            "example": "2ypsHHwTTFK-fzZJkudYwA"
                          },
                          "match_type": {
                            "type": "string",
                            "description": "Whether the match type for the blocked list:\n\n`phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.\n\n`prefix`: Indicates that all numbers starting with the prefix that is shown in the `phone_number` field are blocked.",
                            "example": "prefix",
                            "enum": ["phoneNumber", "prefix"]
                          },
                          "phone_number": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The phone number to be blocked if you passed `phoneNumber` as the value for the `match_type` field. If you passed `prefix` as the value for the `match_type` field, provide the prefix of the phone number in the `country` field. Displayed in E164 format.",
                            "example": "+12055558945"
                          },
                          "status": {
                            "type": "string",
                            "description": "Whether the blocking is active or inactive. \n`active`: The blocked list is active.\n`inactive`: The blocked list is inactive.",
                            "example": "active",
                            "enum": ["active", "inactive"]
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through large result sets. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "OvrVMfenVmKgsH0SqfWQ2jgUsHFGXeanCB2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The total number of records returned from a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records found for this query.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_blocked_lists:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_blocked_lists:admin"]
        }
      },
      "post": {
        "tags": ["Blocked List"],
        "summary": "Create a blocked list",
        "description": "Creates a block list and add a number to the list. \n\nA Zoom account owner or a user with the admin privilege can block phone numbers for phone users in an account. \n\nBlocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). \n\nBlocked callers will hear a generic message stating that the person they are calling is not available. \n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:blocked_list:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "addAnumberToBlockedList",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "block_type": {
                    "type": "string",
                    "description": "Whether you want the block type to be inbound or outbound.\n\n`inbound`: Pass this value to prevent the blocked number or prefix from calling into the phone users.\n\n`outbound`: Pass this value to prevent phone users from calling the blocked number or prefix.",
                    "example": "inbound",
                    "enum": ["inbound", "outbound", "threat"]
                  },
                  "comment": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "Comments to help you identify the blocked number or prefix.",
                    "example": "test"
                  },
                  "country": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The country information. For example, entering US or CH.",
                    "example": "US"
                  },
                  "match_type": {
                    "type": "string",
                    "description": "This field specifies the match type for the blocked list:\n\n* `phoneNumber`: Choose this option (Phone Number Match) if you want to block a specific phone number. Provide the phone number in the `phone_number` field and the country code in the `country` field.\n\n* `prefix`: Choose this option (Prefix Match) if you want to block all numbers with a specific country or an area code. Enter a phone number in the `phone_number` field and in the `country` field, enter a country code as part of the prefix.",
                    "example": "prefix",
                    "enum": ["phoneNumber", "prefix"]
                  },
                  "phone_number": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The phone number to be blocked if you passed `phoneNumber` as the value for the `match_type` field. If you passed `prefix` as the value for the `match_type` field, provide the prefix of the phone number in the `country` field.",
                    "example": "112"
                  },
                  "status": {
                    "type": "string",
                    "description": "This field enables or disables the blocking. One of the following values are allowed:\n\n`active`: Keep the blocking active.\n\n`inactive`: Disable the blocking.",
                    "example": "active",
                    "enum": ["active", "inactive"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**\n\nNumber added to the blocked list successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier of the blocked list.",
                      "example": "2ypsHHwTTFK-fzZJkudYwA"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid country. <br>\n"
          },
          "409": {
            "description": "**HTTP Status Code:** `409` <br>\n Conflict  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:blocked_list:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:blocked_list:admin"]
        }
      }
    },
    "/phone/blocked_list/{blockedListId}": {
      "get": {
        "tags": ["Blocked List"],
        "summary": "Get blocked list details",
        "description": "Returns the information about a specific blocked list. \n\nA Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers will hear a generic message stating that the person they are calling is not available.\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:blocked_list:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getABlockedList",
        "parameters": [
          {
            "name": "blockedListId",
            "in": "path",
            "description": "The unique identifier of the blocked list.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nBlocked list retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "block_type": {
                      "type": "string",
                      "description": "The block type.\n\n* `inbound`: The blocked number or numbers with the specifie prefix are prevented from calling in to phone users.\n\n* `outbound`: The phone users  are prevented from calling the blocked number or numbers with the specified prefix.",
                      "example": "inbound",
                      "enum": ["inbound", "outbound", "threat"]
                    },
                    "comment": {
                      "maxLength": 255,
                      "type": "string",
                      "description": "This field provides a comment to help you identify the blocked number or prefix.",
                      "example": "test"
                    },
                    "id": {
                      "type": "string",
                      "description": "The blocked list ID.",
                      "example": "2ypsHHwTTFK-fzZJkudYwA"
                    },
                    "match_type": {
                      "type": "string",
                      "description": "This field indicates the match type for the blocked list. The values can be one of the following:\n\n* `phoneNumber`: Indicates that only a specific phone number that is shown in the `phone_number` field is blocked.\n\n* `prefix`: Indicates that all numbers starting with prefix that is shown in the `phone_number` field are blocked.",
                      "example": "prefix",
                      "enum": ["phoneNumber", "prefix"]
                    },
                    "phone_number": {
                      "maxLength": 50,
                      "type": "string",
                      "description": "The phone number or the prefix number that is blocked based on the `match_type`. Displayed in E164 format.",
                      "example": "+120665558945"
                    },
                    "status": {
                      "type": "string",
                      "description": "This field indicates whether the blocking is active or inactive.\n\n*n`active`: The blocked list is active.\n\n* `inactive`: The blocked list is inactive.",
                      "example": "active",
                      "enum": ["active", "inactive"]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Blocked number (Id: {blockedListId}) does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:blocked_list:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:blocked_list:admin"]
        }
      },
      "delete": {
        "tags": ["Blocked List"],
        "summary": "Delete a blocked list",
        "description": "Deletes a blocked list, which removes the associated number from the blocked list. \n\nThe number will be unblocked after the deletion. A Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers).\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:blocked_list:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteABlockedList",
        "parameters": [
          {
            "name": "blockedListId",
            "in": "path",
            "description": "The unique identifier of the blocked list.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nBlocked list deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation Failed. Blocked number (Id: {blockedListId}) does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:blocked_list:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:blocked_list:admin"]
        }
      },
      "patch": {
        "tags": ["Blocked List"],
        "summary": "Update a blocked list",
        "description": "Updates the information in the blocked list.\n\nA Zoom account owner or a user with admin privilege can block phone numbers for phone users in an account. Blocked numbers can be inbound (numbers will be blocked from calling in) and outbound (phone users in your account won't be able to dial those numbers). Blocked callers hear a generic message stating that the person they are calling is not available.\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:blocked_list:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateBlockedList",
        "parameters": [
          {
            "name": "blockedListId",
            "in": "path",
            "description": "Unique Identifier of the Blocked List.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "block_type": {
                    "type": "string",
                    "description": "Whether you want the block type to be inbound or outbound.\n`inbound`: Pass this value to prevent the blocked number or prefix from calling in to phone users.\n`outbound`: Pass this value to prevent phone users from calling the blocked number or prefix.",
                    "example": "outbound",
                    "enum": ["inbound", "outbound"]
                  },
                  "comment": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "This field enables you to make a comment to identify the blocked number or prefix.",
                    "example": "testComment"
                  },
                  "country": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The country information. For example, entering US or CH.",
                    "example": "CH"
                  },
                  "match_type": {
                    "type": "string",
                    "description": "This field specifies the match type for the blocked list:\n\n* `phoneNumber`: Choose this option (Phone Number Match) if you want to block a specific phone number. Provide the phone number in the `phone_number` field and the country code in the `country` field.\n\n* `prefix`: Choose this option (Prefix Match) if you want to block all numbers with a specific country or an area code. Enter a phone number in the `phone_number` field and in the `country` field, enter a country code as part of the prefix.",
                    "example": "prefix",
                    "enum": ["phoneNumber", "prefix"]
                  },
                  "phone_number": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The phone number to be blocked if you passed `phoneNumber` as the value for the `match_type` field. If you passed `prefix` as the value for the `match_type` field, provide the prefix of the phone number in the `country` field.",
                    "example": "113"
                  },
                  "status": {
                    "type": "string",
                    "description": "This field enables or disables the blocking:\n* `active`: Keep the blocking active.\n* `inactive`: Disable the blocking.",
                    "example": "inactive",
                    "enum": ["active", "inactive"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nBlocked list updated successfully.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid country. <br>\n"
          },
          "409": {
            "description": "**HTTP Status Code:** `409` <br>\n Conflict  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:blocked_list:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:blocked_list:admin"]
        }
      }
    },
    "/phone/extension/{extensionId}/call_handling/settings": {
      "get": {
        "tags": ["Call Handling"],
        "summary": "Get call handling settings",
        "description": "Returns information about a Zoom Phone's call handling settings. \n\nCall handling settings let you control how your system routes calls during business, closed, or holiday hours. For more information, read our [API guide](https://developers.zoom.us/docs/zoom-phone/call-handling/) or Zoom support article [Customizing call handling settings](https://support.zoom.us/hc/en-us/articles/360059966372-Customizing-call-handling-settings).\n\n**Applicable to user, call queue, auto receptionist, or shared line group call handling at this time.** \n\n**Prerequisites** \n* Pro or a higher account with Zoom Phone enabled\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_call_handling_settings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getCallHandling",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "The extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "nNGsNx2zRDyiIXWVI23FCQ" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "business_hours": {
                      "type": "array",
                      "description": "The information about business hours settings.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "settings": {
                            "type": "object",
                            "properties": {
                              "allow_callers_check_voicemail": {
                                "type": "boolean",
                                "description": "`Note: This field is invalid and part of incorrect documentation. It is not included in the actual response.` \n\nWhether to allow the callers to check voicemails over a phone. Required only when the `call_not_answer_action` setting is set to `1` (Forward to a voicemail).",
                                "example": true,
                                "deprecated": true
                              },
                              "allow_members_to_reset": {
                                "type": "boolean",
                                "description": "This field allows queue members to set their own business hours. It allows queue members' business hours to override the default hours of the call queue.\n\nRequired for `Call Queue custom_hours` sub-setting.",
                                "example": true
                              },
                              "audio_while_connecting": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The audio-while-connecting prompt ID. If the audio was removed from the user's audio library, it's marked with a prefix (for example, `removed_vWby3OZaQlS1nAdmEAqgwA`). You can use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                    "example": "qPwtDrrcSua8O0_n0bDRDg"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The audio while connecting the prompt name.",
                                    "example": "Default"
                                  }
                                },
                                "description": "Returns the audio played when the inbound callers are waiting to be routed to the next available call queue member.\n\n* empty char - default\n* `ring_tone` - \"Ring Tone\" option\n* `0` - disable\n\nReturned only for the `Call Queue` `call_handling` sub-setting."
                              },
                              "call_distribution": {
                                "type": "object",
                                "properties": {
                                  "handle_multiple_calls": {
                                    "type": "boolean",
                                    "description": "The maximum number of calls that can be handled simultaneously is less than half of the total amount of available call queue members. Note that the first incoming call might not be answered first.\n\nReturned only except `simultaneous` ring mode.",
                                    "example": true
                                  },
                                  "ring_duration": {
                                    "type": "integer",
                                    "description": "The ringing duration for each member:\n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n\nReturned only except `simultaneous` ring mode.",
                                    "example": 10,
                                    "enum": [
                                      10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60
                                    ]
                                  },
                                  "ring_mode": {
                                    "type": "string",
                                    "description": "The call distribution ring mode: \n* `simultaneous` \n* `sequential` \n* `rotating` \n* `longest_idle`",
                                    "example": "simultaneous",
                                    "enum": [
                                      "simultaneous",
                                      "sequential",
                                      "rotating",
                                      "longest_idle"
                                    ]
                                  },
                                  "skip_offline_device_phone_number": {
                                    "type": "boolean",
                                    "description": "1. Devices with Zoom app or client not launched and mobile phone with screen locked will be skipped. \n\n2. Phone numbers added to user's call handling settings are skipped.\n\nReturned only except `simultaneous` ring mode.",
                                    "example": true
                                  }
                                },
                                "description": "This option distributes incoming calls.\n\nIf `Sequential` or `Rotating` is selected, calls ring for a specific time before trying the next available queue member. \n\nReturned only for the `call_handling` sub-setting."
                              },
                              "call_forwarding_settings": {
                                "type": "array",
                                "description": "The call forwarding settings. It returns only for the `call_forwarding` sub-setting.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "description": "The external phone number's description.",
                                      "example": "testNumber"
                                    },
                                    "enable": {
                                      "type": "boolean",
                                      "description": "Whether to receive a call.",
                                      "example": true
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The call forwarding's ID.",
                                      "example": "qPvrfrrcrf843cdfvbDRDg"
                                    },
                                    "phone_number": {
                                      "type": "string",
                                      "description": "The external phone number in E164 format.",
                                      "example": "+12058945565"
                                    },
                                    "external_contact": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The external contact's username or extension display name.",
                                          "example": "Johnson"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The external contact's email address.",
                                          "example": "example@example.com"
                                        },
                                        "external_contact_id": {
                                          "type": "string",
                                          "description": "The external contact's ID.",
                                          "example": "OJGi5xOFQPmrJbKg68-iWg"
                                        },
                                        "phone_numbers": {
                                          "type": "array",
                                          "description": "The external contact's phone numbers.",
                                          "items": {
                                            "type": "string",
                                            "example": "+12058945656"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "call_not_answer_action": {
                                "type": "integer",
                                "description": "`Note: This field is invalid and part of incorrect documentation. It is not included in the actual response.` \n\nThe action to take when a call is not answered: \n* `1` &mdash; Forward to a voicemail. \n* `2` &mdash; Forward to the user. \n* `4` &mdash; Forward to the common area. \n* `6` &mdash; Forward to the auto receptionist. \n* `7` &mdash; Forward to a call queue. \n* `8` &mdash; Forward to a shared line group. \n* `9` &mdash; Forward to an external contact. \n* `10` - Forward to a phone number. \n* `11` &mdash; Disconnect. \n* `12` &mdash; Play a message, then disconnect. \n* `13` - Forward to message. \n* `14` - Forward to interactive voice response (IVR). \n\nReturned only for the `call_handling` sub-setting.",
                                "example": 2,
                                "deprecated": true,
                                "enum": [
                                  1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14
                                ]
                              },
                              "connect_to_operator": {
                                "type": "boolean",
                                "description": "`Note: This field is invalid and part of incorrect documentation. It is not included in the actual response.` \n\nWhether to allow callers to reach an operator. Returns only when `call_not_answer_action` is set to `1` (Forward to a voicemail).",
                                "example": true,
                                "deprecated": true
                              },
                              "custom_hours_settings": {
                                "type": "array",
                                "description": "The custom hours settings. It returns only for the `custom_hours` sub-setting.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "from": {
                                      "type": "string",
                                      "description": "The custom hours start time and `HH:mm` format.",
                                      "example": "09:00"
                                    },
                                    "to": {
                                      "type": "string",
                                      "description": "The custom hours end time in `HH:mm` format.",
                                      "example": "18:00"
                                    },
                                    "type": {
                                      "type": "integer",
                                      "description": "The type of custom hours: \n* `0` &mdash; Disabled. \n* `1` &mdash; 24 hours. \n* `2` &mdash; Customized hours.",
                                      "example": 1,
                                      "enum": [0, 1, 2]
                                    },
                                    "weekday": {
                                      "type": "integer",
                                      "description": "The day of the week: \n* `1` &mdash; Sunday \n* `2` &mdash; Monday \n* `3` &mdash; Tuesday \n* `4` &mdash; Wednesday \n* `5` &mdash; Thursday \n* `6` &mdash; Friday \n* `7` &mdash; Saturday",
                                      "example": 5,
                                      "enum": [1, 2, 3, 4, 5, 6, 7]
                                    }
                                  }
                                }
                              },
                              "greeting_prompt": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The greeting audio prompt ID. \n\n Options: empty char - default and `0` - disable \n\n If the audio was removed from the user's audio library, it's marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API. ",
                                    "example": "0"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The greeting audio prompt name.",
                                    "example": "test"
                                  }
                                },
                                "description": "The greeting audio prompt\n\nReturns only for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting."
                              },
                              "max_call_in_queue": {
                                "type": "integer",
                                "description": "The maximum number of calls in queue.\nSpecify the maximum number of callers to place in the queue. When this number is exceeded, callers will be routed based on the overflow option. Up to 60.\n\nReturned only for the `Call Queue` `call_handling` sub-setting.",
                                "example": 5
                              },
                              "max_wait_time": {
                                "type": "integer",
                                "description": "The maximum wait time, in seconds, for `simultaneous` ring mode or the ring duration for each device for `sequential` ring mode: \n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n\nSpecify how long a caller waits in the queue. Once the wait time is exceeded, the caller is rerouted based on the overflow option for call queue`:\n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n* `120` \n* `180` \n* `240` \n* `300` \n* `600` \n* `900` \n* `1200` \n* `1500` \n* `1800`  \n\nReturned only for the `call_handling` sub-setting.",
                                "example": 30,
                                "enum": [
                                  10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60,
                                  120, 180, 240, 300, 600, 900, 1200, 1500, 1800
                                ]
                              },
                              "music_on_hold": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The music on hold prompt ID. If the audio was removed from the user's audio library, it's marked with a prefix, (for example, `removed_vWby3OZaQlS1nAdmEAqgwA`). You can use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                    "example": "fdsij3he89qj2-23uie"
                                  },
                                  "name": {
                                    "type": "string",
                                    "description": "The music on hold prompt name.",
                                    "example": "Default"
                                  }
                                },
                                "description": "The music on hold prompt. This field is an option to choose music for inbound callers when they're placed on hold by a call queue member.\n\nempty char - default and `0` - disable.\n\nReturned only for the `Call Queue` `call_handling` sub-setting."
                              },
                              "receive_call": {
                                "type": "boolean",
                                "description": "This field enables calls to be received during a current call. When enabled, call queue members can receive new incoming calls notification even on the call. \n\nReturned only for the `Call Queue` `call_handling` sub-setting.",
                                "example": true
                              },
                              "require_press_1_before_connecting": {
                                "type": "boolean",
                                "description": "When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot; before the call connects. This field helps to ensure missed calls do not reach to your personal voicemail. This field returns only for the `call_forwarding` sub-setting.",
                                "example": true
                              },
                              "ring_mode": {
                                "type": "string",
                                "description": "The call handling ring mode: \n* `simultaneous` \n* `sequential` \n\nReturned only for the `call_handling` sub-setting.",
                                "example": "simultaneous",
                                "enum": ["simultaneous", "sequential"]
                              },
                              "routing": {
                                "type": "object",
                                "properties": {
                                  "action": {
                                    "type": "integer",
                                    "description": "The action to take when a call is not answered during Business Hours: \n* `1` &mdash; Forward to a Voicemail. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `2` &mdash; Forward to the User. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `3` &mdash; Forward to the Zoom Room. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `4` &mdash; Forward to the Common Area. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `5` &mdash; Forward to the Cisco/Polycom Room. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `6` &mdash; Forward to the Auto Receptionist. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `7` &mdash; Forward to a Call Queue. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `8` &mdash; Forward to a Shared Line Group. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `9` &mdash; Forward to an External Contact. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `10` - Forward to a Phone Number. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `11` &mdash; Disconnect. Applicable to `User`, `Call Queue`, or `Shared Line Group`. \n* `12` &mdash; Play a message, then disconnect. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group` \n* `14` - Forward to an Interactive Voice Response (IVR). Applicable to `Auto Receptionist`. \n* `15` &mdash; Forward to a Partner Contact Center. Applicable to `Auto Receptionist`. \n* `18` &mdash; Forward to Microsoft Teams Resource Account. Required the license of Zoom Phone for Microsoft Teams. Applicable to `Call queue`, `Auto Receptionist`, or `Shared Line group`. \n* `19` &mdash; Forward to a Zoom Contact Center. Required Zoom Contact Center license. Applicable to `Call Queue`, `Auto Receptionist`, or `Shared Line Group`.",
                                    "example": 1,
                                    "enum": [
                                      1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14,
                                      15, 18, 19
                                    ]
                                  },
                                  "forward_to": {
                                    "type": "object",
                                    "properties": {
                                      "display_name": {
                                        "type": "string",
                                        "description": "The extension's name.",
                                        "example": "api_ta_test"
                                      },
                                      "extension_id": {
                                        "type": "string",
                                        "description": "The extension ID.",
                                        "example": "jN9mb38lQTaMgxUq3Nd6ow"
                                      },
                                      "extension_number": {
                                        "type": "integer",
                                        "description": "The extension number.",
                                        "format": "int64",
                                        "example": 101014
                                      },
                                      "extension_type": {
                                        "type": "string",
                                        "description": "The type of extension: \n* `user` \n* `autoReceptionist`  \n* `callQueue`",
                                        "example": "user",
                                        "enum": [
                                          "user",
                                          "autoReceptionist",
                                          "callQueue",
                                          "commonArea"
                                        ]
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "The ID of the extension for `user`, `autoReceptionist`, `device`, or `callQueue`.",
                                        "example": "DYHrdpjrS3uaOf7dPkkg8w"
                                      },
                                      "phone_number": {
                                        "type": "string",
                                        "description": "The extension's phone number or forward to an external number, in [E.164 format](https://en.wikipedia.org/wiki/E.164) format. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `10` (Forward to Phone number/External number) for unanswered calls, this field is used to display the specific Phone number/External number to which the call will be forwarded. This scenario applies to `User`, `Auto Receptionist`, `Call Queue` and `Shared Line Group`.",
                                        "example": "+18889843519"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "This field forwards to an external number description. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `10` (Forward to Phone number/External number) for unanswered calls, this field is used to display the specific Phone number/External number to which the call will be forwarded. This scenario applies to `User`, `Auto Receptionist`, `Call Queue` and `Shared Line Group`.",
                                        "example": "forward to phone number +18889843519."
                                      },
                                      "voicemail_greeting": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The voicemail greeting audio prompt ID. \n\n Options: empty char - default",
                                            "example": "b_fFF75hRgCtzG7Dw7wQgQ"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The voicemail greeting audio prompt name.",
                                            "example": "Voicemail greeting"
                                          }
                                        },
                                        "description": "The voicemail greeting prompt. It returns only when the `action` in the `routing` section is set to `1` (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting."
                                      },
                                      "zcc_phone_number": {
                                        "type": "string",
                                        "description": "The Zoom Contact Center phone number to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `19` (Forward to a Zoom Contact Center) for unanswered calls, this field is used to display the specific Zoom Contact Center to which the call will be forwarded. This scenario applies to `Auto Receptionist`, `Call Queue` and `Shared Line Group`.",
                                        "example": "12055903036"
                                      },
                                      "zcc_phone_number_display_name": {
                                        "type": "string",
                                        "description": "The display name of the Zoom Contact Center phone number to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `19` (Forward to a Zoom Contact Center) for unanswered calls, this field is used to display the specific Zoom Contact Center to which the call will be forwarded. This scenario applies to `Auto Receptionist`, `Call Queue` and `Shared Line Group`.",
                                        "example": "Display name - (205) 690-3036(American English)"
                                      },
                                      "partner_contact_center_id": {
                                        "type": "string",
                                        "description": "The ID of the Partner Contact Center to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `15` (Forward to a Partner Contact Center) for unanswered calls, this field is used to display the specific Partner Contact Center to which the call will be forwarded. This scenario applies to `Auto Receptionist`.",
                                        "example": "0Qa7FFTfR0CgzpgwUrcxtQ"
                                      },
                                      "pcc_phone_number_display_name": {
                                        "type": "string",
                                        "description": "The display name of the Partner Contact Center to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `15` (Forward to a Partner Contact Center) for unanswered calls, this field is used to display the specific Partner Contact Center to which the call will be forwarded. This scenario applies to `Auto Receptionist`.",
                                        "example": "Test contact center"
                                      },
                                      "teams_app_id": {
                                        "type": "string",
                                        "description": "The ID of the Microsoft Teams Voice App to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `18` (Forward to Microsoft Teams Resource Account) for unanswered calls, this field is used to display the specific Microsoft Teams Voice App to which the call will be forwarded. This scenario applies to `Auto Receptionist`, `Call Queue` and `Shared Line Group`.",
                                        "example": "wgYRHE6ITJOZmV6DBvoyZw"
                                      },
                                      "teams_voice_app_name": {
                                        "type": "string",
                                        "description": "The display name of the Microsoft Teams Voice App to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `18` (Forward to Microsoft Teams Resource Account) for unanswered calls, this field is used to display the specific Microsoft Teams Voice App to which the call will be forwarded. This scenario applies to `Auto Receptionist`, `Call Queue` and `Shared Line Group`.",
                                        "example": "Test Teams app"
                                      }
                                    },
                                    "description": "The information about the call forwarding target. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `1` (Forward to voicemail) for unanswered calls, this field is used to display the specific extension to which voicemails are forwarded. This scenario applies to `Auto Receptionist` and `Call Queue`. \n* Secnario 2: when `action` in the `routing` section is set to: `2`(Forward to the User), `3`(Forward to the Zoom Room), `4`(Forward to the Common Area), `5`(Forward to the Cisco/Polycom Room), `6`(Forward to the Auto Receptionist), `7`(Forward to a Call Queue), `8`(Forward to a Shared Line Group) or `9`(forward to an External Contact) for unanswered calls, this field is used to display the extension to which the call will be forwarded. This scenario applies to `User`, `Auto Receptionist`, `Call Queue` and `Shared Line Group`. \n* Secnario 3: When `action` in the `routing` section is set to `19` (Forward to a Zoom Contact Center) for unanswered calls, this field is used to display the specific Zoom Contact Center to which the call will be forwarded. This scenario applies to `Auto Receptionist`, `Call Queue` and `Shared Line Group`. \n* Secnario 4: When `action` in the `routing` section is set to `15` (Forward to a Partner Contact Center) for unanswered calls, this field is used to display the specific Partner Contact Center to which the call will be forwarded. This scenario applies to `Auto Receptionist`. \n* Secnario 5: When `action` in the `routing` section is set to `10` (Forward to Phone number/External number) for unanswered calls, this field is used to display the specific Phone number/External number to which the call will be forwarded. This scenario applies to `User`, `Auto Receptionist`, `Call Queue` and `Shared Line Group`. \n* Secnario 6: When `action` in the `routing` section is set to `18` (Forward to Microsoft Teams Resource Account) for unanswered calls, this field is used to display the specific Microsoft Teams Voice App to which the call will be forwarded. This scenario applies to `Auto Receptionist`, `Call Queue` and `Shared Line Group`."
                                  },
                                  "operator": {
                                    "type": "object",
                                    "properties": {
                                      "display_name": {
                                        "type": "string",
                                        "description": "The extension's name.",
                                        "example": "user A"
                                      },
                                      "extension_id": {
                                        "type": "string",
                                        "description": "The extension ID.",
                                        "example": "jN9mb38lQTaMgxUq3Nd6ow"
                                      },
                                      "extension_number": {
                                        "type": "integer",
                                        "description": "The extension number.",
                                        "format": "int64",
                                        "example": 101014
                                      },
                                      "extension_type": {
                                        "type": "string",
                                        "description": "The type of extension: \n* `user` \n* `commonArea` \n* `sharedLineGroup` \n* `callQueue`",
                                        "example": "user",
                                        "enum": [
                                          "user",
                                          "commonArea",
                                          "sharedLineGroup",
                                          "callQueue"
                                        ]
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "The ID of the extension for `user`, `commonArea`, `sharedLineGroup`, `device`, or `callQueue`.",
                                        "example": "DYHrdpjrS3uaOf7dPkkg8w"
                                      }
                                    },
                                    "description": "The the operator to whom the call is being forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `routing` section is set to `1` (Forward to a voicemail) and the `connect_to_operator` is `true`. \n\nApplicable to the extension as shown below:\n* `User` \n* `Call Queue` \n* `Shared Line Group`"
                                  },
                                  "connect_to_operator": {
                                    "type": "boolean",
                                    "description": "Whether to allow callers to reach an operator. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `routing` section is set to `1` (Forward to a voicemail). \n\nApplicable to the extension as shown below:\n* `User` \n* `Call Queue` \n* `Shared Line Group`",
                                    "example": true
                                  },
                                  "allow_callers_check_voicemail": {
                                    "type": "boolean",
                                    "description": "Whether to allow the callers to check voicemails over a phone. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `routing` section is set to `1` (Forward to a voicemail). \n\nApplicable to the extension as shown below:\n* `User` \n* `Shared Line Group`",
                                    "example": true
                                  },
                                  "voicemail_greeting": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The voicemail greeting audio prompt ID. \n\n Options: empty char - default",
                                        "example": "b_fFF75hRgCtzG7Dw7wQgQ"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The voicemail greeting audio prompt name.",
                                        "example": "Greeting voicemail"
                                      }
                                    },
                                    "description": "The voicemail greeting audio prompt\n\nReturns only for the `user` and `call_handling` subsetting. It displays when the `action` in the `routing` section is set to `1` - Forward to a voicemail."
                                  },
                                  "voicemail_leaving_instruction": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The voicemail leaving instruction prompt ID. \n\n Options: empty char - default",
                                        "example": "LxC4hMD8TJeFpwRcB_QWkA"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The voicemail leaving instruction prompt name.",
                                        "example": "Voicemail greeting"
                                      }
                                    },
                                    "description": "The voicemail leaving instruction prompt.\n\nThis field is only available in the following scenarios: \n* Secnario 1: The the `action` in the `routing` section is set to `1` (Forward to a voicemail), and either `connect_to_operator` or `allow_callers_check_voicemail` is set to `true`. \n\nApplicable to the extension as shown below:\n* `User` \n* `Call Queue` \n* `Shared Line Group`"
                                  },
                                  "message_greeting": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The message greeting prompt ID. \n\n Options: empty char - default",
                                        "example": "di936zivT46YBCt3dr15GQ"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The message greeting prompt name.",
                                        "example": "Message greeting"
                                      }
                                    },
                                    "description": "The message greeting prompt.\n\nThis field is only available in the following scenarios: \n* Secnario 1: The the `action` in the `routing` section is set to `12` (Play a message, then disconnect). \n\nApplicable to the extension as shown below:\n* `User` \n* `Auto Receptionist` \n* `Call Queue` \n* `Shared Line Group`"
                                  },
                                  "require_press_1_before_connecting": {
                                    "type": "boolean",
                                    "description": "When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot; before the call connects. It helps to ensure that missed calls do not reach to your personal voicemail. It returns for the `Forward to an external number` and `Forward to External Contacts` options.",
                                    "example": true
                                  },
                                  "overflow_play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "Whether to play callee's voicemail greeting when the caller reaches the end of the forwarding sequence. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `routing` section is set to: `2`(Forward to the User), `3`(Forward to the Zoom Room), `4`(Forward to the Common Area), `5`(Forward to the Cisco/Polycom Room), `6`(Forward to the Auto Receptionist), `7`(Forward to a Call Queue) or `8`(Forward to a Shared Line Group).  \n\nApplicable to the extension as shown below:\n* `User`",
                                    "example": true
                                  },
                                  "play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "Whether to play callee's voicemail greeting when the caller reaches the end of the forwarding sequence. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `routing` section is set to `1` (Forward to a voicemail) and the `connect_to_operator` is `true`. \n\nApplicable to the extension as shown below:\n* `User`",
                                    "example": true
                                  },
                                  "busy_play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "`Note: This field is invalid and part of incorrect documentation. It is only included in `busy_routing` section.` \n\nWhether to play the callee's voicemail greeting when the caller reaches the end of the forwarding sequence. It displays when `busy_routing` action is set to `2` - Forward to the user, `4` - Forward to the common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue, `8` - Forward to a shared line group, `9` - Forward to an external contact, `10` - Forward to an external number.",
                                    "example": true,
                                    "deprecated": true
                                  }
                                },
                                "description": "The extension's forwarding or overflow information when a call is not answered during Business Hours. \n\nApplicable to the extension as shown below:\n* `User` \n* `Auto Receptionist` \n* `Call Queue` \n* `Shared Line Group`."
                              },
                              "busy_routing": {
                                "type": "object",
                                "properties": {
                                  "action": {
                                    "type": "integer",
                                    "description": "The action to take when the user is busy on another call during Business Hours: \n* `21` - Call waiting. \n* `22` - Play a busy signal. \n* `1` &mdash; Forward to a voicemail/videomail. \n* `2` - Forward to the user. \n* `4` - Forward to the common area. \n* `6` - Forward to the auto receptionist. \n* `7` - Forward to a call queue. \n* `8` - Forward to a shared line group. \n* `9` - Forward to an external contact. \n* `10` - Forward to an external number. \n* `12` &mdash; Play a message, then disconnect.",
                                    "example": 1
                                  },
                                  "forward_to": {
                                    "type": "object",
                                    "properties": {
                                      "display_name": {
                                        "type": "string",
                                        "description": "The extension's name.",
                                        "example": "api_ta_test"
                                      },
                                      "extension_id": {
                                        "type": "string",
                                        "description": "The extension ID.",
                                        "example": "jN9mb38lQTaMgxUq3Nd6ow"
                                      },
                                      "extension_number": {
                                        "type": "integer",
                                        "description": "The extension number.",
                                        "format": "int64",
                                        "example": 101014
                                      },
                                      "extension_type": {
                                        "type": "string",
                                        "description": "The type of extension: \n* `user` \n* `autoReceptionist`  \n* `callQueue`",
                                        "example": "user",
                                        "enum": [
                                          "user",
                                          "autoReceptionist",
                                          "callQueue",
                                          "commonArea"
                                        ]
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "The ID of the extension for `user`, `autoReceptionist`, `device`, or `callQueue`.",
                                        "example": "DYHrdpjrS3uaOf7dPkkg8w"
                                      },
                                      "phone_number": {
                                        "type": "string",
                                        "description": "The extension's phone number or forward to an external number, in [E.164 format](https://en.wikipedia.org/wiki/E.164) format. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `busy_routing` section is set to `10` (Forward to Phone number/External number) for the user busy on another call, this field is used to display the specific Phone number/External number to which the call will be forwarded. This scenario applies to `User`.",
                                        "example": "+18889843519"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "This field forwards to an external number description. \n\nThis field is only available in the following scenarios:  \n* Secnario 1: When `action` in the `busy_routing` section is set to `10` (Forward to Phone number/External number) for the user busy on another call, this field is used to display the specific Phone number/External number to which the call will be forwarded. This scenario applies to `User`.",
                                        "example": "forward to phone number +18889843519."
                                      },
                                      "voicemail_greeting": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The voicemail greeting audio prompt ID. \n\n Options: empty char - default",
                                            "example": "b_fFF75hRgCtzG7Dw7wQgQ"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The voicemail greeting audio prompt name.",
                                            "example": "Voicemail greeting"
                                          }
                                        },
                                        "description": "The voicemail greeting prompt. It returns only when the `action` in the `busy_routing` section is set to `1` (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting."
                                      }
                                    },
                                    "description": "The information about the call forwarding target. \n\nThis field is only available in the following scenarios: \n* Secnario 1: when `action` in the `busy_routing` section is set to: `2`(Forward to the User), `3`(Forward to the Zoom Room), `4`(Forward to the Common Area), `5`(Forward to the Cisco/Polycom Room), `6`(Forward to the Auto Receptionist), `7`(Forward to a Call Queue), `8`(Forward to a Shared Line Group) or `9`(forward to an External Contact) for the user busy on another call, this field is used to display the extension to which the call will be forwarded. This scenario applies to `User`. \n* Secnario 2: When `action` in the `busy_routing` section is set to `10` (Forward to Phone number/External number) for the user busy on another call, this field is used to display the specific Phone number/External number to which the call will be forwarded. This scenario applies to `User`."
                                  },
                                  "operator": {
                                    "type": "object",
                                    "properties": {
                                      "display_name": {
                                        "type": "string",
                                        "description": "The extension's name.",
                                        "example": "user A"
                                      },
                                      "extension_id": {
                                        "type": "string",
                                        "description": "The extension ID.",
                                        "example": "jN9mb38lQTaMgxUq3Nd6ow"
                                      },
                                      "extension_number": {
                                        "type": "integer",
                                        "description": "The extension number.",
                                        "format": "int64",
                                        "example": 101014
                                      },
                                      "extension_type": {
                                        "type": "string",
                                        "description": "The type of extension: \n* `user` \n* `commonArea` \n* `sharedLineGroup` \n* `callQueue`",
                                        "example": "user",
                                        "enum": [
                                          "user",
                                          "commonArea",
                                          "sharedLineGroup",
                                          "callQueue"
                                        ]
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "The ID of the extension for `user`, `commonArea`, `sharedLineGroup`, `device`, or `callQueue`.",
                                        "example": "DYHrdpjrS3uaOf7dPkkg8w"
                                      }
                                    },
                                    "description": "The the operator to whom the call is being forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `busy_routing` section is set to `1` (Forward to a voicemail) and the `connect_to_operator` is `true`. \n\nApplicable to the extension as shown below:\n* `User`"
                                  },
                                  "connect_to_operator": {
                                    "type": "boolean",
                                    "description": "Whether to allow callers to reach an operator. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `busy_routing` section is set to `1` (Forward to a voicemail). \n\nApplicable to the extension as shown below:\n* `User`",
                                    "example": true
                                  },
                                  "allow_callers_check_voicemail": {
                                    "type": "boolean",
                                    "description": "Whether to allow the callers to check voicemails over a phone. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `busy_routing` section is set to `1` (Forward to a voicemail). \n\nApplicable to the extension as shown below:\n* `User`",
                                    "example": true
                                  },
                                  "voicemail_greeting": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The voicemail greeting audio prompt ID. \n\n Options: empty char - default",
                                        "example": "b_fFF75hRgCtzG7Dw7wQgQ"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The voicemail greeting audio prompt name.",
                                        "example": "Greeting voicemail"
                                      }
                                    },
                                    "description": "The voicemail greeting audio prompt\n\nReturns only for the `user` and `call_handling` subsetting options. It displays when the `action` in the `busy_routing` section is set to `1` - Forward to a voicemail."
                                  },
                                  "voicemail_leaving_instruction": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The voicemail leaving instruction prompt ID. \n\n Options: empty char - default",
                                        "example": "LxC4hMD8TJeFpwRcB_QWkA"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The voicemail leaving instruction prompt name.",
                                        "example": "Voicemail greeting"
                                      }
                                    },
                                    "description": "The voicemail leaving instruction prompt.\n\nThis field is only available in the following scenarios: \n* Secnario 1: The the `action` in the `busy_routing` section is set to `1` (Forward to a voicemail), and either `connect_to_operator` or `allow_callers_check_voicemail` is set to `true`. \n\nApplicable to the extension as shown below:\n* `User`"
                                  },
                                  "message_greeting": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The message greeting prompt ID. \n\n Options: empty char - default",
                                        "example": "di936zivT46YBCt3dr15GQ"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The message greeting prompt name.",
                                        "example": "Message greeting"
                                      }
                                    },
                                    "description": "The message greeting prompt.\n\nThis field is only available in the following scenarios: \n* Secnario 1: The the `action` in the `busy_routing` section is set to `12` (Play a message, then disconnect). \n\nApplicable to the extension as shown below:\n* `User` \n* `Auto Receptionist` \n* `Call Queue` \n* `Shared Line Group`"
                                  },
                                  "require_press_1_before_connecting": {
                                    "type": "boolean",
                                    "description": "When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot; before the call connects. This field helps to ensure that missed calls do not reach to your personal voicemail. It returns for the `Forward to an external number` and `Forward to External Contacts` options.",
                                    "example": true
                                  },
                                  "overflow_play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "`Note: This field is invalid and part of incorrect documentation. It is only included in the `routing` section.` \n\nWhether to play the callee's voicemail greeting when the caller reaches the end of forwarding sequence. It displays when `call_not_answer_action` is set to `2` - Forward to the user, `4` - Forward to the common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue, `8` - Forward to a shared line group, `9` - Forward to an external contact, `10` - Forward to an external number.",
                                    "example": true,
                                    "deprecated": true
                                  },
                                  "play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "Whether to play callee's voicemail greeting when the caller reaches the end of the forwarding sequence. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `busy_routing` section is set to `1` (Forward to a voicemail) and the `connect_to_operator` is `true`. \n\nApplicable to the extension as shown below:\n* `User`",
                                    "example": true
                                  },
                                  "busy_play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "Whether to play callee's voicemail greeting when the caller reaches the end of the forwarding sequence. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `busy_routing` section is set to: `2`(Forward to the User), `3`(Forward to the Zoom Room), `4`(Forward to the Common Area), `5`(Forward to the Cisco/Polycom Room), `6`(Forward to the Auto Receptionist), `7`(Forward to a Call Queue) or `8`(Forward to a Shared Line Group).  \n\nApplicable to the extension as shown below:\n* `User`",
                                    "example": true
                                  }
                                },
                                "description": "The extension's forwarding or overflow information when the user is busy on another call during Business Hours. \n\nApplicable to the extension as shown below:\n* `User`."
                              },
                              "type": {
                                "type": "integer",
                                "description": "The type of custom hours: \n* `1` &mdash; 24 hours, 7 days a week. \n* `2` &mdash; Custom hours. \n\nReturns only for the `custom_hours` sub-setting.",
                                "example": 1,
                                "enum": [1, 2]
                              },
                              "wrap_up_time": {
                                "type": "integer",
                                "description": "The wrap up time in seconds. \nSpecify the duration before the next queue call is routed to a member in call queue:\n* `0` \n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n* `120` \n* `180` \n* `240` \n* `300`\n\nReturns only for the `call_handling` sub-setting option.",
                                "example": 30,
                                "enum": [
                                  10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60,
                                  120, 180, 240, 300
                                ]
                              }
                            },
                            "description": "The business hours settings."
                          },
                          "sub_setting_type": {
                            "type": "string",
                            "description": "The type of sub-setting: \n* `call_forwarding` \n* `custom_hours` \n* `call_handling`",
                            "example": "call_forwarding",
                            "enum": [
                              "call_forwarding",
                              "custom_hours",
                              "call_handling"
                            ]
                          }
                        }
                      }
                    },
                    "closed_hours": {
                      "type": "array",
                      "description": "The information about the closed hours settings.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "settings": {
                            "type": "object",
                            "properties": {
                              "allow_callers_check_voicemail": {
                                "type": "boolean",
                                "description": "`Note: This field is invalid and part of incorrect documentation. It is not included in the actual response.` \n\nWhether to allow the callers to check voicemails over a phone. It's required only when the `call_not_answer_action` setting is set to `1` (Forward to a voicemail).",
                                "example": true,
                                "deprecated": true
                              },
                              "call_forwarding_settings": {
                                "type": "array",
                                "description": "The call forwarding settings. It returns only for the `call_forwarding` sub-setting options.",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "description": {
                                      "type": "string",
                                      "description": "The external phone number description.",
                                      "example": "testDescription"
                                    },
                                    "enable": {
                                      "type": "boolean",
                                      "description": "Whether to receive a call.",
                                      "example": false
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The call forwarding ID.",
                                      "example": "sd8683_fwh39_F3hfsd"
                                    },
                                    "phone_number": {
                                      "type": "string",
                                      "description": "The external phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164) format.",
                                      "example": "+12058945583"
                                    },
                                    "external_contact": {
                                      "type": "object",
                                      "properties": {
                                        "name": {
                                          "type": "string",
                                          "description": "The external contact's username or extension display name.",
                                          "example": "Johnson"
                                        },
                                        "email": {
                                          "type": "string",
                                          "description": "The external contact's email address.",
                                          "example": "example@example.com"
                                        },
                                        "external_contact_id": {
                                          "type": "string",
                                          "description": "The external contact's ID.",
                                          "example": "OJGi5xOFQPmrJbKg68-iWg"
                                        },
                                        "phone_numbers": {
                                          "type": "array",
                                          "description": "The external contact's phone numbers.",
                                          "items": {
                                            "type": "string",
                                            "example": "+12058945656"
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              },
                              "call_not_answer_action": {
                                "type": "integer",
                                "description": "`Note: This field is invalid and part of incorrect documentation. It is not included in the actual response.` \n\nThe action to take when a call is not answered: \n* `1` &mdash; Forward to a voicemail. \n* `2` &mdash; Forward to the user. \n* `4` &mdash; Forward to the common area. \n* `6` &mdash; Forward to the auto receptionist. \n* `7` &mdash; Forward to a call queue. \n* `8` &mdash; Forward to a shared line group. \n* `9` &mdash; Forward to an external contact. \n* `10` - Forward to a phone number. \n* `11` &mdash; Disconnect. \n* `12` &mdash; Play a message, then disconnect. \n* `13` - Forward to message. \n* `14` - Forward to interactive voice response (IVR). \n\nReturns only for the `call_handling` sub-setting option.",
                                "example": 2,
                                "deprecated": true,
                                "enum": [
                                  1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14
                                ]
                              },
                              "connect_to_operator": {
                                "type": "boolean",
                                "description": "`Note: This field is invalid and part of incorrect documentation. It is not included in the actual response.` \n\nWhether to allow callers to reach an operator. It returns only when the `call_not_answer_action` setting is set to `1` (Forward to a voicemail).",
                                "example": true,
                                "deprecated": true
                              },
                              "max_wait_time": {
                                "type": "integer",
                                "description": "The maximum wait time, in seconds, for `simultaneous` ring mode or the ring duration for each device for `sequential` ring mode: \n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n\nReturns only for the `call_handling` sub-setting option.",
                                "example": 30,
                                "enum": [
                                  10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60
                                ]
                              },
                              "require_press_1_before_connecting": {
                                "type": "boolean",
                                "description": "When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot; before the call connects. It helps to ensure that missed calls do not reach to your personal voicemail. It returns only for the `call_forwarding` sub-setting option.",
                                "example": true
                              },
                              "ring_mode": {
                                "type": "string",
                                "description": "The call handling's ring mode setting: \n* `simultaneous` \n* `sequential` \n\nReturns only for the `call_handling` sub-setting option.",
                                "example": "simultaneous",
                                "enum": ["simultaneous", "sequential"]
                              },
                              "routing": {
                                "type": "object",
                                "properties": {
                                  "action": {
                                    "type": "integer",
                                    "description": "The action to take when a call is not answered during Closed Hours: \n* `1` &mdash; Forward to a Voicemail. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `2` &mdash; Forward to the User. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `3` &mdash; Forward to the Zoom Room. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `4` &mdash; Forward to the Common Area. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `5` &mdash; Forward to the Cisco/Polycom Room. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `6` &mdash; Forward to the Auto Receptionist. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `7` &mdash; Forward to a Call Queue. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `8` &mdash; Forward to a Shared Line Group. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `9` &mdash; Forward to an External Contact. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `10` - Forward to a Phone Number. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `11` &mdash; Disconnect. Applicable to `User`, `Call Queue`, or `Shared Line Group`. \n* `12` &mdash; Play a message, then disconnect. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group` \n* `14` - Forward to an Interactive Voice Response (IVR). Applicable to `Auto Receptionist`. \n* `15` &mdash; Forward to a Partner Contact Center. Applicable to `Auto Receptionist`. \n* `18` &mdash; Forward to Microsoft Teams Resource Account. Required the license of Zoom Phone for Microsoft Teams. Applicable to `Call queue`, `Auto Receptionist`, or `Shared Line group`. \n* `19` &mdash; Forward to a Zoom Contact Center. Required Zoom Contact Center license. Applicable to `Call Queue`, `Auto Receptionist`, or `Shared Line Group`.",
                                    "example": 1,
                                    "enum": [
                                      1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14,
                                      15, 18, 19
                                    ]
                                  },
                                  "forward_to": {
                                    "type": "object",
                                    "properties": {
                                      "display_name": {
                                        "type": "string",
                                        "description": "The extension's name.",
                                        "example": "api_ta_test"
                                      },
                                      "extension_id": {
                                        "type": "string",
                                        "description": "The extension ID.",
                                        "example": "jN9mb38lQTaMgxUq3Nd6ow"
                                      },
                                      "extension_number": {
                                        "type": "integer",
                                        "description": "The extension number.",
                                        "format": "int64",
                                        "example": 101014
                                      },
                                      "extension_type": {
                                        "type": "string",
                                        "description": "The type of extension: \n* `user` \n* `autoReceptionist`  \n* `callQueue`",
                                        "example": "user",
                                        "enum": [
                                          "user",
                                          "autoReceptionist",
                                          "callQueue",
                                          "commonArea"
                                        ]
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "The ID of the extension for `user`, `autoReceptionist`, `device`, or `callQueue`.",
                                        "example": "DYHrdpjrS3uaOf7dPkkg8w"
                                      },
                                      "phone_number": {
                                        "type": "string",
                                        "description": "The extension's phone number or forward to an external number, in [E.164 format](https://en.wikipedia.org/wiki/E.164) format. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `10` (Forward to Phone number/External number) for unanswered calls, this field is used to display the specific Phone number/External number to which the call will be forwarded. This scenario applies to `User`, `Auto Receptionist`, `Call Queue` and `Shared Line Group`.",
                                        "example": "+18889843519"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "This field forwards to an external number description. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `10` (Forward to Phone number/External number) for unanswered calls, this field is used to display the specific Phone number/External number to which the call will be forwarded. This scenario applies to `User`, `Auto Receptionist`, `Call Queue` and `Shared Line Group`.",
                                        "example": "forward to phone number +18889843519."
                                      },
                                      "voicemail_greeting": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The voicemail greeting audio prompt ID. \n\n Options: empty char - default",
                                            "example": "b_fFF75hRgCtzG7Dw7wQgQ"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The voicemail greeting audio prompt name.",
                                            "example": "Voicemail greeting"
                                          }
                                        },
                                        "description": "The voicemail greeting prompt. It returns only when the `action` in the `routing` section is set to `1` (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting."
                                      },
                                      "zcc_phone_number": {
                                        "type": "string",
                                        "description": "The Zoom Contact Center phone number to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `19` (Forward to a Zoom Contact Center) for unanswered calls, this field is used to display the specific Zoom Contact Center to which the call will be forwarded. This scenario applies to `Auto Receptionist`, `Call Queue` and `Shared Line Group`.",
                                        "example": "12055903036"
                                      },
                                      "zcc_phone_number_display_name": {
                                        "type": "string",
                                        "description": "The display name of the Zoom Contact Center phone number to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `19` (Forward to a Zoom Contact Center) for unanswered calls, this field is used to display the specific Zoom Contact Center to which the call will be forwarded. This scenario applies to `Auto Receptionist`, `Call Queue` and `Shared Line Group`.",
                                        "example": "Display name - (205) 690-3036(American English)"
                                      },
                                      "partner_contact_center_id": {
                                        "type": "string",
                                        "description": "The ID of the Partner Contact Center to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `15` (Forward to a Partner Contact Center) for unanswered calls, this field is used to display the specific Partner Contact Center to which the call will be forwarded. This scenario applies to `Auto Receptionist`.",
                                        "example": "0Qa7FFTfR0CgzpgwUrcxtQ"
                                      },
                                      "pcc_phone_number_display_name": {
                                        "type": "string",
                                        "description": "The display name of the Partner Contact Center to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `15` (Forward to a Partner Contact Center) for unanswered calls, this field is used to display the specific Partner Contact Center to which the call will be forwarded. This scenario applies to `Auto Receptionist`.",
                                        "example": "Test contact center"
                                      },
                                      "teams_app_id": {
                                        "type": "string",
                                        "description": "The ID of the Microsoft Teams Voice App to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `18` (Forward to Microsoft Teams Resource Account) for unanswered calls, this field is used to display the specific Microsoft Teams Voice App to which the call will be forwarded. This scenario applies to `Auto Receptionist`, `Call Queue` and `Shared Line Group`.",
                                        "example": "wgYRHE6ITJOZmV6DBvoyZw"
                                      },
                                      "teams_voice_app_name": {
                                        "type": "string",
                                        "description": "The display name of the Microsoft Teams Voice App to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `18` (Forward to Microsoft Teams Resource Account) for unanswered calls, this field is used to display the specific Microsoft Teams Voice App to which the call will be forwarded. This scenario applies to `Auto Receptionist`, `Call Queue` and `Shared Line Group`.",
                                        "example": "Test Teams app"
                                      }
                                    },
                                    "description": "The information about the call forwarding target: \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `routing` section is set to `1` (Forward to voicemail) for unanswered calls, this field is used to display the specific extension to which voicemails are forwarded. This scenario applies to `Auto Receptionist` and `Call Queue`. \n* Secnario 2: when `action` in the `routing` section is set to: `2`(Forward to the User), `3`(Forward to the Zoom Room), `4`(Forward to the Common Area), `5`(Forward to the Cisco/Polycom Room), `6`(Forward to the Auto Receptionist), `7`(Forward to a Call Queue), `8`(Forward to a Shared Line Group) or `9`(forward to an External Contact) for unanswered calls, this field is used to display the extension to which the call will be forwarded. This scenario applies to `User`, `Auto Receptionist`, `Call Queue` and `Shared Line Group`. \n* Secnario 3: When `action` in the `routing` section is set to `19` (Forward to a Zoom Contact Center) for unanswered calls, this field is used to display the specific Zoom Contact Center to which the call will be forwarded. This scenario applies to `Auto Receptionist`, `Call Queue` and `Shared Line Group`. \n* Secnario 4: When `action` in the `routing` section is set to `15` (Forward to a Partner Contact Center) for unanswered calls, this field is used to display the specific Partner Contact Center to which the call will be forwarded. This scenario applies to `Auto Receptionist`. \n* Secnario 5: When `action` in the `routing` section is set to `10` (Forward to Phone number/External number) for unanswered calls, this field is used to display the specific Phone number/External number to which the call will be forwarded. This scenario applies to `User`, `Auto Receptionist`, `Call Queue` and `Shared Line Group`. \n* Secnario 6: When `action` in the `routing` section is set to `18` (Forward to Microsoft Teams Resource Account) for unanswered calls, this field is used to display the specific Microsoft Teams Voice App to which the call will be forwarded. This scenario applies to `Auto Receptionist`, `Call Queue` and `Shared Line Group`."
                                  },
                                  "operator": {
                                    "type": "object",
                                    "properties": {
                                      "display_name": {
                                        "type": "string",
                                        "description": "The extension name.",
                                        "example": "user A"
                                      },
                                      "extension_id": {
                                        "type": "string",
                                        "description": "The extension ID.",
                                        "example": "jN9mb38lQTaMgxUq3Nd6ow"
                                      },
                                      "extension_number": {
                                        "type": "integer",
                                        "description": "The extension number.",
                                        "format": "int64",
                                        "example": 101014
                                      },
                                      "extension_type": {
                                        "type": "string",
                                        "description": "The type of extension: \n* `user` \n* `commonArea` \n* `sharedLineGroup` \n* `callQueue`",
                                        "example": "user",
                                        "enum": [
                                          "user",
                                          "commonArea",
                                          "sharedLineGroup",
                                          "callQueue"
                                        ]
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "The ID of the extension for `user`, `commonArea`, `sharedLineGroup`, `device`, or `callQueue`.",
                                        "example": "DYHrdpjrS3uaOf7dPkkg8w"
                                      }
                                    },
                                    "description": "The the operator to whom the call is being forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `routing` section is set to `1` (Forward to a voicemail) and the `connect_to_operator` is `true`. \n\nApplicable to the extension as shown below:\n* `User` \n* `Call Queue` \n* `Shared Line Group`"
                                  },
                                  "connect_to_operator": {
                                    "type": "boolean",
                                    "description": "Whether to allow callers to reach an operator. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `routing` section is set to `1` (Forward to a voicemail). \n\nApplicable to the extension as shown below:\n* `User` \n* `Call Queue` \n* `Shared Line Group`",
                                    "example": true
                                  },
                                  "allow_callers_check_voicemail": {
                                    "type": "boolean",
                                    "description": "Whether to allow the callers to check voicemails over a phone. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `routing` section is set to `1` (Forward to a voicemail). \n\nApplicable to the extension as shown below:\n* `User` \n* `Shared Line Group`",
                                    "example": true
                                  },
                                  "voicemail_greeting": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The voicemail greeting audio prompt ID. \n\n Options: empty char - default",
                                        "example": "b_fFF75hRgCtzG7Dw7wQgQ"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The voicemail greeting audio prompt name.",
                                        "example": "Greeting voicemail"
                                      }
                                    },
                                    "description": "The voicemail greeting audio prompt\n\nReturns only for the `user` and `call_handling` subsetting options. It displays when the `action` in the `routing` section is set to `1` - Forward to a voicemail."
                                  },
                                  "voicemail_leaving_instruction": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The voicemail leaving instruction prompt ID. \n\n Options: empty char - default",
                                        "example": "LxC4hMD8TJeFpwRcB_QWkA"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The voicemail leaving instruction prompt name.",
                                        "example": "Voicemail greeting"
                                      }
                                    },
                                    "description": "The voicemail leaving instruction prompt.\n\nThis field is only available in the following scenarios: \n* Secnario 1: The the `action` in the `routing` section is set to `1` (Forward to a voicemail), and either `connect_to_operator` or `allow_callers_check_voicemail` is set to `true`. \n\nApplicable to the extension as shown below:\n* `User` \n* `Call Queue` \n* `Shared Line Group`"
                                  },
                                  "message_greeting": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The message greeting prompt ID. \n\n Options: empty char - default",
                                        "example": "di936zivT46YBCt3dr15GQ"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The message greeting prompt name.",
                                        "example": "Message greeting"
                                      }
                                    },
                                    "description": "The message greeting prompt.\n\nThis field is only available in the following scenarios: \n* Secnario 1: The the `action` in the `routing` section is set to `12` (Play a message, then disconnect). \n\nApplicable to the extension as shown below:\n* `User` \n* `Auto Receptionist` \n* `Call Queue` \n* `Shared Line Group`"
                                  },
                                  "require_press_1_before_connecting": {
                                    "type": "boolean",
                                    "description": "When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot; before the call connects. This field helps to ensure that missed calls do not reach to your personal voicemail. It returns for the `Forward to an external number` and `Forward to External Contacts` options.",
                                    "example": true
                                  },
                                  "overflow_play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "Whether to play callee's voicemail greeting when the caller reaches the end of the forwarding sequence. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `routing` section is set to: `2`(Forward to the User), `3`(Forward to the Zoom Room), `4`(Forward to the Common Area), `5`(Forward to the Cisco/Polycom Room), `6`(Forward to the Auto Receptionist), `7`(Forward to a Call Queue) or `8`(Forward to a Shared Line Group).  \n\nApplicable to the extension as shown below:\n* `User`",
                                    "example": true
                                  },
                                  "play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "Whether to play callee's voicemail greeting when the caller reaches the end of the forwarding sequence. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `routing` section is set to `1` (Forward to a voicemail) and the `connect_to_operator` is `true`. \n\nApplicable to the extension as shown below:\n* `User`",
                                    "example": true
                                  },
                                  "busy_play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "`Note: This field is invalid and part of incorrect documentation. It is only included in the `busy_routing` section.` \n\nWhether to play callee's voicemail greeting when caller reaches end of forwarding sequence. It displays when `busy_routing` action is set to `2` - Forward to the user, `4` - Forward to the common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue, `8` - Forward to a shared line group, `9` - Forward to an external contact, `10` - Forward to an external number.",
                                    "example": true,
                                    "deprecated": true
                                  }
                                },
                                "description": "The extension's forwarding or overflow information when a call is not answered during Closed Hours. \n\nApplicable to the extension as shown below:\n* `User` \n* `Auto Receptionist` \n* `Call Queue` \n* `Shared Line Group`."
                              },
                              "busy_routing": {
                                "type": "object",
                                "properties": {
                                  "action": {
                                    "type": "integer",
                                    "description": "The action to take when the user is busy on another call during Closed Hours: \n* `21` - Call waiting. \n* `22` - Play a busy signal. \n* `1` &mdash; Forward to a voicemail/videomail. \n* `2` - Forward to the user. \n* `4` - Forward to the common area. \n* `6` - Forward to the auto receptionist. \n* `7` - Forward to a call queue. \n* `8` - Forward to a shared line group. \n* `9` - Forward to an external contact. \n* `10` - Forward to an external number. \n* `12` &mdash; Play a message, then disconnect.",
                                    "example": 1
                                  },
                                  "forward_to": {
                                    "type": "object",
                                    "properties": {
                                      "display_name": {
                                        "type": "string",
                                        "description": "The extension's name.",
                                        "example": "api_ta_test"
                                      },
                                      "extension_id": {
                                        "type": "string",
                                        "description": "The extension ID.",
                                        "example": "jN9mb38lQTaMgxUq3Nd6ow"
                                      },
                                      "extension_number": {
                                        "type": "integer",
                                        "description": "The extension number.",
                                        "format": "int64",
                                        "example": 101014
                                      },
                                      "extension_type": {
                                        "type": "string",
                                        "description": "The type of extension: \n* `user` \n* `autoReceptionist`  \n* `callQueue`",
                                        "example": "user",
                                        "enum": [
                                          "user",
                                          "autoReceptionist",
                                          "callQueue",
                                          "commonArea"
                                        ]
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "The ID of the extension for `user`, `autoReceptionist`, `device`, or `callQueue`.",
                                        "example": "DYHrdpjrS3uaOf7dPkkg8w"
                                      },
                                      "phone_number": {
                                        "type": "string",
                                        "description": "The extension's phone number or forward to an external number, in [E.164 format](https://en.wikipedia.org/wiki/E.164) format. \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `action` in the `busy_routing` section is set to `10` (Forward to Phone number/External number) for the user busy on another call, this field is used to display the specific Phone number/External number to which the call will be forwarded. This scenario applies to `User`.",
                                        "example": "+18889843519"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "This field forwards to an external number description. \n\nThis field is only available in the following scenarios:  \n* Secnario 1: When `action` in the `busy_routing` section is set to `10` (Forward to Phone number/External number) for the user busy on another call, this field is used to display the specific Phone number/External number to which the call will be forwarded. This scenario applies to `User`.",
                                        "example": "forward to phone number +18889843519."
                                      },
                                      "voicemail_greeting": {
                                        "type": "object",
                                        "properties": {
                                          "id": {
                                            "type": "string",
                                            "description": "The voicemail greeting audio prompt ID. \n\n Options: empty char - default",
                                            "example": "b_fFF75hRgCtzG7Dw7wQgQ"
                                          },
                                          "name": {
                                            "type": "string",
                                            "description": "The voicemail greeting audio prompt name.",
                                            "example": "Voicemail greeting"
                                          }
                                        },
                                        "description": "The voicemail greeting prompt. It returns only when the `action` in the `busy_routing` section is set to `1` (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting."
                                      }
                                    },
                                    "description": "The information about the call forwarding target: \n\nThis field is only available in the following scenarios: \n* Secnario 1: when `action` in the `busy_routing` section is set to: `2`(Forward to the User), `3`(Forward to the Zoom Room), `4`(Forward to the Common Area), `5`(Forward to the Cisco/Polycom Room), `6`(Forward to the Auto Receptionist), `7`(Forward to a Call Queue), `8`(Forward to a Shared Line Group) or `9`(forward to an External Contact) for the user busy on another call, this field is used to display the extension to which the call will be forwarded. This scenario applies to `User`. \n* Secnario 2: When `action` in the `busy_routing` section is set to `10` (Forward to Phone number/External number) for the user busy on another call, this field is used to display the specific Phone number/External number to which the call will be forwarded. This scenario applies to `User`."
                                  },
                                  "operator": {
                                    "type": "object",
                                    "properties": {
                                      "display_name": {
                                        "type": "string",
                                        "description": "The extension's name.",
                                        "example": "user A"
                                      },
                                      "extension_id": {
                                        "type": "string",
                                        "description": "The extension ID.",
                                        "example": "jN9mb38lQTaMgxUq3Nd6ow"
                                      },
                                      "extension_number": {
                                        "type": "integer",
                                        "description": "The extension number.",
                                        "format": "int64",
                                        "example": 101014
                                      },
                                      "extension_type": {
                                        "type": "string",
                                        "description": "The type of extension: \n* `user` \n* `commonArea` \n* `sharedLineGroup` \n* `callQueue`",
                                        "example": "user",
                                        "enum": [
                                          "user",
                                          "commonArea",
                                          "sharedLineGroup",
                                          "callQueue"
                                        ]
                                      },
                                      "id": {
                                        "type": "string",
                                        "description": "The ID of the extension for `user`, `commonArea`, `sharedLineGroup`, `device`, or `callQueue`.",
                                        "example": "DYHrdpjrS3uaOf7dPkkg8w"
                                      }
                                    },
                                    "description": "The the operator to whom the call is being forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `busy_routing` section is set to `1` (Forward to a voicemail) and the `connect_to_operator` is `true`. \n\nApplicable to the extension as shown below:\n* `User`"
                                  },
                                  "connect_to_operator": {
                                    "type": "boolean",
                                    "description": "Whether to allow callers to reach an operator. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `busy_routing` section is set to `1` (Forward to a voicemail). \n\nApplicable to the extension as shown below:\n* `User`",
                                    "example": true
                                  },
                                  "allow_callers_check_voicemail": {
                                    "type": "boolean",
                                    "description": "Whether to allow the callers to check voicemails over a phone. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `busy_routing` section is set to `1` (Forward to a voicemail). \n\nApplicable to the extension as shown below:\n* `User`",
                                    "example": true
                                  },
                                  "voicemail_greeting": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The voicemail greeting audio prompt ID. \n\n Options: empty char - default",
                                        "example": "b_fFF75hRgCtzG7Dw7wQgQ"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The voicemail greeting audio prompt name.",
                                        "example": "Greeting voicemail"
                                      }
                                    },
                                    "description": "The voicemail greeting audio prompt\n\nReturns only for the `user` and `call_handling` subsetting options. It displays when the `action` in the `busy_routing` section is set to `1` - Forward to a voicemail."
                                  },
                                  "voicemail_leaving_instruction": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The voicemail leaving instruction prompt ID. \n\n Options: empty char - default",
                                        "example": "LxC4hMD8TJeFpwRcB_QWkA"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The voicemail leaving instruction prompt name.",
                                        "example": "Voicemail greeting"
                                      }
                                    },
                                    "description": "The voicemail leaving instruction prompt.\n\nThis field is only available in the following scenarios: \n* Secnario 1: The the `action` in the `busy_routing` section is set to `1` (Forward to a voicemail), and either `connect_to_operator` or `allow_callers_check_voicemail` is set to `true`. \n\nApplicable to the extension as shown below:\n* `User`"
                                  },
                                  "message_greeting": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The message greeting prompt ID. \n\n Options: empty char - default",
                                        "example": "di936zivT46YBCt3dr15GQ"
                                      },
                                      "name": {
                                        "type": "string",
                                        "description": "The message greeting prompt name.",
                                        "example": "Message greeting"
                                      }
                                    },
                                    "description": "The message greeting prompt.\n\nThis field is only available in the following scenarios: \n* Secnario 1: The the `action` in the `busy_routing` section is set to `12` (Play a message, then disconnect). \n\nApplicable to the extension as shown below:\n* `User` \n* `Auto Receptionist` \n* `Call Queue` \n* `Shared Line Group`"
                                  },
                                  "require_press_1_before_connecting": {
                                    "type": "boolean",
                                    "description": "When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot; before the call connects. This field helps to ensure that missed calls do not reach to your personal voicemail. Returned for the `Forward to an external number` and `Forward to External Contacts` options.",
                                    "example": true
                                  },
                                  "overflow_play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "`Note: This field is invalid and part of incorrect documentation. It is only included in the `routing` section.` \n\nWhether to play the callee's voicemail greeting when the caller reaches the end of the forwarding sequence. It displays when `call_not_answer_action` is set to `2` - Forward to the user, `4` - Forward to the common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue, `8` - Forward to a shared line group, `9` - Forward to an external contact, `10` - Forward to an external number.",
                                    "example": true,
                                    "deprecated": true
                                  },
                                  "play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "Whether to play callee's voicemail greeting when the caller reaches the end of the forwarding sequence. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `busy_routing` section is set to `1` (Forward to a voicemail) and the `connect_to_operator` is `true`. \n\nApplicable to the extension as shown below:\n* `User`",
                                    "example": true
                                  },
                                  "busy_play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "Whether to play callee's voicemail greeting when the caller reaches the end of the forwarding sequence. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `action` in the `busy_routing` section is set to: `2`(Forward to the User), `3`(Forward to the Zoom Room), `4`(Forward to the Common Area), `5`(Forward to the Cisco/Polycom Room), `6`(Forward to the Auto Receptionist), `7`(Forward to a Call Queue) or `8`(Forward to a Shared Line Group).  \n\nApplicable to the extension as shown below:\n* `User`",
                                    "example": true
                                  }
                                },
                                "description": "The extension's forwarding or overflow information when the user is busy on another call during Closed Hours. \n\nApplicable to the extension as shown below:\n* `User`."
                              }
                            },
                            "description": "The closed hours settings."
                          },
                          "sub_setting_type": {
                            "type": "string",
                            "description": "The type of sub-setting: \n* `call_forwarding` \n* `call_handling`",
                            "example": "call_forwarding",
                            "enum": ["call_forwarding", "call_handling"]
                          }
                        }
                      }
                    },
                    "holiday_hours": {
                      "type": "array",
                      "description": "The information about the holiday hours settings.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "details": {
                            "type": "array",
                            "description": "The information about the holiday call handling.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "settings": {
                                  "type": "object",
                                  "properties": {
                                    "allow_callers_check_voicemail": {
                                      "type": "boolean",
                                      "description": "Whether to allow the callers to check voicemails over a phone. It's required only when the `call_not_answer_action` setting is set to `1` (Forward to a voicemail).",
                                      "example": true
                                    },
                                    "call_forwarding_settings": {
                                      "type": "array",
                                      "description": "The call forwarding settings. It returns only for the `call_forwarding` sub-setting option.",
                                      "items": {
                                        "type": "object",
                                        "properties": {
                                          "description": {
                                            "type": "string",
                                            "description": "The external phone number's description.",
                                            "example": "testDescription"
                                          },
                                          "enable": {
                                            "type": "boolean",
                                            "description": "Whether to receive a call.",
                                            "example": false
                                          },
                                          "id": {
                                            "type": "string",
                                            "description": "The call forwarding's ID.",
                                            "example": "dash32943QWfjiofejd"
                                          },
                                          "phone_number": {
                                            "type": "string",
                                            "description": "The external phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164) format.",
                                            "example": "+12058945583"
                                          },
                                          "external_contact": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string",
                                                "description": "The external contact's username or extension display name.",
                                                "example": "Johnson"
                                              },
                                              "email": {
                                                "type": "string",
                                                "description": "The external contact's email address.",
                                                "example": "example@example.com"
                                              },
                                              "external_contact_id": {
                                                "type": "string",
                                                "description": "The external contact's ID.",
                                                "example": "OJGi5xOFQPmrJbKg68-iWg"
                                              },
                                              "phone_numbers": {
                                                "type": "array",
                                                "description": "The external contact's phone numbers.",
                                                "items": {
                                                  "type": "string",
                                                  "example": "+12058945656"
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    },
                                    "call_not_answer_action": {
                                      "type": "integer",
                                      "description": "The action to take when a call is not answered: \n* `1` &mdash; Forward to a voicemail. \n* `2` &mdash; Forward to the user. \n* `4` &mdash; Forward to the common area. \n* `6` &mdash; Forward to the auto receptionist. \n* `7` &mdash; Forward to a call queue. \n* `8` &mdash; Forward to a shared line group. \n* `9` &mdash; Forward to an external contact. \n* `10` - Forward to a phone number. \n* `11` &mdash; Disconnect. \n* `12` &mdash; Play a message, then disconnect. \n* `13` - Forward to message. \n* `14` - Forward to interactive voice response (IVR). \n\nReturned only for the `call_handling` sub-setting.",
                                      "example": 2,
                                      "enum": [
                                        1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14
                                      ]
                                    },
                                    "connect_to_operator": {
                                      "type": "boolean",
                                      "description": "Whether to allow callers to reach an operator. It returns only when the `call_not_answer_action` setting is set to `1` (Forward to a voicemail).",
                                      "example": false
                                    },
                                    "from": {
                                      "type": "string",
                                      "description": "The holiday start date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. It returns only for the `holiday` sub-setting.",
                                      "format": "date-time",
                                      "example": "2022-05-01T00:00:00Z"
                                    },
                                    "max_wait_time": {
                                      "type": "integer",
                                      "description": "The maximum wait time, in seconds, for `simultaneous` ring mode or the ring duration for each device for `sequential` ring mode: \n* `10` \n* `15` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n\nReturned only for the `call_handling` sub-setting.",
                                      "example": 60,
                                      "enum": [
                                        10, 15, 20, 25, 30, 35, 40, 45, 50, 55,
                                        60
                                      ]
                                    },
                                    "name": {
                                      "type": "string",
                                      "description": "The holiday name. It returns only for the `holiday` sub-setting.",
                                      "example": "Labor Day"
                                    },
                                    "require_press_1_before_connecting": {
                                      "type": "boolean",
                                      "description": "When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot; before the call connects. It returns only for the `call_forwarding` sub-setting.",
                                      "example": true
                                    },
                                    "ring_mode": {
                                      "type": "string",
                                      "description": "The call handling's ring mode setting: \n* `simultaneous` \n* `sequential` \n\nReturned only for the `call_handling` sub-setting.",
                                      "example": "sequential",
                                      "enum": ["simultaneous", "sequential"]
                                    },
                                    "routing": {
                                      "type": "object",
                                      "properties": {
                                        "action": {
                                          "type": "integer",
                                          "description": "The extension's forwarding or overflow information. For `call_not_answered`: \n* `1` &mdash; Forward to a voicemail/videomail. \n* `2` - Forward to the user. \n* `4` - Forward to the common area. \n* `6` - Forward to the auto receptionist. \n* `7` - Forward to a call queue. \n* `8` - Forward to a shared line group. \n* `9` - Forward to an external contact. \n* `10` - Forward to an external number. \n* `11` &mdash; Disconnect. \n* `12` &mdash; Play a message, then disconnect.\n\nFor `busy_on_another_call_action`: \n* `21` - Call waiting. \n* `22` - Play a busy signal. \n* `1` &mdash; Forward to a voicemail/videomail. \n* `2` - Forward to the user. \n* `4` - Forward to the common area. \n* `6` - Forward to the auto receptionist. \n* `7` - Forward to a call queue. \n* `8` - Forward to a shared line group. \n* `9` - Forward to an external contact. \n* `10` - Forward to an external number. \n* `12` &mdash; Play a message, then disconnect.",
                                          "example": 1
                                        },
                                        "forward_to": {
                                          "type": "object",
                                          "properties": {
                                            "display_name": {
                                              "type": "string",
                                              "description": "The extension's name.",
                                              "example": "api_ta_test"
                                            },
                                            "extension_id": {
                                              "type": "string",
                                              "description": "The extension ID.",
                                              "example": "jN9mb38lQTaMgxUq3Nd6ow"
                                            },
                                            "extension_number": {
                                              "type": "integer",
                                              "description": "The extension number.",
                                              "format": "int64",
                                              "example": 101014
                                            },
                                            "extension_type": {
                                              "type": "string",
                                              "description": "The type of extension: \n* `user` \n* `autoReceptionist`  \n* `callQueue`",
                                              "example": "user",
                                              "enum": [
                                                "user",
                                                "autoReceptionist",
                                                "callQueue",
                                                "commonArea"
                                              ]
                                            },
                                            "id": {
                                              "type": "string",
                                              "description": "The ID of the extension for `user`, `autoReceptionist`, `device`, or `callQueue`.",
                                              "example": "DYHrdpjrS3uaOf7dPkkg8w"
                                            },
                                            "phone_number": {
                                              "type": "string",
                                              "description": "The extension's phone number or forward to an external number, in [E.164 format](https://en.wikipedia.org/wiki/E.164) format.",
                                              "example": "+18889843519"
                                            },
                                            "description": {
                                              "type": "string",
                                              "description": "This field forwards to an external number description.",
                                              "example": "forward to phone number +18889843519."
                                            },
                                            "voicemail_greeting": {
                                              "type": "object",
                                              "description": "The voicemail greeting prompt. It returns only when `call_not_answer_action` is set to `1` (Forward to a voicemail) for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting."
                                            }
                                          },
                                          "description": "The extension's forwarding information. It returns the response when `call_not_answer_action` or `busy_on_another_call_action` is set to `2` (Forward to the user), `4` (Forward to the common area), `6` (Forward to the auto receptionist), `7` (Forward to a call queue), `8` (Forward to a shared line group), `9` (Forward to an external contact), or `10` (Forward to an external number)."
                                        },
                                        "operator": {
                                          "type": "object",
                                          "properties": {
                                            "display_name": {
                                              "type": "string",
                                              "description": "The extension's name.",
                                              "example": "user A"
                                            },
                                            "extension_id": {
                                              "type": "string",
                                              "description": "The extension ID.",
                                              "example": "jN9mb38lQTaMgxUq3Nd6ow"
                                            },
                                            "extension_number": {
                                              "type": "integer",
                                              "description": "The extension number.",
                                              "format": "int64",
                                              "example": 101014
                                            },
                                            "extension_type": {
                                              "type": "string",
                                              "description": "The type of extension: \n* `user` \n* `commonArea` \n* `sharedLineGroup` \n* `callQueue`",
                                              "example": "user",
                                              "enum": [
                                                "user",
                                                "commonArea",
                                                "sharedLineGroup",
                                                "callQueue"
                                              ]
                                            },
                                            "id": {
                                              "type": "string",
                                              "description": "The ID of the extension for `user`, `commonArea`, `sharedLineGroup`, `device`, or `callQueue`.",
                                              "example": "DYHrdpjrS3uaOf7dPkkg8w"
                                            }
                                          },
                                          "description": "This field allows callers to reach an operator. Its a response returned when the `call_not_answer_action` or `busy_on_another_call_action` setting is set to `1` (Forward to a voicemail) and `connect_to_operator` setting is set to `true`."
                                        },
                                        "connect_to_operator": {
                                          "type": "boolean",
                                          "description": "Whether to allow callers to reach an operator. It returns only for the `user` and `call_handling` subsetting. It displays when the `call_not_answer_action` setting or `busy_on_another_call_action` setting is set to `1` (Forward to a voicemail).",
                                          "example": true
                                        },
                                        "allow_callers_check_voicemail": {
                                          "type": "boolean",
                                          "description": "Whether to allow the callers to check voicemails over a phone. It returns only for the `user` and `call_handling` subsetting. It displays when the `call_not_answer_action` setting or `busy_on_another_call_action` setting is set to `1` (Forward to a voicemail).",
                                          "example": true
                                        },
                                        "voicemail_greeting": {
                                          "type": "object",
                                          "properties": {
                                            "id": {
                                              "type": "string",
                                              "description": "The voicemail greeting audio prompt ID. \n\n Options: empty char - default",
                                              "example": "0"
                                            },
                                            "name": {
                                              "type": "string",
                                              "description": "The voicemail greeting audio prompt name.",
                                              "example": "test"
                                            }
                                          },
                                          "description": "The voicemail greeting audio prompt\n\nReturned only for the `user` and `call_handling` subsetting. It displays when `busy_on_another_call_action` action or `call_not_answer_action` set to `1` - Forward to a voicemail."
                                        },
                                        "require_press_1_before_connecting": {
                                          "type": "boolean",
                                          "description": "When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot; before the call connects. This field helps to ensure that missed calls do not reach to your personal voicemail. Returned for the `Forward to an external number` and `Forward to External Contacts` options.",
                                          "example": true
                                        },
                                        "overflow_play_callee_voicemail_greeting": {
                                          "type": "boolean",
                                          "description": "Whether to play callee's voicemail greeting when caller reaches end of forwarding sequence. It displays when `call_not_answer_action` is set to `2` - Forward to the user, `4` - Forward to the common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue, `8` - Forward to a shared line group, `9` - Forward to an external contact, `10` - Forward to an external number.",
                                          "example": true
                                        },
                                        "play_callee_voicemail_greeting": {
                                          "type": "boolean",
                                          "description": "Whether to play callee's voicemail greeting when caller reaches end of forwarding sequence. It displays when `busy_routing` action or `call_not_answer_action` is set to `1` - Forward to a voicemail.",
                                          "example": true
                                        },
                                        "busy_play_callee_voicemail_greeting": {
                                          "type": "boolean",
                                          "description": "Whether to play callee's voicemail greeting when caller reaches end of forwarding sequence. It displays when `busy_routing` action is set to `2` - Forward to the user, `4` - Forward to the common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue, `8` - Forward to a shared line group, `9` - Forward to an external contact, `10` - Forward to an external number.",
                                          "example": true
                                        }
                                      },
                                      "description": "The extension's forwarding or overflow information. It returns the response when `call_not_answer_action` or `busy_on_another_call_action` is set to `1` (Forward to a voicemail), `2` (Forward to the user), `4` (Forward to the common area), `6` (Forward to the auto receptionist), `7` (Forward to a call queue), `8` (Forward to a shared line group), `9` (Forward to an external contact), or `10` (Forward to an external number)."
                                    },
                                    "to": {
                                      "type": "string",
                                      "description": "The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. It returns only for the `holiday` sub-setting.",
                                      "format": "date-time",
                                      "example": "2022-05-05T00:00:00Z"
                                    }
                                  },
                                  "description": "The sub-setting information."
                                },
                                "sub_setting_type": {
                                  "type": "string",
                                  "description": "The type of sub-setting: \n* `call_forwarding` \n* `call_handling` \n* `holiday`",
                                  "example": "call_forwarding",
                                  "enum": [
                                    "call_forwarding",
                                    "call_handling",
                                    "holiday"
                                  ]
                                }
                              }
                            }
                          },
                          "holiday_id": {
                            "type": "string",
                            "description": "The holiday's ID.",
                            "example": "ewhu3i9-f3f3-fiohed"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Extension does not exist: {0} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_call_handling_settings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_call_handling_settings:admin"]
        }
      }
    },
    "/phone/extension/{extensionId}/call_handling/settings/{settingType}": {
      "post": {
        "tags": ["Call Handling"],
        "summary": "Add a call handling setting",
        "description": "Adds Zoom Phone call handling subsettings for your phone system. Call handling settings allow you to control how your system routes calls during business, closed, or holiday hours. For more information, see our [API guide](https://developers.zoom.us/docs/api/phone/) or Zoom support article [Customizing call handling settings](https://support.zoom.us/hc/en-us/articles/360059966372-Customizing-call-handling-settings).\n\n**Applicable to user, call queue, auto receptionist, or shared line group call handling at this time.** \n\n**Prerequisites:** \n* A Pro or a higher account with Zoom Phone enabled\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:call_handling_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "addCallHandling",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "The extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "nNGsNx2zRDyiIXWVI23FCQ" }
          },
          {
            "name": "settingType",
            "in": "path",
            "description": "The call handling setting type: \n* `business_hours` \n* `closed_hours` \n* `holiday_hours`",
            "required": true,
            "schema": {
              "type": "string",
              "example": "business_hours",
              "enum": ["business_hours", "closed_hours", "holiday_hours"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "title": "Call forwarding settings",
                    "type": "object",
                    "properties": {
                      "settings": {
                        "type": "object",
                        "properties": {
                          "holiday_id": {
                            "type": "string",
                            "description": "The holiday's ID. This field is only required for the `call_forwarding` sub-setting.",
                            "example": "qPvrfrrcrf843cdfvbDRDg"
                          },
                          "description": {
                            "type": "string",
                            "description": "The external phone number's description. This field is only required for the `call_forwarding` sub-setting.",
                            "example": "testDescription"
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The external phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164). This field is only required for the `call_forwarding` sub-setting.",
                            "example": "+12058945795"
                          }
                        }
                      },
                      "sub_setting_type": {
                        "type": "string",
                        "description": "The type of sub-setting: \n* `call_forwarding`",
                        "example": "call_forwarding",
                        "enum": ["call_forwarding"]
                      }
                    }
                  },
                  {
                    "title": "Holiday settings",
                    "type": "object",
                    "properties": {
                      "settings": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The name of the holiday. This field is only required for the `holiday` sub-setting.",
                            "example": "test"
                          },
                          "from": {
                            "type": "string",
                            "description": "The holiday's start date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. This field is only required for the `holiday` sub-setting.",
                            "format": "date-time",
                            "example": "2022-03-05T00:00:00Z"
                          },
                          "to": {
                            "type": "string",
                            "description": "The holiday's end date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. It's only required for the `holiday` sub-setting.",
                            "format": "date-time",
                            "example": "2022-03-06T00:00:00Z"
                          }
                        }
                      },
                      "sub_setting_type": {
                        "type": "string",
                        "description": "The type of sub-setting: \n* `holiday`",
                        "example": "holiday",
                        "enum": ["holiday"]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Codes** `201`  \n Created.",
            "content": {
              "application/json": {
                "schema": {
                  "description": "sub_setting_type",
                  "oneOf": [
                    {
                      "title": "call_forwarding",
                      "type": "object",
                      "properties": {
                        "call_forwarding_id": {
                          "type": "string",
                          "description": "The call forwarding's ID. The response only returns this value when you create a `call_forwarding` sub-setting.",
                          "example": "qPvrfrrcrf843cdfvbDRDg"
                        }
                      }
                    },
                    {
                      "title": "holiday",
                      "type": "object",
                      "properties": {
                        "holiday_id": {
                          "type": "string",
                          "description": "The holiday's ID. The response only returns this value when you create a `holiday` sub-setting.",
                          "example": "fwDSdod32xmXw43rsda"
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n This operation is not supported.<br>Request failed because the **Call Forwarding to External Numbers** feature is not enabled. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Extension does not exist: {extensionId}<br>Holiday does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:call_handling_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:call_handling_setting:admin"]
        }
      },
      "delete": {
        "tags": ["Call Handling"],
        "summary": "Delete a call handling setting",
        "description": "Deletes a Zoom Phone's call handling settings. Call handling settings let you control how your system routes calls during business, closed, or holiday hours. For more information, read our [API guide](https://marketplace.zoom.us/docs/guides/zoom-phone/call-handling/) or Zoom support article [Customizing call handling settings](https://support.zoom.us/hc/en-us/articles/360059966372-Customizing-call-handling-settings).\n\n**Applicable to user, call queue, auto receptionist, or shared line group call handling at this time.** \n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone enabled\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:call_handling_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteCallHandling",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "The extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "nNGsNx2zRDyiIXWVI23FCQ" }
          },
          {
            "name": "settingType",
            "in": "path",
            "description": "The type of call handling setting: \n* `business_hours` \n* `closed_hours` \n* `holiday_hours`",
            "required": true,
            "schema": {
              "type": "string",
              "example": "business_hours",
              "enum": ["business_hours", "closed_hours", "holiday_hours"]
            }
          },
          {
            "name": "call_forwarding_id",
            "in": "query",
            "description": "The call forwarding's ID. Use this parameter if you pass the `call_forwarding_id` value for the `settingType` parameter.",
            "required": false,
            "schema": { "type": "string", "example": "qPvrfrrcrf843cdfvbDRDg" }
          },
          {
            "name": "holiday_id",
            "in": "query",
            "description": "The holiday's ID. Use this parameter if you pass the `holiday_id` value for the `settingType` parameter.",
            "required": false,
            "schema": { "type": "string", "example": "ewhu3i9-f3f3-fiohed" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Codes** `204`  \n Call handling setting successfully deleted."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `404` <br>\n Call forwarding does not exist: {callForwardingId}.<br>Holiday does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:call_handling_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:call_handling_setting:admin"]
        }
      },
      "patch": {
        "tags": ["Call Handling"],
        "summary": "Update a call handling setting",
        "description": "Updates a Zoom Phone's call handling setting. \n\nCall handling settings allow you to control how your system routes calls during business, closed, or holiday hours. For more information, read our [Call Handling API guide](https://developers.zoom.us/docs/zoom-phone/call-handling/) or Zoom support article [Customizing call handling settings](https://support.zoom.us/hc/en-us/articles/360059966372-Customizing-call-handling-settings).\n\n**Applicable to user, call queue, auto receptionist, or shared line group call handling at this time.** \n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone enabled\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:call_handling_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateCallHandling",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "The extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "nNGsNx2zRDyiIXWVI23FCQ" }
          },
          {
            "name": "settingType",
            "in": "path",
            "description": "The call handling setting type: \n* `business_hours` \n* `closed_hours` \n* `holiday_hours`",
            "required": true,
            "schema": {
              "type": "string",
              "example": "closed_hours",
              "enum": ["business_hours", "closed_hours", "holiday_hours"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "title": "Call forwarding settings",
                    "type": "object",
                    "properties": {
                      "settings": {
                        "type": "object",
                        "properties": {
                          "call_forwarding_settings": {
                            "type": "array",
                            "description": "The call forwarding settings. It's only required for the `call_forwarding` sub-setting.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "description": {
                                  "type": "string",
                                  "description": "The external phone number's description.",
                                  "example": "testDescription"
                                },
                                "enable": {
                                  "type": "boolean",
                                  "description": "Whether to receive a call.",
                                  "example": true
                                },
                                "id": {
                                  "type": "string",
                                  "description": "The call forwarding's ID.",
                                  "example": "qPvrfrrcrf843cdfvbDRDg"
                                },
                                "phone_number": {
                                  "type": "string",
                                  "description": "The external phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164) format.",
                                  "example": "+12058945527"
                                },
                                "external_contact": {
                                  "type": "object",
                                  "properties": {
                                    "external_contact_id": {
                                      "type": "string",
                                      "description": "The external contact's ID. It updates the external contact's `call_forwarding` sub-setting to where the call will be forwarded.",
                                      "example": "OJGi5xOFQPmrJbKg68-iWg"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "require_press_1_before_connecting": {
                            "type": "boolean",
                            "description": "When a call is forwarded to a personal phone number, whether the user must press &quot;1&quot; before the call connects. Enable this option to ensure missed calls do not reach to your personal voicemail. It's required for the `call_forwarding` sub-setting.\n\nPress 1 is always enabled and is required for `callQueue` type extension calls.",
                            "example": true
                          }
                        }
                      },
                      "sub_setting_type": {
                        "type": "string",
                        "description": "The type of sub-setting: \n* `call_forwarding`",
                        "example": "call_forwarding",
                        "enum": ["call_forwarding"]
                      }
                    }
                  },
                  {
                    "title": "Holiday settings",
                    "type": "object",
                    "properties": {
                      "settings": {
                        "type": "object",
                        "properties": {
                          "from": {
                            "type": "string",
                            "description": "The holiday's start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. It's required for the `holiday` sub-setting.",
                            "format": "date-time",
                            "example": "2022-05-01T00:00:00Z"
                          },
                          "holiday_id": {
                            "type": "string",
                            "description": "The holiday's ID. It's required for the `holiday` sub-setting.",
                            "example": "qPvrfrrcrf843cdfvbDRDg"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the holiday. It's required for the `holiday` sub-setting.",
                            "example": "Default"
                          },
                          "to": {
                            "type": "string",
                            "description": "The holiday's end date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format. It's required for the `holiday` sub-setting.",
                            "format": "date-time",
                            "example": "2022-05-01T00:00:00Z"
                          }
                        }
                      },
                      "sub_setting_type": {
                        "type": "string",
                        "description": "The type of sub-setting: \n* `holiday`",
                        "example": "holiday",
                        "enum": ["holiday"]
                      }
                    }
                  },
                  {
                    "title": "Custom hours settings",
                    "type": "object",
                    "properties": {
                      "settings": {
                        "type": "object",
                        "properties": {
                          "allow_members_to_reset": {
                            "type": "boolean",
                            "description": "This field allows queue members to set their own business hours. This field allows queue members' business hours to override the default hours of the call queue.\n\nOnly required for `Call Queue custom_hours` sub-setting.",
                            "example": true
                          },
                          "custom_hours_settings": {
                            "type": "array",
                            "description": "The custom hours settings. It's only required for the `custom_hours` sub-setting.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "from": {
                                  "type": "string",
                                  "description": "The custom hours start time `HH:mm` format.",
                                  "example": "09:00"
                                },
                                "to": {
                                  "type": "string",
                                  "description": "The custom hours end time in `HH:mm` format.",
                                  "example": "18:00"
                                },
                                "type": {
                                  "type": "integer",
                                  "description": "The type of custom hours: \n* `0` &mdash; Disabled. \n* `1` &mdash; 24 hours. \n* `2` &mdash; Customized hours.",
                                  "example": 1,
                                  "enum": [0, 1, 2]
                                },
                                "weekday": {
                                  "type": "integer",
                                  "description": "The day of the week: \n* `1` &mdash; Sunday \n* `2` &mdash; Monday \n* `3` &mdash; Tuesday \n* `4` &mdash; Wednesday \n* `5` &mdash; Thursday \n* `6` &mdash; Friday \n* `7` &mdash; Saturday",
                                  "example": 7,
                                  "enum": [1, 2, 3, 4, 5, 6, 7]
                                }
                              }
                            }
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of custom hours: \n* `1` &mdash; 24 hours, 7 days a week. \n* `2` &mdash; Custom hours. \n\nThis is only required for the `custom_hours` sub-setting.",
                            "example": 2,
                            "enum": [1, 2]
                          }
                        }
                      },
                      "sub_setting_type": {
                        "type": "string",
                        "description": "The type of sub-setting: \n* `custom_hours`",
                        "example": "custom_hours",
                        "enum": ["custom_hours"]
                      }
                    }
                  },
                  {
                    "title": "Call handling settings",
                    "type": "object",
                    "properties": {
                      "settings": {
                        "type": "object",
                        "properties": {
                          "allow_callers_check_voicemail": {
                            "type": "boolean",
                            "description": "Whether to allow the callers to check voicemails. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `call_not_answer_action` is set to `1` (Forward to a voicemail). \n* Secnario 2: The `busy_on_another_call_action` is set to `1` (Forward to a voicemail).(Only applicable to the `User`) \n\nApplicable to the extension as shown below:\n* `User` \n* `Shared Line Group`",
                            "example": true
                          },
                          "allow_members_to_reset": {
                            "type": "boolean",
                            "description": "This field allows queue members to set their own business hours. This field allows queue members' business Hours to override the default hours of the call queue.\n\nOnly required for `Call Queue custom_hours` sub-setting.",
                            "example": true
                          },
                          "audio_while_connecting_id": {
                            "type": "string",
                            "description": "The audio while connecting the prompt ID. This option can select the audio played for the inbound callers when they are waiting to be routed to the next available call queue member.\n\nOptions:\n* empty char - default\n* `ring_tone` - \"Ring Tone\" option\n* `0` - disable\n\nThis is only required for the `Call Queue` `call_handling` sub-setting.",
                            "example": "qPwtDrrcSua8O0_n0bDRDg"
                          },
                          "call_distribution": {
                            "type": "object",
                            "properties": {
                              "handle_multiple_calls": {
                                "type": "boolean",
                                "description": "The maximum number of calls that can be handled simultaneously is less than half of the total amount of available call queue members. Note that the first incoming call may not be answered first.\n\nRequired except for `simultaneous` ring mode.",
                                "example": true
                              },
                              "ring_duration": {
                                "type": "integer",
                                "description": "The ringing duration for each member:\n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n\nRequired except for `simultaneous` ring mode.",
                                "example": 10,
                                "enum": [
                                  10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60
                                ]
                              },
                              "ring_mode": {
                                "type": "string",
                                "description": "The call distribution ring mode: \n* `simultaneous` \n* `sequential` \n* `rotating` \n* `longest_idle`.",
                                "example": "rotating",
                                "enum": [
                                  "simultaneous",
                                  "sequential",
                                  "rotating",
                                  "longest_idle"
                                ]
                              },
                              "skip_offline_device_phone_number": {
                                "type": "boolean",
                                "description": "1. Devices with Zoom app or client not launched and mobile phone with screen locked will be skipped. \n\n2. Phone numbers added to user's call handling settings will be skipped.\n\nRequired except for `simultaneous` ring mode.",
                                "example": true
                              }
                            },
                            "description": "This option distributes incoming calls.\n\nIf `Sequential` or `Rotating` is selected, calls will ring for a specific time before trying the next available queue member. \n\nThis is only required for the `call_handling` sub-setting."
                          },
                          "call_not_answer_action": {
                            "type": "integer",
                            "description": "The action to take when a call is not answered: \n* `1` &mdash; Forward to a Voicemail. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `2` &mdash; Forward to the User. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `3` &mdash; Forward to the Zoom Room. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `4` &mdash; Forward to the Common Area. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `5` &mdash; Forward to the Cisco/Polycom Room. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `6` &mdash; Forward to the Auto Receptionist. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `7` &mdash; Forward to a Call Queue. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `8` &mdash; Forward to a Shared Line Group. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `9` &mdash; Forward to an External Contact. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `10` - Forward to a Phone Number. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n* `11` &mdash; Disconnect. Applicable to `User`, `Call Queue`, or `Shared Line Group`. \n* `12` &mdash; Play a message, then disconnect. Applicable to `User`, `Call Queue`, `Auto Receptionist`, or `Shared Line Group` \n* `14` - Forward to an Interactive Voice Response (IVR). Applicable to `Auto Receptionist`. \n* `15` &mdash; Forward to a Partner Contact Center. Applicable to `Auto Receptionist`. \n* `18` &mdash; Forward to Microsoft Teams Resource Account. Required the license of Zoom Phone for Microsoft Teams. Applicable to `Call queue`, `Auto Receptionist`, or `Shared Line group`. \n* `19` &mdash; Forward to a Zoom Contact Center. Required Zoom Contact Center license. Applicable to `Call Queue`, `Auto Receptionist`, or `Shared Line Group`. \n\nThis is only required for the `call_handling` sub-setting.",
                            "example": 4,
                            "enum": [
                              1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 18,
                              19
                            ]
                          },
                          "busy_on_another_call_action": {
                            "type": "integer",
                            "description": "The action to take when the user is busy on another call: \n* `1` &mdash; Forward to a voicemail. \n* `2` &mdash; Forward to the user. \n* `4` &mdash; Forward to the common area. \n* `6` &mdash; Forward to the auto receptionist. \n* `7` &mdash; Forward to a call queue. \n* `8` &mdash; Forward to a shared line group. \n* `9` &mdash; Forward to an external contact. \n* `10` - Forward to a phone number. \n* `12` &mdash; Play a message, then disconnect. \n* `21` &mdash; Call waiting. \n* `22` &mdash; Play a busy signal. \n\nOnly required for the `call_handling` sub-setting and only the `User` supports it.",
                            "example": 4,
                            "enum": [1, 2, 4, 6, 7, 8, 9, 10, 12, 21, 22]
                          },
                          "busy_require_press_1_before_connecting": {
                            "type": "boolean",
                            "description": "When one is busy on another call, the receiver needs to press 1 before connecting the call for it to be forwarded to an external contact or a number. This option ensures that forwarded calls won't reach the voicemail box for the external contact or a number.",
                            "example": true
                          },
                          "un_answered_require_press_1_before_connecting": {
                            "type": "boolean",
                            "description": "When a call is unanswered, press 1 before connecting the call to forward to an external contact or a number. This option ensures that forwarded calls won't reach the voicemail box for the external contact or a number. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `call_not_answer_action` is set to `9`(Forward to an External Contact) or `10`(Forward to a Phone Number). \n\nApplicable to the extension as shown below:\n* `User`",
                            "example": true
                          },
                          "overflow_play_callee_voicemail_greeting": {
                            "type": "boolean",
                            "description": "Whether to play callee's voicemail greeting when the caller reaches the end of the forwarding sequence. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `call_not_answer_action` setting is set to: `2`(Forward to the User), `3`(Forward to the Zoom Room), `4`(Forward to the Common Area), `5`(Forward to the Cisco/Polycom Room), `6`(Forward to the Auto Receptionist), `7`(Forward to a Call Queue) or `8`(Forward to a Shared Line Group).  \n\nApplicable to the extension as shown below:\n* `User`",
                            "example": true
                          },
                          "play_callee_voicemail_greeting": {
                            "type": "boolean",
                            "description": "Whether to play callee's voicemail greeting when the caller reaches the end of forwarding sequence. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `call_not_answer_action` is set to `1` (Forward to a voicemail) and the `connect_to_operator` is `true`. \n* Secnario 2: The `busy_on_another_call_action` is set to `1` (Forward to a voicemail) and the `connect_to_operator` is `true`.(Only applicable to the `User`) \n\nApplicable to the extension as shown below:\n* `User`",
                            "example": true
                          },
                          "busy_play_callee_voicemail_greeting": {
                            "type": "boolean",
                            "description": "Whether to play callee's voicemail greeting when the caller reaches the end of the forwarding sequence. \n\nIt displays when `busy_on_another_call_action` action is set to `2` - Forward to the user, `4` - Forward to the common area, `6` - Forward to the auto receptionist, `7` - Forward to a call queue, `8` - Forward to a shared line group, `9` - Forward to an external contact, `10` - Forward to an external number.",
                            "example": true
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The extension's phone number or forward to an external number in [E.164 format](https://en.wikipedia.org/wiki/E.164) format. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `call_not_answer_action` is set to `10` (Forward to a Phone Number). \n\nApplicable to the extension as shown below:\n* `User` \n* `Auto Receptionist` \n* `Call Queue` \n* `Shared Line Group`",
                            "example": "+18889843519"
                          },
                          "description": {
                            "type": "string",
                            "description": "This field describes the phone number to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `call_not_answer_action` is set to `10` (Forward to a Phone Number). \n\nApplicable to the extension as shown below:\n* `User`",
                            "example": "forward to phone number +18889843519."
                          },
                          "busy_phone_number": {
                            "type": "string",
                            "description": "The extension's phone number or forward to an external number in [E.164 format](https://en.wikipedia.org/wiki/E.164) format. \n\nIt sets when `busy_on_another_call_action` action is set to `10` - Forward to an external number.",
                            "example": "+18889843519"
                          },
                          "busy_description": {
                            "type": "string",
                            "description": "This field forwards to an external number description (optional). It sets when `busy_on_another_call_action` action is set to `10` - Forward to an external number.",
                            "example": "forward to phone number +18889843519."
                          },
                          "connect_to_operator": {
                            "type": "boolean",
                            "description": "Whether to allow callers to reach an operator. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `call_not_answer_action` is set to `1` (Forward to a voicemail). \n* Secnario 2: The `busy_on_another_call_action` is set to `1` (Forward to a voicemail). \n\nApplicable to the extension as shown below:\n* `User` \n* `Call Queue` \n* `Shared Line Group`",
                            "example": true
                          },
                          "forward_to_extension_id": {
                            "type": "string",
                            "description": "The forwarding extension ID: \n\nThis field is only available in the following scenarios: \n* Secnario 1: When `call_not_answer_action` is set to `1` (Forward to voicemail) for unanswered calls, this field is used to set the specific extension to which voicemails are forwarded. This scenario applies to `Auto Receptionist` and `Call Queue`. \n* Secnario 2: when `call_not_answer_action` setting is set to: `2`(Forward to the User), `3`(Forward to the Zoom Room), `4`(Forward to the Common Area), `5`(Forward to the Cisco/Polycom Room), `6`(Forward to the Auto Receptionist), `7`(Forward to a Call Queue), `8`(Forward to a Shared Line Group) or `9`(forward to an External Contact) for unanswered calls, this field specifies the extension to which the call will be forwarded. This scenario applies to `User`, `Auto Receptionist`, `Call Queue` and `Shared Line Group`",
                            "example": "qPvrfrrcrf843cdfvbDRDg"
                          },
                          "busy_forward_to_extension_id": {
                            "type": "string",
                            "description": "The forwarding extension ID that's required only when busy_on_another_call_action setting is set to: 2 - Forward to the user. 4 - Forward to the common area. 6 - Forward to the auto receptionist. 7 - Forward to a call queue. 8 - Forward to a shared line group. or 9 - forward to an external contact.",
                            "example": "qPvrfrrcrf843cdfvbDRDg"
                          },
                          "greeting_prompt_id": {
                            "type": "string",
                            "description": "The greeting audio prompt ID. \n\nOptions: empty char - default and `0` - disable \n\nThis is only required for the `Call Queue` or `Auto Receptionist` `call_handling` sub-setting.",
                            "example": "qPwe233-f34cdfv45RDg"
                          },
                          "max_call_in_queue": {
                            "type": "integer",
                            "description": "The maximum number of calls in queue.\nSpecify the maximum number of callers to place in the queue. When this number is exceeded, callers will be routed based on the overflow option. Up to 60.\n\nIt's required for the `Call Queue` `call_handling` sub-setting.",
                            "example": 7
                          },
                          "max_wait_time": {
                            "type": "integer",
                            "description": "The maximum wait time, in seconds, for `simultaneous` ring mode or the ring duration for each device for `sequential` ring mode: \n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n\nSpecify how long a caller will wait in the queue. Once the wait time is exceeded, the caller will be rerouted based on the overflow option for `Call Queue`:\n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n* `120` \n* `180` \n* `240` \n* `300` \n* `600` \n* `900` \n* `1200` \n* `1500` \n* `1800`  \n\nThis is only required for the `call_handling` sub-setting.",
                            "example": 20,
                            "enum": [
                              10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 120,
                              180, 240, 300, 600, 900, 1200, 1500, 1800
                            ]
                          },
                          "music_on_hold_id": {
                            "type": "string",
                            "description": "The music on hold prompt ID. This field is an option to choose music for inbound callers when they're placed on hold by a call queue member.\n\n Options: empty char - default and `0` - disable \n\nOnly required for the `Call Queue` `call_handling` sub-setting.",
                            "example": "fdsij3he89qj2-23uie"
                          },
                          "operator_extension_id": {
                            "type": "string",
                            "description": "The extension ID of the operator to whom the call is being forwarded.  \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `call_not_answer_action` is set to `1` (Forward to a voicemail) and the `connect_to_operator` is `true`. \n* Secnario 2: The `busy_on_another_call_action` is set to `1` (Forward to a voicemail) and the `connect_to_operator` is `true`.(Only applicable to the `User`) \n\nApplicable to the extension as shown below:\n* `User` \n* `Call Queue` \n* `Shared Line Group`",
                            "example": "qPvrfrrcrf843cdfvbDRDg"
                          },
                          "receive_call": {
                            "type": "boolean",
                            "description": "This field receives calls while on a call. When enabled, call queue members can receive new incoming calls notification even on the call. \n\nIt's required for the `Call Queue call handling` sub-setting.",
                            "example": true
                          },
                          "ring_mode": {
                            "type": "string",
                            "description": "The call handling ring mode: \n* `simultaneous` \n* `sequential`. For user business hours, `ring_mode` needs to be set with `max_wait_time`.",
                            "example": "sequential",
                            "enum": ["simultaneous", "sequential"]
                          },
                          "voicemail_greeting_id": {
                            "type": "string",
                            "description": "The voicemail greeting prompt ID. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `call_not_answer_action` is set to `1` (Forward to a voicemail). \n* Secnario 2: The `busy_on_another_call_action` is set to `1` (Forward to a voicemail).(Only applicable to the `User`) \n\nApplicable to the extension as shown below:\n* `User` \n* `Auto Receptionist` \n* `Call Queue` \n* `Shared Line Group`",
                            "example": "qPwtDrrcSua8O0_n0bDRDg"
                          },
                          "voicemail_leaving_instruction_id": {
                            "type": "string",
                            "description": "The voicemail leaving instruction prompt ID. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `call_not_answer_action` is set to `1` (Forward to a voicemail), and either `connect_to_operator` or `allow_callers_check_voicemail` is set to `true`. \n* Secnario 2: The `busy_on_another_call_action` is set to `1` (Forward to a voicemail).(Only applicable to the `User`), and either `connect_to_operator` or `allow_callers_check_voicemail` is set to `true`. \n\nApplicable to the extension as shown below:\n* `User` \n* `Call Queue` \n* `Shared Line Group`",
                            "example": "FI1RIIUTQgiof3RKV30y8Q"
                          },
                          "message_greeting_id": {
                            "type": "string",
                            "description": "The message greeting prompt ID. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `call_not_answer_action` is set to `12` (Play a message, then disconnect). \n\nApplicable to the extension as shown below:\n* `User` \n* `Auto Receptionist` \n* `Call Queue` \n* `Shared Line Group`",
                            "example": "ELGNz5QdR9Gt4Q8Q6zbWlQ"
                          },
                          "forward_to_zcc_phone_number": {
                            "type": "string",
                            "description": "The Zoom Contact Center phone number, in [E.164 format](https://en.wikipedia.org/wiki/E.164) format, to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `call_not_answer_action` is set to `19` (Forward to a Zoom Contact Center). \n\nApplicable to the extension as shown below:\n* `Auto Receptionist` \n* `Call Queue` \n* `Shared Line Group`",
                            "example": "12056903036"
                          },
                          "forward_to_partner_contact_center_id": {
                            "type": "string",
                            "description": "The Partner Contact Center Setting ID to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `call_not_answer_action` is set to `15` (Forward to a Partner Contact Center). \n\nApplicable to the extension as shown below:\n* `Auto Receptionist`",
                            "example": "0Qa7FFTfR0CgzpgwUrcxtQ"
                          },
                          "forward_to_teams_id": {
                            "type": "string",
                            "description": "The Microsoft Teams Voice App ID to which the call is forwarded. \n\nThis field is only available in the following scenarios: \n* Secnario 1: The `call_not_answer_action` is set to `18` (Forward to Microsoft Teams Resource Account). \n\nApplicable to the extension as shown below:\n* `Auto Receptionist` \n* `Call Queue` \n* `Shared Line Group`",
                            "example": "8fd2159d-2495-4ec4-8101-7a182f2da802"
                          },
                          "wrap_up_time": {
                            "type": "integer",
                            "description": "The wrap up time in seconds. \nSpecify the duration before the next queue call is routed to a member in call queue:\n* `0` \n* `10` \n* `15` \n* `20` \n* `25` \n* `30` \n* `35` \n* `40` \n* `45` \n* `50` \n* `55` \n* `60` \n* `120` \n* `180` \n* `240` \n* `300`\n\nThis is only required for the `call_handling` sub-setting.",
                            "example": 25,
                            "enum": [
                              10, 15, 20, 25, 30, 35, 40, 45, 50, 55, 60, 120,
                              180, 240, 300
                            ]
                          }
                        }
                      },
                      "sub_setting_type": {
                        "type": "string",
                        "description": "The type of sub-setting: \n* `call_handling`",
                        "example": "call_handling",
                        "enum": ["call_handling"]
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Codes** `204`  \n Call handling settings successfully updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Since 'Allow callers to reach an operator' and 'Allow callers to check voicemail' are disabled, you can't update the voicemail leaving instruction. <br>\n**Error Code:** `400` <br>\n The forwarding of busy on another call and the forwarding of unanswered calls both are not 'Forward to voicemail/videomail', so you can't update the voicemail leaving instruction. <br>\n**Error Code:** `400` <br>\n Invalid customer hours from/to time for weekday: {weekday}. <br>\n**Error Code:** `400` <br>\n Invalid holiday from/to time. <br>\n**Error Code:** `400` <br>\n Failed to overflow to external contact since user overflow policy is restricted. <br>\n**Error Code:** `400` <br>\n Failed to overflow to external number since user overflow policy is restricted. <br>\n**Error Code:** `400` <br>\n Failed to overflow to internal extension without inbound Automatic Call Recording since user overflow policy is restricted. <br>\n**Error Code:** `400` <br>\n Failed to overflow to extension since user overflow policy is disabled. <br>\n**Error Code:** `400` <br>\n Extension's voicemail policy is disabled. <br>\n**Error Code:** `400` <br>\n You cannot assign yourself as the operator. <br>\n**Error Code:** `400` <br>\n The user business hours ring mode and max wait time need to be set together. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Call forwarding does not exist: {callForwardingId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:call_handling_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:call_handling_setting:admin"]
        }
      }
    },
    "/phone/call_history": {
      "get": {
        "tags": ["Call Logs"],
        "summary": "Get account's call history",
        "description": "Returns an account's new edition [call logs](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-Call-Logs).\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license \n* Account owner or a [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) with Zoom Phone management\n\n**Scopes:** `phone:read:admin`,`phone_call_log:read:admin`\n\n**Granular Scopes:** `phone:read:list_call_logs:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "accountCallHistory",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. \n\nThe date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data. The month defined should fall within the last six months. If unspecified, returns data within the 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-10-31"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. \n\nEnd time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword of the name, extension, number, email address, and call ID. It provides the ability to search by keyword and it shows a list of all the related calls. Any calls go through this keyword.",
            "required": false,
            "schema": { "type": "string", "example": "User 1" }
          },
          {
            "name": "directions",
            "in": "query",
            "description": "The direction filter of the call logs.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [],
              "items": {
                "type": "string",
                "example": "inbound",
                "enum": ["inbound", "outbound"]
              }
            }
          },
          {
            "name": "connect_types",
            "in": "query",
            "description": "The connect type filter of the call logs. \n* `internal` \n* `external` ",
            "required": false,
            "schema": {
              "type": "array",
              "example": [],
              "items": {
                "type": "string",
                "example": "internal",
                "enum": ["internal", "external"]
              }
            }
          },
          {
            "name": "number_types",
            "in": "query",
            "description": "The number type filter of the caller or callee. ",
            "required": false,
            "schema": {
              "type": "array",
              "example": [],
              "items": {
                "type": "string",
                "example": "external_pstn",
                "enum": [
                  "zoom_pstn",
                  "zoom_toll_free_number",
                  "external_pstn",
                  "external_contact",
                  "byoc",
                  "byop",
                  "3rd_party_contact_center",
                  "zoom_service_number",
                  "external_service_number",
                  "zoom_contact_center",
                  "meeting_phone_number",
                  "meeting_id",
                  "anonymous_number",
                  "zoom_revenue_accelerator"
                ]
              }
            }
          },
          {
            "name": "call_types",
            "in": "query",
            "description": "The call type filter of the call logs. \n* `general` \n* `emergency`",
            "required": false,
            "schema": {
              "type": "array",
              "example": [],
              "items": {
                "type": "string",
                "example": "general",
                "enum": ["general", "emergency"]
              }
            }
          },
          {
            "name": "extension_types",
            "in": "query",
            "description": "The extension type filter of the call logs.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [],
              "items": {
                "type": "string",
                "example": "user",
                "enum": [
                  "user",
                  "call_queue",
                  "auto_receptionist",
                  "common_area",
                  "zoom_room",
                  "cisco_room",
                  "shared_line_group",
                  "group_call_pickup",
                  "external_contact"
                ]
              }
            }
          },
          {
            "name": "call_results",
            "in": "query",
            "description": "The call result filter of the call logs.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [],
              "items": {
                "type": "string",
                "example": "answered",
                "enum": [
                  "answered",
                  "connected",
                  "voicemail",
                  "hang_up",
                  "no_answer",
                  "invalid_operation",
                  "abandoned",
                  "blocked",
                  "service_unavailable"
                ]
              }
            }
          },
          {
            "name": "group_ids",
            "in": "query",
            "description": "The primary group filter of call logs.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [],
              "items": { "type": "string", "example": "b4Uge6AxQQWlAepTCbFeKQ" }
            }
          },
          {
            "name": "site_ids",
            "in": "query",
            "description": "The site filter of call logs.",
            "required": false,
            "schema": {
              "type": "array",
              "example": [],
              "items": { "type": "string", "example": "8f71O6rWT8KFUGQmJIFAdQ" }
            }
          },
          {
            "name": "department",
            "in": "query",
            "description": "The department of which the call log belongs.",
            "required": false,
            "schema": { "type": "string", "example": "Phone department" }
          },
          {
            "name": "cost_center",
            "in": "query",
            "description": "The cost center of which the call log belongs.",
            "required": false,
            "schema": { "type": "string", "example": "Phone cost center" }
          },
          {
            "name": "time_type",
            "in": "query",
            "description": "This field enables you to search call logs by start or end time. By default, using start_time",
            "required": false,
            "schema": {
              "type": "string",
              "example": "start_time",
              "default": "start_time",
              "enum": ["start_time", "end_time"]
            }
          },
          {
            "name": "recording_status",
            "in": "query",
            "description": "The recording filter indicates whether the whole call has recording or not. recorded means the call has at least one recording, non_recorded means the call does not have any recordings.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "recorded",
              "default": "recorded",
              "enum": ["recorded", "non_recorded"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`\n\nAccount's call logs returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_logs": {
                      "type": "array",
                      "description": "The call log.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The call Log ID.",
                            "example": "48c1dfd4-91ce-4df5-8495-7c9e33d10869"
                          },
                          "call_id": {
                            "type": "string",
                            "description": "The unique identifier of the phone call. One call id might contain multiple Call log ID.",
                            "example": "7018317023722949162"
                          },
                          "direction": {
                            "type": "string",
                            "description": "The direction of the call.",
                            "example": "inbound",
                            "enum": ["inbound", "outbound"]
                          },
                          "international": {
                            "type": "boolean",
                            "description": "A flag to indicate the call is international or not.",
                            "example": false,
                            "enum": [true, false]
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The call start time in GMT date-time format.",
                            "example": "2021-10-08T16:12:04Z"
                          },
                          "answer_time": {
                            "type": "string",
                            "description": "The call answer time in GMT date-time format.",
                            "example": "2021-10-08T16:12:10Z"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The call end time in GMT date-time format.",
                            "example": "2021-10-08T16:12:15Z"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The duration of the call in seconds.",
                            "example": 20
                          },
                          "connect_type": {
                            "type": "string",
                            "description": "The connect type of the call logs. \n* `internal` \n* `external` ",
                            "example": "internal",
                            "enum": ["internal", "external"]
                          },
                          "sbc_id": {
                            "type": "string",
                            "description": "The SBC ID that the call goes through.",
                            "example": "20"
                          },
                          "sbc_name": {
                            "type": "string",
                            "description": "The SBC name that the call goes through.",
                            "example": "20"
                          },
                          "sip_group_id": {
                            "type": "string",
                            "description": "The SIP group ID that the call goes through.",
                            "example": "20"
                          },
                          "sip_group_name": {
                            "type": "string",
                            "description": "The SIP group name that the call goes through.",
                            "example": "20"
                          },
                          "call_type": {
                            "type": "string",
                            "description": "The type of call. \n* `general` \n* `emergency` ",
                            "example": "general",
                            "enum": ["general", "emergency"]
                          },
                          "call_result": {
                            "type": "string",
                            "description": "The final call result of the call logs. ",
                            "example": "answered",
                            "enum": [
                              "answered",
                              "connected",
                              "voicemail",
                              "hang_up",
                              "no_answer",
                              "invalid_operation",
                              "abandoned",
                              "blocked",
                              "service_unavailable"
                            ]
                          },
                          "caller_ext_id": {
                            "type": "string",
                            "description": "The caller's extension ID.",
                            "example": "ATu63--9TjudZetpf4UuQg"
                          },
                          "caller_did_number": {
                            "type": "string",
                            "description": "The caller's DID number in e164 format.",
                            "example": "+12059300920"
                          },
                          "caller_ext_number": {
                            "type": "string",
                            "description": "The caller's extension number.",
                            "example": "101229"
                          },
                          "caller_name": {
                            "type": "string",
                            "description": "The caller's name.",
                            "example": "Caller name"
                          },
                          "caller_email": {
                            "type": "string",
                            "description": "The caller's email.",
                            "example": "test@abc.com"
                          },
                          "caller_ext_type": {
                            "type": "string",
                            "description": "The caller's extension type: \n* `user` \n* `call_queue` \n* `auto_receptionist` \n* `common_area` \n* `zoom_room` \n* `cisco_room` \n* `shared_line_group` \n* `group_call_pickup` \n* `external_contact`.",
                            "example": "user",
                            "enum": [
                              "user",
                              "call_queue",
                              "auto_receptionist",
                              "common_area",
                              "zoom_room",
                              "cisco_room",
                              "shared_line_group",
                              "group_call_pickup",
                              "external_contact"
                            ]
                          },
                          "caller_number_type": {
                            "type": "string",
                            "description": "The caller's number type.",
                            "example": "external_pstn",
                            "enum": [
                              "zoom_pstn",
                              "zoom_toll_free_number",
                              "external_pstn",
                              "external_contact",
                              "byoc",
                              "byop",
                              "3rd_party_contact_center",
                              "zoom_service_number",
                              "external_service_number",
                              "zoom_contact_center",
                              "meeting_phone_number",
                              "meeting_id",
                              "anonymous_number",
                              "zoom_revenue_accelerator"
                            ]
                          },
                          "caller_device_type": {
                            "type": "string",
                            "description": "The caller's device type.",
                            "example": "MAC_Client(6.0.2.33403)"
                          },
                          "caller_country_iso_code": {
                            "type": "string",
                            "description": "The caller's country ISO code.",
                            "example": "US"
                          },
                          "caller_country_code": {
                            "type": "string",
                            "description": "The caller's country code.",
                            "example": "US"
                          },
                          "callee_ext_id": {
                            "type": "string",
                            "description": "The callee's extension ID.",
                            "example": "ATu63--9TjudZetpf4UuQg"
                          },
                          "callee_did_number": {
                            "type": "string",
                            "description": "The callee's DID number in e164 format.",
                            "example": "+12059300920"
                          },
                          "callee_ext_number": {
                            "type": "string",
                            "description": "The callee's extension number.",
                            "example": "101229"
                          },
                          "callee_name": {
                            "type": "string",
                            "description": "The callee's name.",
                            "example": "Callee name"
                          },
                          "callee_email": {
                            "type": "string",
                            "description": "The callee's email.",
                            "example": "test@abc.com"
                          },
                          "callee_ext_type": {
                            "type": "string",
                            "description": "The callee's extension type: \n* `user` \n* `call_queue` \n* `auto_receptionist` \n* `common_area` \n* `zoom_room` \n* `cisco_room` \n* `shared_line_group` \n* `group_call_pickup` \n* `external_contact`.",
                            "example": "user",
                            "enum": [
                              "user",
                              "call_queue",
                              "auto_receptionist",
                              "common_area",
                              "zoom_room",
                              "cisco_room",
                              "shared_line_group",
                              "group_call_pickup",
                              "external_contact"
                            ]
                          },
                          "callee_number_type": {
                            "type": "string",
                            "description": "The callee's number type.",
                            "example": "external_pstn",
                            "enum": [
                              "zoom_pstn",
                              "zoom_toll_free_number",
                              "external_pstn",
                              "external_contact",
                              "byoc",
                              "byop",
                              "3rd_party_contact_center",
                              "zoom_service_number",
                              "external_service_number",
                              "zoom_contact_center",
                              "meeting_phone_number",
                              "meeting_id",
                              "anonymous_number",
                              "zoom_revenue_accelerator"
                            ]
                          },
                          "callee_device_type": {
                            "type": "string",
                            "description": "The callee's device type.",
                            "example": "MAC_Client(6.0.2.33403)"
                          },
                          "callee_country_iso_code": {
                            "type": "string",
                            "description": "The callee's country ISO code.",
                            "example": "US"
                          },
                          "callee_country_code": {
                            "type": "string",
                            "description": "The callee's country code.",
                            "example": "US"
                          },
                          "client_code": {
                            "type": "string",
                            "description": "The client code for the call.",
                            "example": "1234"
                          },
                          "department": {
                            "type": "string",
                            "description": "The name of the department of which the user belongs.",
                            "example": "web-api1"
                          },
                          "cost_center": {
                            "type": "string",
                            "description": "The name of the cost center of which the user belongs.",
                            "example": "cost-center1"
                          },
                          "site_id": {
                            "type": "string",
                            "description": "The name of the site ID of which the user belongs.",
                            "example": "BpCTBMRARBefUrprildVqw"
                          },
                          "group_id": {
                            "type": "string",
                            "description": "The primary group of which the user belongs.",
                            "example": "California"
                          },
                          "site_name": {
                            "type": "string",
                            "description": "The name of the site name of which the user belongs.",
                            "example": "site name"
                          },
                          "spam": {
                            "type": "string",
                            "description": "The spam type of the call.",
                            "example": "Maybe Spam"
                          },
                          "recording_status": {
                            "type": "string",
                            "description": "The recording status indicates whether the call has recording or not. Recorded means the call has at least one recording. Non_recorded means the call does not have any recordings.",
                            "example": "recorded",
                            "enum": ["recorded", "non_recorded"]
                          }
                        }
                      }
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date of the log.",
                      "example": "2021-10-01"
                    },
                    "to": {
                      "type": "string",
                      "description": "The end time and date of the log.",
                      "example": "2021-10-12"
                    },
                    "page_count": {
                      "type": "integer",
                      "description": "The total number of pages.",
                      "example": 2
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call for each page.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 54
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "AmhfoKtF2Ey4TaPg2iZsAcmetRLs2ZY0Sk2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation Failed <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone_call_log:read:admin",
              "phone:read:list_call_logs:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin", "phone_call_log:read:admin"],
          "x-granular-scopes": ["phone:read:list_call_logs:admin"]
        }
      }
    },
    "/phone/call_history/{callLogId}": {
      "get": {
        "tags": ["Call Logs"],
        "summary": "Get call path",
        "description": "Returns information about a [call log](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs).\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`,`phone_call_log:read:admin`\n\n**Granular Scopes:** `phone:read:call_log:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getCallPath",
        "parameters": [
          {
            "name": "callLogId",
            "in": "path",
            "description": "The ID of the call log.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "a55d94f7-27ea-4dbb-ab25-028f2c8d55bd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The details of the call path.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The ID of the call log.",
                      "example": "48c1dfd4-91ce-4df5-8495-7c9e33d10869"
                    },
                    "call_id": {
                      "type": "string",
                      "description": "The ID of the phone call.",
                      "example": "7018317023722949162"
                    },
                    "connect_type": {
                      "type": "string",
                      "description": "The connect type of call: \n* `internal` \n* `external`",
                      "example": "internal",
                      "enum": ["internal", "external"]
                    },
                    "call_type": {
                      "type": "string",
                      "description": "The type of call. \n* `general` \n* `emergency` ",
                      "example": "general",
                      "enum": ["general", "emergency"]
                    },
                    "direction": {
                      "type": "string",
                      "description": "The direction of the call. \n* `inbound` \n* `outbound` ",
                      "example": "inbound",
                      "enum": ["inbound", "outbound"]
                    },
                    "international": {
                      "type": "boolean",
                      "description": "A flag to indicate the call is international or not.",
                      "example": false,
                      "enum": [true, false]
                    },
                    "caller_ext_id": {
                      "type": "string",
                      "description": "The caller's extension ID.",
                      "example": "ATu63--9TjudZetpf4UuQg"
                    },
                    "caller_name": {
                      "type": "string",
                      "description": "The name of the caller.",
                      "example": "Caller name"
                    },
                    "caller_did_number": {
                      "type": "string",
                      "description": "The caller's DID number in e164 format.",
                      "example": "+12059300920"
                    },
                    "caller_ext_number": {
                      "type": "string",
                      "description": "The extension number of the caller.",
                      "example": "101229"
                    },
                    "caller_email": {
                      "type": "string",
                      "description": "The caller's email.",
                      "example": "test@abc.com"
                    },
                    "caller_ext_type": {
                      "type": "string",
                      "description": "The caller's extension type: \n* `user` \n* `callQueue` \n* `autoReceptionist` \n* `commonArea` \n* `zoomRoom` \n* `ciscoRoom` \n* `sharedLineGroup` \n* `groupCallPickup` \n* `externalContact`.",
                      "example": "user",
                      "enum": [
                        "user",
                        "call_queue",
                        "auto_receptionist",
                        "common_area",
                        "zoom_room",
                        "cisco_room",
                        "shared_line_group",
                        "group_call_pickup",
                        "external_contact"
                      ]
                    },
                    "callee_ext_id": {
                      "type": "string",
                      "description": "The callee's extension ID.",
                      "example": "ATu63--9TjudZetpf4UuQg"
                    },
                    "callee_name": {
                      "type": "string",
                      "description": "The name of the callee.",
                      "example": "Callee name"
                    },
                    "callee_email": {
                      "type": "string",
                      "description": "The callee's email.",
                      "example": "test@abc.com"
                    },
                    "callee_did_number": {
                      "type": "string",
                      "description": "The callee's DID number in e164 format.",
                      "example": "+12059300920"
                    },
                    "callee_ext_number": {
                      "type": "string",
                      "description": "The extension number of the callee.",
                      "example": "101229"
                    },
                    "callee_ext_type": {
                      "type": "string",
                      "description": "The callee's extension type: \n* `user` \n* `callQueue` \n* `autoReceptionist` \n* `commonArea` \n* `zoomRoom` \n* `ciscoRoom` \n* `sharedLineGroup` \n* `groupCallPickup` \n* `externalContact`.",
                      "example": "user",
                      "enum": [
                        "user",
                        "call_queue",
                        "auto_receptionist",
                        "common_area",
                        "zoom_room",
                        "cisco_room",
                        "shared_line_group",
                        "group_call_pickup",
                        "external_contact"
                      ]
                    },
                    "department": {
                      "type": "string",
                      "description": "The name of the department of which the user belongs.",
                      "example": "web-api1"
                    },
                    "cost_center": {
                      "type": "string",
                      "description": "The name of the cost center of which the user belongs.",
                      "example": "cost-center1"
                    },
                    "site_id": {
                      "type": "string",
                      "description": "The name of the site ID of which the user belongs.",
                      "example": "BpCTBMRARBefUrprildVqw"
                    },
                    "group_id": {
                      "type": "string",
                      "description": "The primary group of which the user belongs.",
                      "example": "California"
                    },
                    "site_name": {
                      "type": "string",
                      "description": "The name of the site name of which the user belongs.",
                      "example": "site name"
                    },
                    "start_time": {
                      "type": "string",
                      "description": "The call start time in GMT `date-time` format.",
                      "example": "2021-10-08T16:12:04Z"
                    },
                    "answer_time": {
                      "type": "string",
                      "description": "The call answer time in GMT `date-time` format.",
                      "example": "2021-10-08T16:12:04Z"
                    },
                    "end_time": {
                      "type": "string",
                      "description": "The call end time in GMT `date-time` format.",
                      "example": "2021-10-08T16:12:15Z"
                    },
                    "call_path": {
                      "type": "array",
                      "description": "The call segment path.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the call log.",
                            "example": "48c1dfd4-91ce-4df5-8495-7c9e33d10869"
                          },
                          "call_id": {
                            "type": "string",
                            "description": "The ID of the phone call.",
                            "example": "7018317023722949162"
                          },
                          "connect_type": {
                            "type": "string",
                            "description": "The connect type of call: \n* `internal` \n* `external`",
                            "example": "internal",
                            "enum": ["internal", "external"]
                          },
                          "call_type": {
                            "type": "string",
                            "description": "The type of call. \n* `general` \n* `emergency` ",
                            "example": "general",
                            "enum": ["general", "emergency"]
                          },
                          "direction": {
                            "type": "string",
                            "description": "The direction of the call. \n* `inbound` \n* `outbound` ",
                            "example": "inbound",
                            "enum": ["inbound", "outbound"]
                          },
                          "caller_ext_id": {
                            "type": "string",
                            "description": "The caller's extension ID.",
                            "example": "ATu63--9TjudZetpf4UuQg"
                          },
                          "caller_name": {
                            "type": "string",
                            "description": "The name of the caller.",
                            "example": "Caller name"
                          },
                          "caller_email": {
                            "type": "string",
                            "description": "The caller's email.",
                            "example": "test@abc.com"
                          },
                          "caller_did_number": {
                            "type": "string",
                            "description": "The caller's DID number in e164 format.",
                            "example": "+12059300920"
                          },
                          "caller_ext_number": {
                            "type": "string",
                            "description": "The extension number of the caller.",
                            "example": "101229"
                          },
                          "caller_ext_type": {
                            "type": "string",
                            "description": "The caller's extension type: \n* `user` \n* `call_queue` \n* `auto_receptionist` \n* `common_area` \n* `zoom_room` \n* `cisco_room` \n* `shared_line_group` \n* `group_call_pickup` \n* `external_contact`.",
                            "example": "user",
                            "enum": [
                              "user",
                              "call_queue",
                              "auto_receptionist",
                              "common_area",
                              "zoom_room",
                              "cisco_room",
                              "shared_line_group",
                              "group_call_pickup",
                              "external_contact"
                            ]
                          },
                          "caller_number_type": {
                            "type": "string",
                            "description": "The caller's number type.",
                            "example": "external_pstn",
                            "enum": [
                              "zoom_pstn",
                              "zoom_toll_free_number",
                              "external_pstn",
                              "external_contact",
                              "byoc",
                              "byop",
                              "3rd_party_contact_center",
                              "zoom_service_number",
                              "external_service_number",
                              "zoom_contact_center",
                              "meeting_phone_number",
                              "meeting_id",
                              "anonymous_number",
                              "zra_phone_number"
                            ]
                          },
                          "caller_device_type": {
                            "type": "string",
                            "description": "The caller's device type.",
                            "example": "MAC_Client(6.0.2.33403)"
                          },
                          "caller_country_iso_code": {
                            "type": "string",
                            "description": "The caller's country ISO code.",
                            "example": "US"
                          },
                          "caller_country_code": {
                            "type": "string",
                            "description": "The caller's country code.",
                            "example": "US"
                          },
                          "callee_ext_id": {
                            "type": "string",
                            "description": "The callee's extension ID.",
                            "example": "ATu63--9TjudZetpf4UuQg"
                          },
                          "callee_name": {
                            "type": "string",
                            "description": "The name of the callee.",
                            "example": "Callee name"
                          },
                          "callee_did_number": {
                            "type": "string",
                            "description": "The callee's DID number in e164 format.",
                            "example": "+12059300920"
                          },
                          "callee_ext_number": {
                            "type": "string",
                            "description": "The extension number of the callee.",
                            "example": "101229"
                          },
                          "callee_email": {
                            "type": "string",
                            "description": "The callee's email.",
                            "example": "test@abc.com"
                          },
                          "callee_ext_type": {
                            "type": "string",
                            "description": "The callee's extension type: \n* `user` \n* `call_queue` \n* `auto_receptionist` \n* `common_area` \n* `zoom_room` \n* `cisco_room` \n* `shared_line_group` \n* `group_call_pickup` \n* `external_contact`.",
                            "example": "user",
                            "enum": [
                              "user",
                              "call_queue",
                              "auto_receptionist",
                              "common_area",
                              "zoom_room",
                              "cisco_room",
                              "shared_line_group",
                              "group_call_pickup",
                              "external_contact"
                            ]
                          },
                          "callee_number_type": {
                            "type": "string",
                            "description": "The callee's number type.",
                            "example": "external_pstn",
                            "enum": [
                              "zoom_pstn",
                              "zoom_toll_free_number",
                              "external_pstn",
                              "external_contact",
                              "byoc",
                              "byop",
                              "3rd_party_contact_center",
                              "zoom_service_number",
                              "external_service_number",
                              "zoom_contact_center",
                              "meeting_phone_number",
                              "meeting_id",
                              "anonymous_number",
                              "zra_phone_number"
                            ]
                          },
                          "callee_device_type": {
                            "type": "string",
                            "description": "The callee's device type.",
                            "example": "MAC_Client(6.0.2.33403)"
                          },
                          "callee_country_iso_code": {
                            "type": "string",
                            "description": "The callee's country ISO code.",
                            "example": "US"
                          },
                          "callee_country_code": {
                            "type": "string",
                            "description": "The callee's country code.",
                            "example": "US"
                          },
                          "client_code": {
                            "type": "string",
                            "description": "The client code for the call.",
                            "example": "1234"
                          },
                          "department": {
                            "type": "string",
                            "description": "The name of the department of which the user belongs.",
                            "example": "web-api1"
                          },
                          "cost_center": {
                            "type": "string",
                            "description": "The name of the cost center of which the user belongs.",
                            "example": "cost-center1"
                          },
                          "site_id": {
                            "type": "string",
                            "description": "The name of the site ID of which the user belongs.",
                            "example": "BpCTBMRARBefUrprildVqw"
                          },
                          "group_id": {
                            "type": "string",
                            "description": "The primary group of which the user belongs.",
                            "example": "California"
                          },
                          "site_name": {
                            "type": "string",
                            "description": "The name of the site name of which the user belongs.",
                            "example": "site name"
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The call start time in GMT `date-time` format.",
                            "example": "2021-10-08T16:12:04Z"
                          },
                          "answer_time": {
                            "type": "string",
                            "description": "The call answer time in GMT `date-time` format.",
                            "example": "2021-10-08T16:12:04Z"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The call end time in GMT `date-time` format.",
                            "example": "2021-10-08T16:12:15Z"
                          },
                          "event": {
                            "type": "string",
                            "description": "An event within a call log.",
                            "example": "outgoing",
                            "enum": [
                              "incoming",
                              "outgoing",
                              "forward",
                              "ring_to_member",
                              "overflow",
                              "direct_transfer",
                              "barge",
                              "monitor",
                              "whisper",
                              "listen",
                              "takeover",
                              "conference_barge",
                              "park",
                              "timeout",
                              "park_pick_up",
                              "merge",
                              "shared"
                            ]
                          },
                          "result": {
                            "type": "string",
                            "description": "The detail result of an event for a call log.",
                            "example": "answered",
                            "enum": [
                              "answered",
                              "accepted",
                              "picked_up",
                              "connected",
                              "succeeded",
                              "voicemail",
                              "canceled",
                              "call_failed",
                              "rejected",
                              "busy",
                              "ring_timeout",
                              "overflowed",
                              "no_answer",
                              "invalid_key",
                              "abandoned",
                              "system_blocked",
                              "service_unavailable"
                            ]
                          },
                          "result_reason": {
                            "type": "string",
                            "description": "The reason of result of an event for a call log.",
                            "example": "answered_by_other",
                            "enum": [
                              "answered_by_other",
                              "pickup_by_other",
                              "call_out_by_other"
                            ]
                          },
                          "device_private_ip": {
                            "type": "string",
                            "description": "The private IP of which the user belongs.",
                            "example": ""
                          },
                          "device_public_ip": {
                            "type": "string",
                            "description": "The public IP of which the user belongs",
                            "example": ""
                          },
                          "operator_ext_number": {
                            "type": "string",
                            "description": "The operator extension number.",
                            "example": "3456"
                          },
                          "operator_ext_id": {
                            "type": "string",
                            "description": "The operator extension ID.",
                            "example": "NN9rA4fZSsScB2YiCqw7Ig"
                          },
                          "operator_ext_type": {
                            "type": "string",
                            "description": "The operator extension type.",
                            "example": "user",
                            "enum": [
                              "user",
                              "call_queue",
                              "auto_receptionist",
                              "common_area",
                              "zoom_room",
                              "cisco_room",
                              "shared_line_group",
                              "group_call_pickup",
                              "external_contact"
                            ]
                          },
                          "operator_name": {
                            "type": "string",
                            "description": "The operator's name.",
                            "example": "operator name"
                          },
                          "press_key": {
                            "type": "string",
                            "description": "The press key value for event press or input.",
                            "example": "3"
                          },
                          "segment": {
                            "type": "integer",
                            "description": "A sequential number to indicate the orders of events that starts from 0.",
                            "example": 0
                          },
                          "node": {
                            "type": "integer",
                            "description": "Within one segment, a sequential number to indicate the orders of the events that starts from 0.",
                            "example": 0
                          },
                          "is_node": { "type": "integer", "example": 0 },
                          "recording_id": {
                            "type": "string",
                            "description": "The unique identifier of the call recording.",
                            "example": "c71b360f6e774e3aa101453117b7e1a7"
                          },
                          "recording_type": {
                            "type": "string",
                            "description": "The type of call recording: \n* `ad-hoc`, \n* `automatic` ",
                            "example": "automatic"
                          },
                          "hold_time": {
                            "type": "integer",
                            "description": "The call hold time in seconds.",
                            "example": 20
                          },
                          "waiting_time": {
                            "type": "integer",
                            "description": "The call wait time in seconds.",
                            "example": 20
                          },
                          "voicemail_id": {
                            "type": "string",
                            "description": "The ID of the call voicemail.",
                            "example": "6cd2da01bcaa47f58e3250a575c5f2bf"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone_call_log:read:admin",
              "phone:read:call_log:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin", "phone_call_log:read:admin"],
          "x-granular-scopes": ["phone:read:call_log:admin"]
        }
      }
    },
    "/phone/call_history/{callLogId}/client_code": {
      "patch": {
        "tags": ["Call Logs"],
        "summary": "Add a client code to a call history",
        "description": "Adds a client code to a [call log](https://support.zoom.us/hc/en-us/articles/360040999352-Assigning-client-codes-to-phone-calls). You can track call logs with a client code. **Prerequisites:*** Business or Education account* Zoom Phone license \n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:call_log:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "addClientCodeToCallHistory",
        "parameters": [
          {
            "name": "callLogId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["client_code"],
                "type": "object",
                "properties": {
                  "client_code": {
                    "type": "string",
                    "description": "The client code (3 to 16 digit number) to mark the call log.",
                    "example": "The client code (3 to 16 digit number) to mark the call log."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**Successfully added the client code to the call log."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `301` <br>\n Invalid client code: {client_code} <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n Call history not found: {callLogId} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:call_log:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:call_log:admin"]
        }
      }
    },
    "/phone/call_logs": {
      "get": {
        "tags": ["Call Logs"],
        "summary": "Get account's call logs",
        "description": "Returns an account's [call logs](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-Call-Logs).\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license \n* Account owner or a [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) with Zoom Phone management\n\n\n\n**Scopes:** `phone:read:admin`,`phone_call_log:read:admin`\n\n**Granular Scopes:** `phone:read:list_call_logs:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "accountCallLogs",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data. The month defined should fall within the last six months. If unspecified, returns data within the 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-10-31"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The type of the call logs. The value can be either &quot;all&quot; or &quot;missed&quot;.",
            "required": false,
            "schema": { "type": "string", "example": "all" }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "path",
            "in": "query",
            "description": "This field filters the API response by [path](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs#h_646b46c6-0623-4ab1-8b8b-ea5b8bcef679) of the call. The value of this field can be one of the following: `voiceMail`, `message`, `forward`, `extension`, `callQueue`, `ivrMenu`, `companyDirectory`, `autoReceptionist`, `contactCenter`, `disconnected`, `commonAreaPhone`,\n`pstn`, `transfer`, `sharedLines`, `sharedLineGroup`, `tollFreeBilling`, `meetingService`, `parkPickup`,\n`parkTimeout`, `monitor`, `takeover`, `sipGroup`",
            "required": false,
            "schema": { "type": "string", "example": "extension" }
          },
          {
            "name": "time_type",
            "in": "query",
            "description": "This field enables you to search call logs by start or end time. You can choose `startTime` or `endTime`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "startTime",
              "default": "startTime",
              "enum": ["startTime", "endTime"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by call logs of a specific phone site.",
            "required": false,
            "schema": { "type": "string", "example": "8f71O6rWT8KFUGQmJIFAdQ" }
          },
          {
            "name": "charged_call_logs",
            "in": "query",
            "description": "Whether to filter API responses to include call logs that only have a non-zero charge.",
            "required": false,
            "schema": { "type": "boolean", "example": false }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`\n\nAccount's call logs returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_logs": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "Call Log",
                      "items": {
                        "type": "object",
                        "properties": {
                          "answer_start_time": {
                            "type": "string",
                            "description": "The GMT date and time at which the inbound call was answered. The value of this field is in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.\n\t\t",
                            "format": "date-time",
                            "example": "2021-10-12T16:00:08Z"
                          },
                          "call_end_time": {
                            "type": "string",
                            "description": "The call end time in GMT `date-time` format.",
                            "example": "2021-10-08T16:12:04Z"
                          },
                          "call_id": {
                            "type": "string",
                            "description": "The unique identifier of the phone call.",
                            "example": "7018210229361148737"
                          },
                          "call_type": {
                            "type": "string",
                            "description": "The type of call:\n* `voip` (Voice over IP)\n* `pstn` (Public Switched Telephone Network)\n* `tollfree`\n* `international`\n* `contactCenter`",
                            "example": "voip",
                            "enum": [
                              "voip",
                              "pstn",
                              "tollfree",
                              "international",
                              "contactCenter"
                            ]
                          },
                          "callee_country_code": {
                            "type": "string",
                            "description": "The country calling code.",
                            "example": "1"
                          },
                          "callee_country_iso_code": {
                            "type": "string",
                            "description": "The ISO alpha2 country code.",
                            "example": "US"
                          },
                          "callee_did_number": {
                            "type": "string",
                            "description": "The callee's DID (direct inward dial) number in e164 format.",
                            "example": "+12055432724"
                          },
                          "callee_name": {
                            "type": "string",
                            "description": "The contact name of the callee.",
                            "example": "Callee name"
                          },
                          "callee_number": {
                            "type": "string",
                            "description": "The number of the callee.",
                            "example": "1001"
                          },
                          "callee_number_type": {
                            "type": "integer",
                            "description": "The callee's number type:\n* `1` &mdash; Extension number.\n* `2` &mdash; Phone number.\n* `3` &mdash; Customized emergency number.",
                            "example": 1,
                            "enum": [1, 2, 3]
                          },
                          "callee_number_source": {
                            "type": "string",
                            "description": "Ths field indicates where the phone number comes from:\n* `internal` &mdash; ZP native.\n* `external` &mdash; BYOC or Provider Exchange.\n* `byop` &mdash; Premise peering.\nNot available when `callee_number_type = 1`.",
                            "example": "internal",
                            "enum": ["internal", "external", "byop"]
                          },
                          "caller_country_code": {
                            "type": "string",
                            "description": "The country calling code.",
                            "example": "1"
                          },
                          "caller_country_iso_code": {
                            "type": "string",
                            "description": "The ISO alpha2 country code.",
                            "example": "US"
                          },
                          "caller_did_number": {
                            "type": "string",
                            "description": "The caller's DID (direct inward dial) number in e164 format.",
                            "example": "+12055432724"
                          },
                          "caller_name": {
                            "type": "string",
                            "description": "The contact name of the caller.",
                            "example": "Caller name"
                          },
                          "caller_number": {
                            "type": "string",
                            "description": "The number of the caller.",
                            "example": "+12059300920"
                          },
                          "caller_number_type": {
                            "type": "integer",
                            "description": "The caller's number type: \n* `1` &mdash; Extension number. \n* `2` &mdash; Phone number.",
                            "example": 1,
                            "enum": [1, 2]
                          },
                          "caller_number_source": {
                            "type": "string",
                            "description": "This field indicates where the phone number comes from:\n* `internal` &mdash; ZP native.\n* `external` &mdash; BYOC or Provider Exchange.\n* `byop` &mdash; Premise peering.\nNot available when `caller_number_type = 1`.",
                            "example": "internal",
                            "enum": ["internal", "external", "byop"]
                          },
                          "caller_billing_reference_id": {
                            "type": "string",
                            "description": "The billing reference ID (for peering phone numbers).",
                            "example": "ZoomTelecom123456"
                          },
                          "charge": {
                            "type": "string",
                            "description": "The billing charge for the call.",
                            "example": "$0.0255"
                          },
                          "client_code": {
                            "type": "string",
                            "description": "Client code.",
                            "example": "123"
                          },
                          "date_time": {
                            "type": "string",
                            "description": "Start time of the call",
                            "example": "2021-10-08T16:23:34Z"
                          },
                          "device_private_ip": {
                            "type": "string",
                            "description": "Display the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                            "example": "12"
                          },
                          "device_public_ip": {
                            "type": "string",
                            "description": "Display the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                            "example": "23"
                          },
                          "direction": {
                            "type": "string",
                            "description": "Direction of the call. &quot;inbound&quot; | &quot;outbound&quot;",
                            "example": "inbound"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Duration of the call in seconds.",
                            "example": 25
                          },
                          "id": {
                            "type": "string",
                            "description": "Call Log ID",
                            "example": "48c1dfd4-91ce-4df5-8495-7c9e33d10869"
                          },
                          "owner": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "integer",
                                "description": "The owner's extension number.",
                                "format": "int64",
                                "example": 1000001019
                              },
                              "id": {
                                "type": "string",
                                "description": "The owner ID.",
                                "example": "N3hAhug-QVyFPYZJrHpRaQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The owner name.",
                                "example": "123@test.com"
                              },
                              "type": {
                                "type": "string",
                                "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`commonArea`\n*`sharedLineGroup`",
                                "example": "user",
                                "enum": [
                                  "user",
                                  "callQueue",
                                  "autoReceptionist",
                                  "commonArea",
                                  "sharedLineGroup"
                                ]
                              }
                            }
                          },
                          "path": {
                            "type": "string",
                            "description": "Path of the call. ",
                            "example": "pstn"
                          },
                          "rate": {
                            "type": "string",
                            "description": "Billing rate for the call.",
                            "example": "0.0255"
                          },
                          "recording_id": {
                            "type": "string",
                            "description": "Unique identifier of the call recording.",
                            "example": "c71b360f6e774e3aa101453117b7e1a7"
                          },
                          "recording_type": {
                            "type": "string",
                            "description": "Type of call recording:\n\n`1` OnDemand\n\n`2` Automatic",
                            "example": "OnDemand",
                            "enum": ["OnDemand", "Automatic"]
                          },
                          "result": {
                            "type": "string",
                            "description": "Result of the call: `Missed` | `Voicemail` | `Call connected` | `Rejected` | `Blocked`| `Busy`| `Wrong Number`| `No Answer`| `International Disabled`| `Internal Error`| `Call failed` | `Restricted Number`| `Call Cancel` | `Message`| `Answered by Other Member` | `Call Cancelled` | `Park` | `Parked` | `Blocked by non-GAL` |  `Blocked by info-Barriers` | `Recording Failure`| `Recorded`| `Auto Recorded`.",
                            "example": "Call connected"
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the site where the phone number is assigned.",
                                "example": "Main Site"
                              }
                            }
                          },
                          "user_id": {
                            "type": "string",
                            "description": "User ID of the call log owner.",
                            "example": "IqoQmDRqS-aIoXqV_FZ88w"
                          },
                          "hold_time": {
                            "type": "integer",
                            "description": "Hold time during a call in seconds.",
                            "example": 5
                          },
                          "waiting_time": {
                            "type": "integer",
                            "description": "Duration that a  **call queue member** takes to answer a call from the time it started ringing. The value of the duration is in seconds.\n\t\t\t",
                            "example": 5
                          },
                          "department": {
                            "type": "string",
                            "description": "Name of the user's department.",
                            "example": "web-api1"
                          },
                          "cost_center": {
                            "type": "string",
                            "description": "The cost center name to which a user belongs.",
                            "example": "cost-center1"
                          }
                        }
                      }
                    },
                    "from": {
                      "type": "string",
                      "description": "Start time and date of the log.",
                      "example": "2021-10-01"
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "AmhfoKtF2Ey4TaPg2iZsAcmetRLs2ZY0Sk2"
                    },
                    "page_count": {
                      "type": "integer",
                      "description": "Total number of pages",
                      "example": 2
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call for each page.",
                      "example": 30
                    },
                    "to": {
                      "type": "string",
                      "description": "End time and date of the log",
                      "example": "2021-10-12"
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 54
                    }
                  },
                  "description": "Account Call Logs"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `3001` <br>\n Error retrieving call logs. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "deprecated": true,
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone_call_log:read:admin",
              "phone:read:list_call_logs:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin", "phone_call_log:read:admin"],
          "x-granular-scopes": ["phone:read:list_call_logs:admin"]
        }
      }
    },
    "/phone/call_logs/{callLogId}": {
      "get": {
        "tags": ["Call Logs"],
        "summary": "Get call log details",
        "description": "Returns information about a [call log](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs).\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`,`phone_call_log:read:admin`\n\n**Granular Scopes:** `phone:read:call_log:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getCallLogDetails",
        "parameters": [
          {
            "name": "callLogId",
            "in": "path",
            "description": "The unique identifier of the call log. Both `callLogId` and `callId` can be used as path parameters. The value for this field can be retrieved from [account's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/accountCallLogs) or the [user's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/phoneUserCallLogs).",
            "required": true,
            "schema": {
              "type": "string",
              "example": "a55d94f7-27ea-4dbb-ab25-028f2c8d55bd"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The details of the call log.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_id": {
                      "type": "string",
                      "description": "The unique identifier of the phone call.",
                      "example": "7018317023722949162"
                    },
                    "call_type": {
                      "type": "string",
                      "description": "The type of call:\n* `voip` (Voice over IP)\n* `pstn` (Public Switched Telephone Network)\n* `tollfree`\n* `international`\n* `contactCenter`",
                      "example": "voip",
                      "enum": [
                        "voip",
                        "pstn",
                        "tollfree",
                        "international",
                        "contactCenter"
                      ]
                    },
                    "callee_country_code": {
                      "type": "string",
                      "description": "The country calling code.",
                      "example": "1"
                    },
                    "callee_country_iso_code": {
                      "type": "string",
                      "description": "The ISO alpha2 country code.",
                      "example": "US"
                    },
                    "callee_did_number": {
                      "type": "string",
                      "description": "The callee's DID (direct inward dial) number in e164 format.",
                      "example": "+12055432724"
                    },
                    "callee_name": {
                      "type": "string",
                      "description": "The contact name of callee.",
                      "example": "Callee name"
                    },
                    "callee_number": {
                      "type": "string",
                      "description": "The number of callee.",
                      "example": "1018"
                    },
                    "callee_number_type": {
                      "type": "integer",
                      "description": "The callee's number type:\n* `1` &mdash; Extension number.\n* `2` &mdash; Phone number.\n* `3` &mdash; Customized emergency number.",
                      "example": 1,
                      "enum": [1, 2, 3]
                    },
                    "callee_number_source": {
                      "type": "string",
                      "description": "This field indicates where the phone number comes from:\n* `internal` &mdash; ZP native.\n* `external` &mdash; BYOC or Provider Exchange.\n* `byop` &mdash; Premise peering.\nNot available when `callee_number_type = 1`.",
                      "example": "internal",
                      "enum": ["internal", "external", "byop"]
                    },
                    "callee_status": {
                      "type": "string",
                      "description": "This field indicates the status of extension. \n* `inactive` \n* `deleted`",
                      "example": "deleted",
                      "enum": ["inactive", "deleted"]
                    },
                    "callee_deleted_time": {
                      "type": "string",
                      "description": "The datetime the extension was deleted. It exists only when `extension_status` is `deleted`.",
                      "example": "2022-10-14T22:10:54Z"
                    },
                    "caller_country_code": {
                      "type": "string",
                      "description": "The country calling code.",
                      "example": "1"
                    },
                    "caller_country_iso_code": {
                      "type": "string",
                      "description": "The ISO alpha2 country code.",
                      "example": "US"
                    },
                    "caller_did_number": {
                      "type": "string",
                      "description": "The caller's DID (direct inward dial) number in e164 format.",
                      "example": "+12055432724"
                    },
                    "caller_name": {
                      "type": "string",
                      "description": "The contact name of caller.",
                      "example": "Caller name"
                    },
                    "caller_number": {
                      "type": "string",
                      "description": "The number of the caller.",
                      "example": "+16622001852"
                    },
                    "caller_number_type": {
                      "type": "integer",
                      "description": "The caller's number type: \n* `1` &mdash; Extension number. \n* `2` &mdash; Phone number.",
                      "example": 1,
                      "enum": [1, 2]
                    },
                    "caller_number_source": {
                      "type": "string",
                      "description": "This field Iindicates where the phone number comes from:\n* `internal` &mdash; ZP native.\n* `external` &mdash; BYOC or Provider Exchange.\n* `byop` &mdash; Premise peering.\nNot available when `caller_number_type = 1`.",
                      "example": "internal",
                      "enum": ["internal", "external", "byop"]
                    },
                    "caller_billing_reference_id": {
                      "type": "string",
                      "description": "The billing reference ID (for peering phone numbers).",
                      "example": "ZoomTelecom123456"
                    },
                    "caller_status": {
                      "type": "string",
                      "description": "This field indicates the status of extension. \n* `inactive` \n* `deleted`",
                      "example": "deleted",
                      "enum": ["inactive", "deleted"]
                    },
                    "caller_deleted_time": {
                      "type": "string",
                      "description": "The datetime the extension was deleted. Exists only when extension_status is `deleted`.",
                      "example": "2022-10-14T22:10:54Z"
                    },
                    "date_time": {
                      "type": "string",
                      "description": "The start time of the call.",
                      "example": "2021-10-12T22:54:31Z"
                    },
                    "device_private_ip": {
                      "type": "string",
                      "description": "This field displays the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                      "example": "12"
                    },
                    "device_public_ip": {
                      "type": "string",
                      "description": "This field displays the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                      "example": "23"
                    },
                    "direction": {
                      "type": "string",
                      "description": "The direction of the call: `inbound` | `outbound`",
                      "example": "inbound",
                      "enum": ["inbound", "outbound"]
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The duration of the call in seconds.",
                      "example": 20
                    },
                    "has_recording": {
                      "type": "boolean",
                      "description": "Whether the call has a recording. See [announcement](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#deprecation-of-the-has_voicemail-and-has_recording-responses-in-phone-api) from July, 2021.",
                      "example": false,
                      "deprecated": true
                    },
                    "has_voicemail": {
                      "type": "boolean",
                      "description": "Whether the call has a voicemail. See [announcement](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#deprecation-of-the-has_voicemail-and-has_recording-responses-in-phone-api) from July, 2021.",
                      "example": false,
                      "deprecated": true
                    },
                    "id": {
                      "type": "string",
                      "description": "The call log ID.",
                      "example": "a55d94f7-27ea-4dbb-ab25-028f2c8d55bd"
                    },
                    "log_details": {
                      "maxItems": 10000,
                      "type": "array",
                      "description": "The call segment details.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "date_time": {
                            "type": "string",
                            "description": "The start time of the call.",
                            "example": "2021-10-12T22:54:31Z"
                          },
                          "hold_time": {
                            "type": "integer",
                            "description": "The hold time during a call in seconds.",
                            "example": 5
                          },
                          "device_private_ip": {
                            "type": "string",
                            "description": "This field displays the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                            "example": "12"
                          },
                          "device_public_ip": {
                            "type": "string",
                            "description": "This field displays the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                            "example": "23"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The duration of the call in seconds.",
                            "example": 20
                          },
                          "forward_to": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "string",
                                "description": "The call forward's extension number.",
                                "example": "1002"
                              },
                              "id": {
                                "type": "string",
                                "description": "The call forward's unique ID.",
                                "example": "1234abcd"
                              },
                              "name": {
                                "type": "string",
                                "description": "The call forward's name.",
                                "example": "name"
                              },
                              "type": {
                                "type": "string",
                                "description": "The call forwarding recipient type: \n* `user` \n* `callQueue` \n* `autoReceptionist` \n* `sharedLineGroup`",
                                "example": "user",
                                "enum": [
                                  "user",
                                  "callQueue",
                                  "autoReceptionist",
                                  "sharedLineGroup"
                                ]
                              },
                              "extension_status": {
                                "type": "string",
                                "description": "This field indicates the status of extension. \n* `inactive` \n* `deleted`",
                                "example": "deleted",
                                "enum": ["inactive", "deleted"]
                              },
                              "extension_deleted_time": {
                                "type": "string",
                                "description": "The datetime the extension was deleted. Exists only when extension_status is `deleted`.",
                                "example": "2022-10-14T22:10:54Z"
                              }
                            },
                            "description": "The information about the call's forwarding."
                          },
                          "id": {
                            "type": "string",
                            "description": "The call log ID.",
                            "example": "a55d94f7-27ea-4dbb-ab25-028f2c8d55bd"
                          },
                          "path": {
                            "type": "string",
                            "description": "The path of the call.",
                            "example": "callQueue"
                          },
                          "result": {
                            "type": "string",
                            "description": "The result of the call: `Missed` | `Voicemail`| `Call connected`|`Rejected`| `Blocked`| `Busy`|`Wrong Number`| `No Answer`| `International Disabled`|`Internal Error`| `Call failed`| `Restricted Number`|`Call Cancel`| `Message`| `Answered by Other Member`|`Call Cancelled`| `Park`| `Parked`| `Blocked by non-GAL`| `Blocked by info-Barriers`|`Recording Failure`| `Recorded`| `Auto Recorded`.",
                            "example": "Call connected"
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you can create sites based on different office locations.",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the site where the phone number is assigned.",
                                "example": "Main Site"
                              }
                            }
                          }
                        }
                      }
                    },
                    "path": {
                      "type": "string",
                      "description": "The path of the call.",
                      "example": "callQueue"
                    },
                    "result": {
                      "type": "string",
                      "description": "The result of the call: `Missed` | `Voicemail` | `Call connected` | `Rejected` | `Blocked`| `Busy`| `Wrong Number`| `No Answer`| `International Disabled`| `Internal Error`| `Call failed` | `Restricted Number`| `Call Cancel` | `Message`| `Answered by Other Member` | `Call Cancelled` | `Park` | `Parked` | `Blocked by non-GAL` |  `Blocked by info-Barriers` | `Recording Failure`| `Recorded`| `Auto Recorded`.",
                      "example": "Call connected"
                    },
                    "department": {
                      "type": "string",
                      "description": "The name of the user's department.",
                      "example": "web-api1"
                    },
                    "cost_center": {
                      "type": "string",
                      "description": "The cost center name to which a user belongs.",
                      "example": "cost-center1"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "deprecated": true,
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone_call_log:read:admin",
              "phone:read:call_log:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin", "phone_call_log:read:admin"],
          "x-granular-scopes": ["phone:read:call_log:admin"]
        }
      }
    },
    "/phone/call_logs/{callLogId}/client_code": {
      "put": {
        "tags": ["Call Logs"],
        "summary": "Add a client code to a call log",
        "description": "Adds a client code to a [call log](https://support.zoom.us/hc/en-us/articles/360040999352-Assigning-client-codes-to-phone-calls). You can track call logs with a client code. \n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:call_log:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "addClientCodeToCallLog",
        "parameters": [
          {
            "name": "callLogId",
            "in": "path",
            "description": "The unique identifier of the call log.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "a55d94f7-27ea-4dbb-ab25-028f2c8d55bd"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["client_code"],
                "type": "object",
                "properties": {
                  "client_code": {
                    "type": "string",
                    "description": "The client code (3 to 16 digit number) to mark the call log.",
                    "example": "123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nSuccessfully added the client code to the call log."
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Validation Failed. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "deprecated": true,
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:call_log:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:call_log:admin"]
        }
      }
    },
    "/phone/users/{userId}/call_history": {
      "get": {
        "tags": ["Call Logs"],
        "summary": "Get user's call history",
        "description": "Returns a user's [Zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) call logs. \r\n\r\nFor user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\r\n\r\n**Prerequisites:** \r\n* A Business or Enterprise account \r\n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`,`phone_call_log:read`\n\n**Granular Scopes:** `phone:read:list_call_logs:admin`,`phone:read:list_call_logs`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "phoneUserCallHistory",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "required": true,
            "schema": { "type": "string", "example": "DYHrdpjrS3uaOf7dPkkg8w" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. \n\nThe date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data. The month defined should fall within the last six months. If unspecified, returns data within the 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2023-10-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. \n\nEnd time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2023-10-12"
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The keyword of the name, extension, number, email address, and call ID. It provides the ability to search by keyword and it shows a list of all the related calls. Any calls go through this keyword.",
            "required": false,
            "schema": { "type": "string", "example": "User 1" }
          },
          {
            "name": "directions",
            "in": "query",
            "description": "The direction filter of the call logs.",
            "required": false,
            "schema": {
              "maxItems": 2,
              "type": "array",
              "example": [],
              "items": {
                "type": "string",
                "example": "inbound",
                "enum": ["inbound", "outbound"]
              }
            }
          },
          {
            "name": "connect_types",
            "in": "query",
            "description": "The connect type filter of the call logs. \n* `internal` \n* `external` ",
            "required": false,
            "schema": {
              "maxItems": 2,
              "type": "array",
              "example": [],
              "items": {
                "type": "string",
                "example": "internal",
                "enum": ["internal", "external"]
              }
            }
          },
          {
            "name": "number_types",
            "in": "query",
            "description": "The number type filter of the caller or callee. ",
            "required": false,
            "schema": {
              "maxItems": 10,
              "type": "array",
              "example": [],
              "items": {
                "type": "string",
                "example": "external_pstn",
                "enum": [
                  "zoom_pstn",
                  "zoom_toll_free_number",
                  "external_pstn",
                  "external_contact",
                  "byoc",
                  "byop",
                  "3rd_party_contact_center",
                  "zoom_service_number",
                  "external_service_number",
                  "zoom_contact_center",
                  "meeting_phone_number",
                  "meeting_id",
                  "anonymous_number",
                  "zoom_revenue_accelerator"
                ]
              }
            }
          },
          {
            "name": "call_types",
            "in": "query",
            "description": "The call type filter of the call logs. \n* `general` \n* `emergency`",
            "required": false,
            "schema": {
              "maxItems": 2,
              "type": "array",
              "example": [],
              "items": {
                "type": "string",
                "example": "general",
                "enum": ["general", "emergency"]
              }
            }
          },
          {
            "name": "extension_types",
            "in": "query",
            "description": "The extension type filter of the call logs.",
            "required": false,
            "schema": {
              "maxItems": 10,
              "type": "array",
              "example": [],
              "items": {
                "type": "string",
                "example": "user",
                "enum": [
                  "user",
                  "call_queue",
                  "auto_receptionist",
                  "common_area",
                  "zoom_room",
                  "cisco_room",
                  "shared_line_group",
                  "group_call_pickup",
                  "external_contact"
                ]
              }
            }
          },
          {
            "name": "call_results",
            "in": "query",
            "description": "The call result filter of the call logs.",
            "required": false,
            "schema": {
              "maxItems": 10,
              "type": "array",
              "example": [],
              "items": {
                "type": "string",
                "example": "answered",
                "enum": [
                  "answered",
                  "connected",
                  "voicemail",
                  "hang_up",
                  "no_answer",
                  "invalid_operation",
                  "abandoned",
                  "blocked",
                  "service_unavailable"
                ]
              }
            }
          },
          {
            "name": "group_ids",
            "in": "query",
            "description": "The primary group filter of call logs.",
            "required": false,
            "schema": {
              "maxItems": 10,
              "type": "array",
              "example": [],
              "items": { "type": "string", "example": "b4Uge6AxQQWlAepTCbFeKQ" }
            }
          },
          {
            "name": "site_ids",
            "in": "query",
            "description": "The site filter of call logs.",
            "required": false,
            "schema": {
              "maxItems": 10,
              "type": "array",
              "example": [],
              "items": { "type": "string", "example": "8f71O6rWT8KFUGQmJIFAdQ" }
            }
          },
          {
            "name": "department",
            "in": "query",
            "description": "The department of which the call log belongs.",
            "required": false,
            "schema": { "type": "string", "example": "Phone department" }
          },
          {
            "name": "cost_center",
            "in": "query",
            "description": "The cost center of which the call log belongs.",
            "required": false,
            "schema": { "type": "string", "example": "Phone cost center" }
          },
          {
            "name": "time_type",
            "in": "query",
            "description": "This field enables you to search call logs by start or end time. By default, using start_time",
            "required": false,
            "schema": {
              "type": "string",
              "example": "start_time",
              "default": "start_time",
              "enum": ["start_time", "end_time"]
            }
          },
          {
            "name": "recording_status",
            "in": "query",
            "description": "The recording filter indicates whether the whole call has recording or not. recorded means the call has at least one recording, non_recorded means the call does not have any recordings.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "recorded",
              "default": "",
              "enum": ["recorded", "non_recorded"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` User's call history returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_logs": {
                      "type": "array",
                      "description": "The call logs.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the call log.",
                            "example": "20231008-48c1dfd4-91ce-4df5-8495-7c9e33d10869"
                          },
                          "call_id": {
                            "type": "string",
                            "description": "The ID of the phone call.",
                            "example": "7018317023722949162"
                          },
                          "group_id": {
                            "type": "string",
                            "description": "The primary group of which the user belongs.",
                            "example": "_sj190JDFasa19321_adA7"
                          },
                          "connect_type": {
                            "type": "string",
                            "description": "The connect type of call.",
                            "example": "internal",
                            "enum": ["internal", "external"]
                          },
                          "call_type": {
                            "type": "string",
                            "description": "The type of call.",
                            "example": "general",
                            "enum": ["general", "emergency"]
                          },
                          "direction": {
                            "type": "string",
                            "description": "The direction of the call.",
                            "example": "inbound",
                            "enum": ["inbound", "outbound"]
                          },
                          "caller_ext_id": {
                            "type": "string",
                            "description": "The caller's extension ID.",
                            "example": "ATu63--9TjudZetpf4UuQg"
                          },
                          "caller_name": {
                            "type": "string",
                            "description": "The name of the caller.",
                            "example": "Caller name"
                          },
                          "caller_email": {
                            "type": "string",
                            "description": "The caller's email.",
                            "example": "test@abc.com"
                          },
                          "caller_employee_id": {
                            "type": "string",
                            "description": "Ther caller's employee ID.",
                            "example": "102911"
                          },
                          "caller_did_number": {
                            "type": "string",
                            "description": "The caller's DID number in e164 format.",
                            "example": "+12059300920"
                          },
                          "caller_ext_number": {
                            "type": "string",
                            "description": "The extension number of the caller.",
                            "example": "101229"
                          },
                          "caller_ext_type": {
                            "type": "string",
                            "description": "The caller's extension type.",
                            "example": "user",
                            "enum": [
                              "user",
                              "call_queue",
                              "auto_receptionist",
                              "common_area",
                              "zoom_room",
                              "cisco_room",
                              "shared_line_group",
                              "group_call_pickup",
                              "external_contact"
                            ]
                          },
                          "caller_number_type": {
                            "type": "string",
                            "description": "The caller's number type.",
                            "example": "external_pstn",
                            "enum": [
                              "zoom_pstn",
                              "zoom_toll_free_number",
                              "external_pstn",
                              "external_contact",
                              "byoc",
                              "byop",
                              "3rd_party_contact_center",
                              "zoom_service_number",
                              "external_service_number",
                              "zoom_contact_center",
                              "meeting_phone_number",
                              "meeting_id",
                              "anonymous_number",
                              "zoom_revenue_accelerator"
                            ]
                          },
                          "caller_device_private_ip": {
                            "type": "string",
                            "description": "The caller's private IP.",
                            "example": "10.0.0.1"
                          },
                          "caller_device_public_ip": {
                            "type": "string",
                            "description": "The caller's public IP.",
                            "example": "135.0.0.1"
                          },
                          "caller_device_type": {
                            "type": "string",
                            "description": "The caller's device type.",
                            "example": "MAC_Client(6.0.2.33403)"
                          },
                          "caller_country_iso_code": {
                            "type": "string",
                            "description": "The caller's country ISO code.",
                            "example": "US"
                          },
                          "caller_country_code": {
                            "type": "string",
                            "description": "The caller's country code.",
                            "example": "1"
                          },
                          "caller_site_id": {
                            "type": "string",
                            "description": "The caller's site ID.",
                            "example": "BpCTBMRARBefUrprildVqw"
                          },
                          "caller_department": {
                            "type": "string",
                            "description": "The caller's department.",
                            "example": "web-api1"
                          },
                          "caller_cost_center": {
                            "type": "string",
                            "description": "The caller's cost center.",
                            "example": "cost-center1"
                          },
                          "callee_ext_id": {
                            "type": "string",
                            "description": "The callee's extension ID.",
                            "example": "ATu63--9TjudZetpf4UuQg"
                          },
                          "callee_name": {
                            "type": "string",
                            "description": "The name of the callee.",
                            "example": "Callee name"
                          },
                          "callee_did_number": {
                            "type": "string",
                            "description": "The callee's DID number in e164 format.",
                            "example": "+12059300920"
                          },
                          "callee_ext_number": {
                            "type": "string",
                            "description": "The extension number of the callee.",
                            "example": "101229"
                          },
                          "callee_email": {
                            "type": "string",
                            "description": "The callee's email.",
                            "example": "test@abc.com"
                          },
                          "callee_employee_id": {
                            "type": "string",
                            "description": "Ther callee's employee id",
                            "example": "102912"
                          },
                          "callee_ext_type": {
                            "type": "string",
                            "description": "The callee's extension type.",
                            "example": "user",
                            "enum": [
                              "user",
                              "call_queue",
                              "auto_receptionist",
                              "common_area",
                              "zoom_room",
                              "cisco_room",
                              "shared_line_group",
                              "group_call_pickup",
                              "external_contact"
                            ]
                          },
                          "callee_number_type": {
                            "type": "string",
                            "description": "The callee's number type.",
                            "example": "external_pstn",
                            "enum": [
                              "zoom_pstn",
                              "zoom_toll_free_number",
                              "external_pstn",
                              "external_contact",
                              "byoc",
                              "byop",
                              "3rd_party_contact_center",
                              "zoom_service_number",
                              "external_service_number",
                              "zoom_contact_center",
                              "meeting_phone_number",
                              "meeting_id",
                              "anonymous_number",
                              "zoom_revenue_accelerator"
                            ]
                          },
                          "callee_device_private_ip": {
                            "type": "string",
                            "description": "The callee's private IP.",
                            "example": "10.0.0.2"
                          },
                          "callee_device_public_ip": {
                            "type": "string",
                            "description": "The callee's public IP.",
                            "example": "135.0.0.2"
                          },
                          "callee_device_type": {
                            "type": "string",
                            "description": "The callee's device type.",
                            "example": "MAC_Client(6.0.2.33403)"
                          },
                          "callee_country_iso_code": {
                            "type": "string",
                            "description": "The callee's country ISO code.",
                            "example": "US"
                          },
                          "callee_country_code": {
                            "type": "string",
                            "description": "The callee's country code.",
                            "example": "1"
                          },
                          "callee_site_id": {
                            "type": "string",
                            "description": "The callee's site ID.",
                            "example": "BpCTBMRARBefUrprildVqw"
                          },
                          "callee_department": {
                            "type": "string",
                            "description": "The callee's department.",
                            "example": "web-api1"
                          },
                          "callee_cost_center": {
                            "type": "string",
                            "description": "The callee's cost center.",
                            "example": "cost-center1"
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The call start time in GMT `date-time` format.",
                            "example": "2023-10-08T16:12:04Z"
                          },
                          "answer_time": {
                            "type": "string",
                            "description": "The call answer time in GMT `date-time` format.",
                            "example": "2023-10-08T16:12:04Z"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The call end time in GMT `date-time` format.",
                            "example": "2023-10-08T16:12:15Z"
                          },
                          "event": {
                            "type": "string",
                            "description": "An event within a call log.",
                            "example": "outgoing",
                            "enum": [
                              "incoming",
                              "outgoing",
                              "forward",
                              "ring_to_member",
                              "overflow",
                              "direct_transfer",
                              "barge",
                              "monitor",
                              "whisper",
                              "listen",
                              "takeover",
                              "conference_barge",
                              "park",
                              "timeout",
                              "park_pick_up",
                              "merge"
                            ]
                          },
                          "result": {
                            "type": "string",
                            "description": "The detail result of an event for a call log.",
                            "example": "answered",
                            "enum": [
                              "answered",
                              "accepted",
                              "picked_up",
                              "connected",
                              "succeeded",
                              "voicemail",
                              "canceled",
                              "call_failed",
                              "rejected",
                              "busy",
                              "ring_timeout",
                              "overflowed",
                              "no_answer",
                              "invalid_key",
                              "abandoned",
                              "system_blocked",
                              "service_unavailable"
                            ]
                          },
                          "result_reason": {
                            "type": "string",
                            "description": "The reason of result of an event for a call log.",
                            "example": "answered_by_other",
                            "enum": [
                              "answered_by_other",
                              "pickup_by_other",
                              "call_out_by_other"
                            ]
                          },
                          "operator_ext_number": {
                            "type": "string",
                            "description": "The operator extension number.",
                            "example": "3456"
                          },
                          "operator_ext_id": {
                            "type": "string",
                            "description": "The operator extension ID.",
                            "example": "NN9rA4fZSsScB2YiCqw7Ig"
                          },
                          "operator_ext_type": {
                            "type": "string",
                            "description": "The operator extension type.",
                            "example": "user",
                            "enum": [
                              "user",
                              "call_queue",
                              "auto_receptionist",
                              "common_area",
                              "zoom_room",
                              "cisco_room",
                              "shared_line_group",
                              "group_call_pickup",
                              "external_contact"
                            ]
                          },
                          "operator_name": {
                            "type": "string",
                            "description": "The operator's name.",
                            "example": "operator name"
                          },
                          "recording_id": {
                            "type": "string",
                            "description": "The unique identifier of the call recording.",
                            "example": "c71b360f6e774e3aa101453117b7e1a7"
                          },
                          "recording_type": {
                            "type": "string",
                            "description": "The type of call recording.",
                            "example": "automatic",
                            "enum": ["ad-hoc", "automatic"]
                          },
                          "voicemail_id": {
                            "type": "string",
                            "description": "The ID of the call voicemail.",
                            "example": "6cd2da01bcaa47f58e3250a575c5f2bf"
                          },
                          "talk_time": {
                            "type": "integer",
                            "description": "The call talk time in seconds.",
                            "example": 31
                          },
                          "hold_time": {
                            "type": "integer",
                            "description": "The call hold time in seconds.",
                            "example": 20
                          },
                          "wait_time": {
                            "type": "integer",
                            "description": "The call wait time in seconds.",
                            "example": 20
                          }
                        }
                      }
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date of the log.",
                      "example": "2023-10-01"
                    },
                    "to": {
                      "type": "string",
                      "description": "The end time and date of the log",
                      "example": "2023-10-12"
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "AmhfoKtF2Ey4TaPg2iZsAcmetRLs2ZY0Sk2"
                    },
                    "page_count": {
                      "type": "integer",
                      "description": "The total number of pages",
                      "example": 2
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call for each page.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 54
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `301` <br>\n Invalid request param: {paramName}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone_call_log:read",
              "phone:read:list_call_logs:admin",
              "phone:read:list_call_logs"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin", "phone_call_log:read"],
          "x-granular-scopes": [
            "phone:read:list_call_logs:admin",
            "phone:read:list_call_logs"
          ]
        }
      }
    },
    "/phone/users/{userId}/call_history/sync": {
      "get": {
        "tags": ["Call Logs"],
        "summary": "Sync user's call history",
        "description": "Syncs a user's [Zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) call history. \n\nFor user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites:** \n* A Business or Enterprise account\n * A Zoom Phone license\n\n**Scopes:** `phone:read:admin`,`phone:read`\n\n**Granular Scopes:** `phone:read:list_call_logs`,`phone:read:list_call_logs:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "syncUserCallHistory",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "sync_type",
            "in": "query",
            "description": "The options for synchronizing call log:   FSync - Full sync   ISync - Increase sync   BSync - Backward sync",
            "required": false,
            "schema": { "type": "string", "example": "FSync" }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": { "type": "integer", "example": 50 }
          },
          {
            "name": "sync_token",
            "in": "query",
            "description": "The time range for returned records. It's used for locating where the next retrieval will begin.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "SDVjM3NHRlNyMF8xNjQwODI3NTkyMzkwXzE2NDgwMTUzNTk0MzI="
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status code:** `200`User call logs returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_logs": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The ID of the call log.",
                            "example": "20231008-48c1dfd4-91ce-4df5-8495-7c9e33d10869"
                          },
                          "call_id": {
                            "type": "string",
                            "description": "The ID of the phone call.",
                            "example": "7018317023722949162"
                          },
                          "group_id": {
                            "type": "string",
                            "description": "The primary group of which the user belongs.",
                            "example": "_sj190JDFasa19321_adA7"
                          },
                          "connect_type": {
                            "type": "string",
                            "description": "The connect type of call.",
                            "example": "internal",
                            "enum": ["internal", "external"]
                          },
                          "call_type": {
                            "type": "string",
                            "description": "The type of call.",
                            "example": "general",
                            "enum": ["general", "emergency"]
                          },
                          "direction": {
                            "type": "string",
                            "description": "The direction of the call.",
                            "example": "inbound",
                            "enum": ["inbound", "outbound"]
                          },
                          "caller_ext_id": {
                            "type": "string",
                            "description": "The caller's extension ID.",
                            "example": "ATu63--9TjudZetpf4UuQg"
                          },
                          "caller_name": {
                            "type": "string",
                            "description": "The name of the caller.",
                            "example": "Caller name"
                          },
                          "caller_email": {
                            "type": "string",
                            "description": "The caller's email.",
                            "example": "test@abc.com"
                          },
                          "caller_employee_id": {
                            "type": "string",
                            "description": "Ther caller's employee id",
                            "example": "102911"
                          },
                          "caller_did_number": {
                            "type": "string",
                            "description": "The caller's DID number in e164 format.",
                            "example": "+12059300920"
                          },
                          "caller_ext_number": {
                            "type": "string",
                            "description": "The extension number of the caller.",
                            "example": "101229"
                          },
                          "caller_ext_type": {
                            "type": "string",
                            "description": "The caller's extension type.",
                            "example": "user",
                            "enum": [
                              "user",
                              "call_queue",
                              "auto_receptionist",
                              "common_area",
                              "zoom_room",
                              "cisco_room",
                              "shared_line_group",
                              "group_call_pickup",
                              "external_contact"
                            ]
                          },
                          "caller_number_type": {
                            "type": "string",
                            "description": "The caller's number type.",
                            "example": "external_pstn",
                            "enum": [
                              "zoom_pstn",
                              "zoom_toll_free_number",
                              "external_pstn",
                              "external_contact",
                              "byoc",
                              "byop",
                              "3rd_party_contact_center",
                              "zoom_service_number",
                              "external_service_number",
                              "zoom_contact_center",
                              "meeting_phone_number",
                              "meeting_id",
                              "anonymous_number",
                              "zoom_revenue_accelerator"
                            ]
                          },
                          "caller_device_private_ip": {
                            "type": "string",
                            "description": "The caller's private IP.",
                            "example": "10.0.0.1"
                          },
                          "caller_device_public_ip": {
                            "type": "string",
                            "description": "The caller's public IP.",
                            "example": "135.0.0.1"
                          },
                          "caller_device_type": {
                            "type": "string",
                            "description": "The caller's device type.",
                            "example": "MAC_Client(6.0.2.33403)"
                          },
                          "caller_country_iso_code": {
                            "type": "string",
                            "description": "The caller's country ISO code.",
                            "example": "US"
                          },
                          "caller_country_code": {
                            "type": "string",
                            "description": "The caller's country code.",
                            "example": "1"
                          },
                          "caller_site_id": {
                            "type": "string",
                            "description": "The caller's site ID.",
                            "example": "BpCTBMRARBefUrprildVqw"
                          },
                          "caller_department": {
                            "type": "string",
                            "description": "The caller's department.",
                            "example": "web-api1"
                          },
                          "caller_cost_center": {
                            "type": "string",
                            "description": "The caller's cost center.",
                            "example": "cost-center1"
                          },
                          "callee_ext_id": {
                            "type": "string",
                            "description": "The callee's extension ID.",
                            "example": "ATu63--9TjudZetpf4UuQg"
                          },
                          "callee_name": {
                            "type": "string",
                            "description": "The name of the callee.",
                            "example": "Callee name"
                          },
                          "callee_did_number": {
                            "type": "string",
                            "description": "The callee's DID number in e164 format.",
                            "example": "+12059300920"
                          },
                          "callee_ext_number": {
                            "type": "string",
                            "description": "The extension number of the callee.",
                            "example": "101229"
                          },
                          "callee_email": {
                            "type": "string",
                            "description": "The callee's email.",
                            "example": "test@abc.com"
                          },
                          "callee_employee_id": {
                            "type": "string",
                            "description": "Ther callee's employee id",
                            "example": "102912"
                          },
                          "callee_ext_type": {
                            "type": "string",
                            "description": "The callee's extension type.",
                            "example": "user",
                            "enum": [
                              "user",
                              "call_queue",
                              "auto_receptionist",
                              "common_area",
                              "zoom_room",
                              "cisco_room",
                              "shared_line_group",
                              "group_call_pickup",
                              "external_contact"
                            ]
                          },
                          "callee_number_type": {
                            "type": "string",
                            "description": "The callee's number type.",
                            "example": "external_pstn",
                            "enum": [
                              "zoom_pstn",
                              "zoom_toll_free_number",
                              "external_pstn",
                              "external_contact",
                              "byoc",
                              "byop",
                              "3rd_party_contact_center",
                              "zoom_service_number",
                              "external_service_number",
                              "zoom_contact_center",
                              "meeting_phone_number",
                              "meeting_id",
                              "anonymous_number",
                              "zoom_revenue_accelerator"
                            ]
                          },
                          "callee_device_private_ip": {
                            "type": "string",
                            "description": "The callee's private IP.",
                            "example": "10.0.0.2"
                          },
                          "callee_device_public_ip": {
                            "type": "string",
                            "description": "The callee's public IP.",
                            "example": "135.0.0.2"
                          },
                          "callee_device_type": {
                            "type": "string",
                            "description": "The callee's device type.",
                            "example": "MAC_Client(6.0.2.33403)"
                          },
                          "callee_country_iso_code": {
                            "type": "string",
                            "description": "The callee's country ISO code.",
                            "example": "US"
                          },
                          "callee_country_code": {
                            "type": "string",
                            "description": "The callee's country code.",
                            "example": "1"
                          },
                          "callee_site_id": {
                            "type": "string",
                            "description": "The callee's site ID.",
                            "example": "BpCTBMRARBefUrprildVqw"
                          },
                          "callee_department": {
                            "type": "string",
                            "description": "The callee's department.",
                            "example": "web-api1"
                          },
                          "callee_cost_center": {
                            "type": "string",
                            "description": "The callee's cost center.",
                            "example": "cost-center1"
                          },
                          "start_time": {
                            "type": "string",
                            "description": "The call start time in GMT `date-time` format.",
                            "example": "2023-10-08T16:12:04Z"
                          },
                          "answer_time": {
                            "type": "string",
                            "description": "The call answer time in GMT `date-time` format.",
                            "example": "2023-10-08T16:12:04Z"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The call end time in GMT `date-time` format.",
                            "example": "2023-10-08T16:12:15Z"
                          },
                          "event": {
                            "type": "string",
                            "description": "An event within a call log.",
                            "example": "outgoing",
                            "enum": [
                              "incoming",
                              "outgoing",
                              "forward",
                              "ring_to_member",
                              "overflow",
                              "direct_transfer",
                              "barge",
                              "monitor",
                              "whisper",
                              "listen",
                              "takeover",
                              "conference_barge",
                              "park",
                              "timeout",
                              "park_pick_up",
                              "merge"
                            ]
                          },
                          "result": {
                            "type": "string",
                            "description": "The detail result of an event for a call log.",
                            "example": "answered",
                            "enum": [
                              "answered",
                              "accepted",
                              "picked_up",
                              "connected",
                              "succeeded",
                              "voicemail",
                              "canceled",
                              "call_failed",
                              "rejected",
                              "busy",
                              "ring_timeout",
                              "overflowed",
                              "no_answer",
                              "invalid_key",
                              "abandoned",
                              "system_blocked",
                              "service_unavailable"
                            ]
                          },
                          "result_reason": {
                            "type": "string",
                            "description": "The reason of result of an event for a call log.",
                            "example": "answered_by_other",
                            "enum": [
                              "answered_by_other",
                              "pickup_by_other",
                              "call_out_by_other"
                            ]
                          },
                          "operator_ext_number": {
                            "type": "string",
                            "description": "The operator extension number.",
                            "example": "3456"
                          },
                          "operator_ext_id": {
                            "type": "string",
                            "description": "The operator extension ID.",
                            "example": "NN9rA4fZSsScB2YiCqw7Ig"
                          },
                          "operator_ext_type": {
                            "type": "string",
                            "description": "The operator extension type.",
                            "example": "user",
                            "enum": [
                              "user",
                              "call_queue",
                              "auto_receptionist",
                              "common_area",
                              "zoom_room",
                              "cisco_room",
                              "shared_line_group",
                              "group_call_pickup",
                              "external_contact"
                            ]
                          },
                          "operator_name": {
                            "type": "string",
                            "description": "The operator's name.",
                            "example": "operator name"
                          },
                          "recording_id": {
                            "type": "string",
                            "description": "The unique identifier of the call recording.",
                            "example": "c71b360f6e774e3aa101453117b7e1a7"
                          },
                          "recording_type": {
                            "type": "string",
                            "description": "The type of call recording.",
                            "example": "automatic",
                            "enum": ["ad-hoc", "automatic"]
                          },
                          "voicemail_id": {
                            "type": "string",
                            "description": "The ID of the call voicemail.",
                            "example": "6cd2da01bcaa47f58e3250a575c5f2bf"
                          },
                          "talk_time": {
                            "type": "integer",
                            "description": "The call talk time in seconds.",
                            "example": 31
                          },
                          "hold_time": {
                            "type": "integer",
                            "description": "The call hold time in seconds.",
                            "example": 20
                          },
                          "wait_time": {
                            "type": "integer",
                            "description": "The call wait time in seconds.",
                            "example": 20
                          },
                          "ai_call_summary_id": {
                            "type": "string",
                            "description": "The ai call summary ID.",
                            "example": "rBA9KJdyTVqGdTLpysHBsg"
                          }
                        }
                      }
                    },
                    "sync_token": {
                      "type": "string",
                      "description": "The time range for returned records. Used for locating where the next retrieval will begin.",
                      "example": "SDVjM3NHRlNyMF8xNjQwODI3NTkyMzkwXzE2NDgwMTUzNTk0MzI="
                    }
                  },
                  "description": "The sync user call logs"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `301` <br>\n Invalid request param: {paramName}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read",
              "phone:read:list_call_logs",
              "phone:read:list_call_logs:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin", "phone:read"],
          "x-granular-scopes": [
            "phone:read:list_call_logs",
            "phone:read:list_call_logs:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/call_history/{callLogId}": {
      "delete": {
        "tags": ["Call Logs"],
        "summary": "Delete a user's call history",
        "description": "Deletes a user's [call history](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs). \n\nFor user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites** \n\n* Belong to a Business or Enterprise account \n* Have a Zoom Phone license\n\n**Scopes:** `phone:write`,`phone:write:admin`,`phone_call_log:write`,`phone_call_log:write:admin`\n\n**Granular Scopes:** `phone:delete:call_log`,`phone:delete:call_log:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteUserCallHistory",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user.",
            "required": true,
            "schema": { "type": "string", "example": "DnEopNmXQEGU2uvvzjgojw" }
          },
          {
            "name": "callLogId",
            "in": "path",
            "description": "The unique identifier of the call log. The value for this field can be retrieved from [account's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/accountCallLogs) or [user's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/phoneUserCallLogs).",
            "required": true,
            "schema": {
              "type": "string",
              "example": "20231008-c106fda5-7320-46cb-a5d2-7c73a2173d2f"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Call history has been deleted successfully"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n User does not exist: {userId}. <br>\n**Error Code:** `301` <br>\n Call history not found: {callLogId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write",
              "phone:write:admin",
              "phone_call_log:write",
              "phone_call_log:write:admin",
              "phone:delete:call_log",
              "phone:delete:call_log:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:write",
            "phone:write:admin",
            "phone_call_log:write",
            "phone_call_log:write:admin"
          ],
          "x-granular-scopes": [
            "phone:delete:call_log",
            "phone:delete:call_log:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/call_logs": {
      "get": {
        "tags": ["Call Logs"],
        "summary": "Get user's call logs",
        "description": "Returns a user's [Zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) call logs. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read`,`phone:read:admin`,`phone_call_log:read`,`phone_call_log:read:admin`\n\n**Granular Scopes:** `phone:read:list_call_logs`,`phone:read:list_call_logs:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "phoneUserCallLogs",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "required": true,
            "schema": { "type": "string", "example": "DYHrdpjrS3uaOf7dPkkg8w" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data. The month defined should fall within the last six months. If unspecified, returns data within the 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-10-31"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "example": "all",
              "enum": ["all", "missed"]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "phone_number",
            "in": "query",
            "description": "This field filters API responses to include call logs of only the phone number defined in this field.",
            "required": false,
            "schema": { "type": "string", "example": "+12055432724" }
          },
          {
            "name": "time_type",
            "in": "query",
            "description": "This field enables you to sort call logs by start or end time. Choose the sort time value. Values include `startTime` or `endTime`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "startTime",
              "default": "startTime",
              "enum": ["startTime", "endTime"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status code:** `200`\nUser's call logs returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_logs": {
                      "maxItems": 100,
                      "type": "array",
                      "description": "The call Log",
                      "items": {
                        "type": "object",
                        "properties": {
                          "accepted_by": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "string",
                                "example": "1009"
                              },
                              "location": {
                                "type": "string",
                                "example": "Pontotoc     MS"
                              },
                              "name": {
                                "type": "string",
                                "example": "Display name"
                              },
                              "number_type": {
                                "type": "integer",
                                "description": "The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.",
                                "example": 1
                              },
                              "phone_number": {
                                "type": "string",
                                "example": "+12055432724"
                              }
                            },
                            "description": "This field indicates who accepted the call."
                          },
                          "answer_start_time": {
                            "type": "string",
                            "description": "The call's answer time, in GMT `date-time` format. The API only displays this response if the `direction` value is `inbound`.",
                            "example": "2021-10-09T16:52:05Z"
                          },
                          "call_end_time": {
                            "type": "string",
                            "description": "The call end time, in GMT `date-time` format.",
                            "example": "2021-10-09T17:20:53Z"
                          },
                          "call_id": {
                            "type": "string",
                            "description": "The unique identifier of the phone call.",
                            "example": "7017184835983901126"
                          },
                          "callee_country_code": {
                            "type": "string",
                            "description": "The country calling code.",
                            "example": "1"
                          },
                          "callee_country_iso_code": {
                            "type": "string",
                            "description": "The ISO alpha2 country code.",
                            "example": "US"
                          },
                          "callee_did_number": {
                            "type": "string",
                            "description": "The callee's DID (direct inward dial) number in e164 format.",
                            "example": "+12055432724"
                          },
                          "callee_name": {
                            "type": "string",
                            "description": "The contact name of callee",
                            "example": "Callee name"
                          },
                          "callee_number": {
                            "type": "string",
                            "description": "The number of the callee",
                            "example": "1018"
                          },
                          "callee_number_type": {
                            "type": "integer",
                            "description": "The callee's number type:\n* `1` &mdash; Extension number.\n* `2` &mdash; Phone number.\n* `3` &mdash; Customized emergency number.",
                            "example": 1,
                            "enum": [1, 2, 3]
                          },
                          "callee_number_source": {
                            "type": "string",
                            "description": "This field indicates where the phone number comes from:\n* `internal` &mdash; ZP native.\n* `external` &mdash; BYOC or Provider Exchange.\n* `byop` &mdash; Premise peering.\nNot available when `callee_number_type = 1`.",
                            "example": "internal",
                            "enum": ["internal", "external", "byop"]
                          },
                          "caller_country_code": {
                            "type": "string",
                            "description": "The country calling code.",
                            "example": "1"
                          },
                          "caller_country_iso_code": {
                            "type": "string",
                            "description": "The ISO alpha2 country code.",
                            "example": "US"
                          },
                          "caller_did_number": {
                            "type": "string",
                            "description": "The caller's DID (direct inward dial) number in e164 format.",
                            "example": "+12055432724"
                          },
                          "caller_name": {
                            "type": "string",
                            "description": "The contact name of the caller",
                            "example": "Caller name"
                          },
                          "caller_number": {
                            "type": "string",
                            "description": "The number of the caller",
                            "example": "+12059300920"
                          },
                          "caller_number_type": {
                            "type": "integer",
                            "description": "The caller's number type: \n* `1` &mdash; Extension number. \n* `2` &mdash; Phone number.",
                            "example": 1,
                            "enum": [1, 2]
                          },
                          "caller_number_source": {
                            "type": "string",
                            "description": "This field indicates where the phone number comes from:\n* `internal` &mdash; ZP native.\n* `external` &mdash; BYOC or Provider Exchange.\n* `byop` &mdash; Premise peering.\nNot available when `caller_number_type = 1`.",
                            "example": "internal",
                            "enum": ["internal", "external", "byop"]
                          },
                          "caller_billing_reference_id": {
                            "type": "string",
                            "description": "The billing reference ID (for peering phone numbers).",
                            "example": "ZoomTelecom123456"
                          },
                          "charge": {
                            "type": "string",
                            "description": "The billing charge for the call.",
                            "example": "$0.0255"
                          },
                          "client_code": {
                            "type": "string",
                            "description": "The client code.",
                            "example": "123"
                          },
                          "date_time": {
                            "type": "string",
                            "description": "The start time of the call",
                            "example": "2022-01-24T23:58:10Z"
                          },
                          "direction": {
                            "type": "string",
                            "description": "The direction of the call. &quot;inbound&quot; | &quot;outbound&quot;",
                            "example": "inbound"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The duration of the call in seconds.",
                            "example": 20
                          },
                          "forwarded_by": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "string",
                                "example": "1009"
                              },
                              "extension_type": {
                                "type": "string",
                                "example": "user",
                                "enum": [
                                  "user",
                                  "callQueue",
                                  "commonAreaPhone",
                                  "autoReceptionist",
                                  "sharedLineGroup"
                                ]
                              },
                              "location": {
                                "type": "string",
                                "example": "Glendale     CA"
                              },
                              "name": {
                                "type": "string",
                                "example": "The display name"
                              },
                              "number_type": {
                                "type": "integer",
                                "description": "The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.",
                                "example": 1
                              },
                              "phone_number": {
                                "type": "string",
                                "example": "+12055432724"
                              }
                            },
                            "description": "This field indicates where the call was forwarded from."
                          },
                          "forwarded_to": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "string",
                                "example": "1009"
                              },
                              "location": {
                                "type": "string",
                                "example": "Glendale     CA"
                              },
                              "name": {
                                "type": "string",
                                "example": "Display name"
                              },
                              "number_type": {
                                "type": "integer",
                                "description": "The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.",
                                "example": 1
                              },
                              "phone_number": {
                                "type": "string",
                                "example": "+12055432724"
                              }
                            },
                            "description": "The field indicates who the call was forwarded to."
                          },
                          "has_recording": {
                            "type": "boolean",
                            "description": "Whether the call has a recording. See [announcement](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#deprecation-of-the-has_voicemail-and-has_recording-responses-in-phone-api) from July, 2021",
                            "example": false,
                            "deprecated": true
                          },
                          "has_voicemail": {
                            "type": "boolean",
                            "description": "Whether the call has a voicemail. See [announcement](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#deprecation-of-the-has_voicemail-and-has_recording-responses-in-phone-api) from July, 2021.",
                            "example": false,
                            "deprecated": true
                          },
                          "id": {
                            "type": "string",
                            "description": "The call Log ID",
                            "example": "48c1dfd4-91ce-4df5-8495-7c9e33d10869"
                          },
                          "outgoing_by": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "string",
                                "example": "1009"
                              },
                              "location": {
                                "type": "string",
                                "example": "Glendale     CA"
                              },
                              "name": {
                                "type": "string",
                                "example": "Display name"
                              },
                              "number_type": {
                                "type": "integer",
                                "description": "The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.",
                                "example": 1
                              },
                              "phone_number": {
                                "type": "string",
                                "example": "+12055432724"
                              }
                            }
                          },
                          "path": {
                            "type": "string",
                            "description": "The path of the call log.",
                            "example": "pstn"
                          },
                          "rate": {
                            "type": "string",
                            "description": "The billing rate for the call.",
                            "example": "$0.0255"
                          },
                          "recording_type": {
                            "type": "string",
                            "description": "The recording type. \n\n* `On-demand` recording.\n\n* `Automatic` recording.",
                            "example": "On-demand",
                            "enum": ["OnDemand", "Automatic"]
                          },
                          "result": {
                            "type": "string",
                            "description": "The result of the call: `Missed` | `Voicemail` | `Call connected` | `Rejected` | `Blocked`| `Busy`| `Wrong Number`| `No Answer`| `International Disabled`| `Internal Error`| `Call failed` | `Restricted Number`| `Call Cancel` | `Message`| `Answered by Other Member` | `Call Cancelled` | `Park` | `Parked` | `Blocked by non-GAL` |  `Blocked by info-Barriers` | `Recording Failure`| `Recorded`| `Auto Recorded`.",
                            "example": "Call connected"
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the site where the phone number is assigned.",
                                "example": "Main Site"
                              }
                            }
                          },
                          "user_id": {
                            "type": "string",
                            "description": "The user ID or user email.",
                            "example": "DnEopNmXQEGU2uvvzjgojw"
                          },
                          "hold_time": {
                            "type": "integer",
                            "description": "The hold time during a call in seconds.",
                            "example": 5
                          },
                          "waiting_time": {
                            "type": "integer",
                            "description": "The time (in seconds) spent waiting for the call to be connected.",
                            "example": 10
                          },
                          "department": {
                            "type": "string",
                            "description": "The name of the user's department.",
                            "example": "web-api1"
                          },
                          "cost_center": {
                            "type": "string",
                            "description": "The cost center name to which a user belongs.",
                            "example": "cost-center1"
                          }
                        }
                      }
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date of the log",
                      "example": "2021-10-01"
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "AmhfoKtF2Ey4TaPg2iZsAcmetRLs2ZY0Sk2"
                    },
                    "page_count": {
                      "type": "integer",
                      "description": "The total number of pages",
                      "example": 2
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call for each page.",
                      "example": 30
                    },
                    "to": {
                      "type": "string",
                      "description": "The end time and date of the log",
                      "example": "2021-10-12"
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 54
                    }
                  },
                  "description": "The phone user call logs"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id. <br>\n**Error Code:** `400` <br>\n The next page token is invalid or expired. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n**Error Code:** `3001` <br>\n Error retrieving call logs. <br>\n**Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "deprecated": true,
        "security": [
          {
            "openapi_oauth": [
              "phone:read",
              "phone:read:admin",
              "phone_call_log:read",
              "phone_call_log:read:admin",
              "phone:read:list_call_logs",
              "phone:read:list_call_logs:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:read",
            "phone:read:admin",
            "phone_call_log:read",
            "phone_call_log:read:admin"
          ],
          "x-granular-scopes": [
            "phone:read:list_call_logs",
            "phone:read:list_call_logs:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/call_logs/sync": {
      "get": {
        "tags": ["Call Logs"],
        "summary": "Sync user's call logs",
        "description": "Syncs a user's [Zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) call logs. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`,`phone:read`\n\n**Granular Scopes:** `phone:read:list_call_logs`,`phone:read:list_call_logs:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "syncUserCallLogs",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID.",
            "required": true,
            "schema": { "type": "string", "example": "DnEopNmXQEGU2uvvzjgojw" }
          },
          {
            "name": "sync_type",
            "in": "query",
            "description": "The options for synchronizing call log:  \n \nFSync - Full sync  \n \nISync - Increase sync  \n \nBSync - Backward sync",
            "required": false,
            "schema": {
              "type": "string",
              "example": "FSync",
              "enum": ["FSync", "ISync", "BSync"]
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "example": 50
            }
          },
          {
            "name": "sync_token",
            "in": "query",
            "description": "The time range for returned records. It's used for locating where the next retrieval will begin.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "SDVjM3NHRlNyMF8xNjQwODI3NTkyMzkwXzE2NDgwMTUzNTk0MzI="
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status code:** `200`\nUser call logs returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_logs": {
                      "maxItems": 250,
                      "type": "array",
                      "description": "The call log.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "accepted_by": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "string",
                                "example": "1009"
                              },
                              "location": {
                                "type": "string",
                                "example": "Glendale     CA"
                              },
                              "name": {
                                "type": "string",
                                "example": "Display name"
                              },
                              "number_type": {
                                "type": "integer",
                                "description": "The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.",
                                "example": 1
                              },
                              "phone_number": {
                                "type": "string",
                                "example": "+12055432724"
                              }
                            },
                            "description": "This field indicates who accepted the call."
                          },
                          "answer_start_time": {
                            "type": "string",
                            "description": "The time the call was answered in GMT `date-time` format. The API only displays this response if the `direction` value is `inbound`.",
                            "example": "2021-10-08T16:10:04Z"
                          },
                          "call_end_time": {
                            "type": "string",
                            "description": "The call end time in GMT `date-time` format.",
                            "example": "2021-10-08T16:12:04Z"
                          },
                          "call_id": {
                            "type": "string",
                            "description": "THe unique identifier of the phone call.",
                            "example": "7006926284340112376"
                          },
                          "callee_user_id": {
                            "type": "string",
                            "description": "The callee's user id.",
                            "example": "IqoQmDRqS-aIoXqV_FZ88w"
                          },
                          "callee_country_code": {
                            "type": "string",
                            "description": "The country calling code.",
                            "example": "1"
                          },
                          "callee_country_iso_code": {
                            "type": "string",
                            "description": "The ISO alpha2 country code.",
                            "example": "US"
                          },
                          "callee_did_number": {
                            "type": "string",
                            "description": "The callee's DID (direct inward dial) number in e164 format.",
                            "example": "+12135551234"
                          },
                          "callee_name": {
                            "type": "string",
                            "description": "The contact name of the callee.",
                            "example": "Jan Dev"
                          },
                          "callee_number": {
                            "type": "string",
                            "description": "The number associated with the callee. It can be an e164 number or an extension.",
                            "example": "101"
                          },
                          "callee_number_type": {
                            "type": "integer",
                            "description": "The callee number type:\n* `1` &mdash; Extension number.\n* `2` &mdash; Phone number.\n* `3` &mdash; Customized emergency number.",
                            "example": 1,
                            "enum": [1, 2, 3]
                          },
                          "callee_number_source": {
                            "type": "string",
                            "description": "This field indicates where the phone number comes from:\n* `internal` &mdash; ZP native.\n* `external` &mdash; BYOC or Provider Exchange.\n* `byop` &mdash; Premise peering.\nNot available when `callee_number_type = 1`.",
                            "example": "internal",
                            "enum": ["internal", "external", "byop"]
                          },
                          "caller_user_id": {
                            "type": "string",
                            "description": "The caller's user ID.",
                            "example": "IqoQmDRqS-aIoXqV_FZ88w"
                          },
                          "caller_country_code": {
                            "type": "string",
                            "description": "The country calling code.",
                            "example": "1"
                          },
                          "caller_country_iso_code": {
                            "type": "string",
                            "description": "ISO alpha2 country code.",
                            "example": "US"
                          },
                          "caller_did_number": {
                            "type": "string",
                            "description": "The caller's DID (direct inward dial) number in e164 format.",
                            "example": "+18108001001"
                          },
                          "caller_name": {
                            "type": "string",
                            "description": "The contact name of the caller.",
                            "example": "Zoom"
                          },
                          "caller_number": {
                            "type": "string",
                            "description": "The number associated with the caller. It can be an e164 number or an extension.",
                            "example": "+12095552345"
                          },
                          "caller_number_type": {
                            "type": "integer",
                            "description": "The caller number type: \n* `1` &mdash; Extension number. \n* `2` &mdash; Phone number.",
                            "example": 1,
                            "enum": [1, 2]
                          },
                          "caller_number_source": {
                            "type": "string",
                            "description": "This field indicates where the phone number comes from:\n* `internal` &mdash; ZP native.\n* `external` &mdash; BYOC or Provider Exchange.\n* `byop` &mdash; Premise peering.\nNot available when `caller_number_type = 1`.",
                            "example": "internal",
                            "enum": ["internal", "external", "byop"]
                          },
                          "caller_billing_reference_id": {
                            "type": "string",
                            "description": "The billing reference ID (for peering phone numbers).",
                            "example": "ZoomTelecom123456"
                          },
                          "charge": {
                            "type": "string",
                            "description": "The billing charge for the call.",
                            "example": "$0.0255"
                          },
                          "client_code": {
                            "type": "string",
                            "description": "The client code.",
                            "example": "123"
                          },
                          "date_time": {
                            "type": "string",
                            "description": "The start time of the call.",
                            "example": "2022-01-24T23:58:10Z"
                          },
                          "direction": {
                            "type": "string",
                            "description": "The direction of the call: `inbound`or `outbound`.",
                            "example": "inbound"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The duration of the call in seconds.",
                            "example": 7
                          },
                          "forwarded_by": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "string",
                                "example": "1009"
                              },
                              "extension_type": {
                                "type": "string",
                                "example": "callQueue",
                                "enum": [
                                  "user",
                                  "callQueue",
                                  "commonAreaPhone",
                                  "autoReceptionist",
                                  "sharedLineGroup"
                                ]
                              },
                              "location": {
                                "type": "string",
                                "example": "Glendale     CA"
                              },
                              "name": {
                                "type": "string",
                                "example": "The display name"
                              },
                              "number_type": {
                                "type": "integer",
                                "description": "The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.",
                                "example": 1
                              },
                              "phone_number": {
                                "type": "string",
                                "example": "+12055432724"
                              }
                            },
                            "description": "This field indicates where the call was forwarded from."
                          },
                          "forwarded_to": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "string",
                                "example": "1009"
                              },
                              "location": {
                                "type": "string",
                                "example": "Glendale     CA"
                              },
                              "name": {
                                "type": "string",
                                "example": "Display name"
                              },
                              "number_type": {
                                "type": "integer",
                                "description": "The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.",
                                "example": 1
                              },
                              "phone_number": {
                                "type": "string",
                                "example": "+12055432724"
                              }
                            },
                            "description": "This field indicates who the call was forwarded to."
                          },
                          "has_recording": {
                            "type": "boolean",
                            "description": "Whether the call has a recording. See [announcement](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#deprecation-of-the-has_voicemail-and-has_recording-responses-in-phone-api) from July, 2021.",
                            "example": false,
                            "deprecated": true
                          },
                          "has_voicemail": {
                            "type": "boolean",
                            "description": "Whether the call has a voicemail. See [announcement](https://marketplace.zoom.us/docs/guides/stay-up-to-date/announcements#deprecation-of-the-has_voicemail-and-has_recording-responses-in-phone-api) from July, 2021.",
                            "example": false,
                            "deprecated": true
                          },
                          "id": {
                            "type": "string",
                            "description": "The call log ID.",
                            "example": "11f2bacb-37d8-4ae4-8d88-be657421266f"
                          },
                          "outgoing_by": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "string",
                                "example": "1009"
                              },
                              "location": {
                                "type": "string",
                                "example": "Glendale     CA"
                              },
                              "name": {
                                "type": "string",
                                "example": "Display name"
                              },
                              "number_type": {
                                "type": "integer",
                                "description": "The phone number types: `1` - Extension `2`- E164 number `3` - Custom number.",
                                "example": 1
                              },
                              "phone_number": {
                                "type": "string",
                                "example": "+12055432724"
                              }
                            }
                          },
                          "path": {
                            "type": "string",
                            "description": "The path of the call log.",
                            "example": "callQueue"
                          },
                          "rate": {
                            "type": "string",
                            "description": "The billing rate for the call.",
                            "example": "$0.0255"
                          },
                          "recording_type": {
                            "type": "string",
                            "description": "The recording type. \n\n* `On-demand` recording.\n\n* `Automatic` recording.",
                            "example": "Automatic",
                            "enum": ["OnDemand", "Automatic"]
                          },
                          "result": {
                            "type": "string",
                            "description": "The result of the call: `Missed` | `Voicemail` | `Call connected` | `Rejected` | `Blocked`| `Busy`| `Wrong Number`| `No Answer`| `International Disabled`| `Internal Error`| `Call failed` | `Restricted Number`| `Call Cancel` | `Message`| `Answered by Other Member` | `Call Cancelled` | `Park` | `Parked` | `Blocked by non-GAL` |  `Blocked by info-Barriers` | `Recording Failure`| `Recorded`| `Auto Recorded`.",
                            "example": "Call connected"
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, your sites can be created based on different office locations.",
                                "example": "GNO-CItXQaLhqH3qfPD1kg"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the site where the phone number is assigned.",
                                "example": "Main Site"
                              }
                            }
                          },
                          "user_id": {
                            "type": "string",
                            "description": "The user ID or email.",
                            "example": "IqoQmDRqS-aIoXqV_FZ88w"
                          },
                          "hold_time": {
                            "type": "integer",
                            "description": "The hold time during a call in seconds.",
                            "example": 5
                          },
                          "waiting_time": {
                            "type": "integer",
                            "description": "The time (in seconds) spent waiting for the call to be connected.",
                            "example": 47
                          }
                        }
                      }
                    },
                    "sync_token": {
                      "type": "string",
                      "description": "The time range for returned records. Used for locating where the next retrieval will begin.",
                      "example": "SDVjM3NHRlNyMF8xNjQwODI3NTkyMzkwXzE2NDgwMTUzNTk0MzI="
                    }
                  },
                  "description": "The sync user call logs"
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n The sync token is invalid or expired. <br>\n**Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "deprecated": true,
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read",
              "phone:read:list_call_logs",
              "phone:read:list_call_logs:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin", "phone:read"],
          "x-granular-scopes": [
            "phone:read:list_call_logs",
            "phone:read:list_call_logs:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/call_logs/{callLogId}": {
      "delete": {
        "tags": ["Call Logs"],
        "summary": "Delete a user's call log",
        "description": "Deletes a user's [call log](https://support.zoom.us/hc/en-us/articles/360021114452-Viewing-and-identifying-logs). For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites:** \n* User must belong to a Business or Enterprise account \n* User must have a Zoom Phone license\n\n**Scopes:** `phone:write`,`phone:write:admin`,`phone_call_log:write`,`phone_call_log:write:admin`\n\n**Granular Scopes:** `phone:delete:call_log`,`phone:delete:call_log:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteCallLog",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user.",
            "required": true,
            "schema": { "type": "string", "example": "DnEopNmXQEGU2uvvzjgojw" }
          },
          {
            "name": "callLogId",
            "in": "path",
            "description": "The unique identifier of the call log. The value for this field can be retrieved from [account's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/accountCallLogs) or [user's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/phoneUserCallLogs).",
            "required": true,
            "schema": {
              "type": "string",
              "example": "c106fda5-7320-46cb-a5d2-7c73a2173d2f"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code**: `204` \n\nLog deleted.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id. <br>\n**Error Code:** `124` <br>\n Invalid access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Call log information was not found for the following callLogId: {0}. <br>\n**Error Code:** `2001` <br>\n The account (accountId: {0}) does not exist. <br>\n**Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "deprecated": true,
        "security": [
          {
            "openapi_oauth": [
              "phone:write",
              "phone:write:admin",
              "phone_call_log:write",
              "phone_call_log:write:admin",
              "phone:delete:call_log",
              "phone:delete:call_log:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:write",
            "phone:write:admin",
            "phone_call_log:write",
            "phone_call_log:write:admin"
          ],
          "x-granular-scopes": [
            "phone:delete:call_log",
            "phone:delete:call_log:admin"
          ]
        }
      }
    },
    "/phone/call_queues": {
      "get": {
        "tags": ["Call Queues"],
        "summary": "List call queues",
        "description": "Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.\n Use this API to list Call queues.\n\n\n**Prerequisites:**\n\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_call_queues:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listCallQueues",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned from a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "Unique identifier of the site. Get it from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.",
            "required": false,
            "schema": { "type": "string", "example": "8f71O6rWT8KFUGQmJIFAdQ" }
          },
          {
            "name": "cost_center",
            "in": "query",
            "description": "The call queue's cost center.",
            "required": false,
            "schema": { "type": "string", "example": "CQ cost center" }
          },
          {
            "name": "department",
            "in": "query",
            "description": "The call queue's department.",
            "required": false,
            "schema": { "type": "string", "example": "Phone department" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nCall Queues listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_queues": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "extension_id": {
                            "type": "string",
                            "description": "The extension ID.",
                            "example": "DgKe5UPTTlODBvcgmRIlPw"
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "The extension number assigned to the queue.",
                            "format": "int64",
                            "example": 26000026001
                          },
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the call queue.",
                            "example": "3PNsZB50TNev4pgBjtKeDw"
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the Call Queue.",
                            "example": "ApiTA_2020_12_21_19_54_05_476"
                          },
                          "phone_numbers": {
                            "type": "array",
                            "description": "Phone number(s) assigned to the call queue.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "Unique identifier of the assigned phone number.",
                                  "example": "KsxwNLEhQ0SJ4U4Bor4ShA"
                                },
                                "number": {
                                  "type": "string",
                                  "description": "The phone number.",
                                  "example": "+12058945717"
                                },
                                "source": {
                                  "type": "string",
                                  "description": "Source",
                                  "example": "internal",
                                  "enum": ["internal", "external"]
                                }
                              }
                            }
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the Call Queue is assigned. ",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                                "example": "Main Site"
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of the Call Queue.\n`active`: Call queue is enabled and active.\n`inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.",
                            "example": "active",
                            "enum": ["active", "inactive"]
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "OvrVMfenVmKgsH0SqfWQ2jgUsHFGXeanCB2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned from a single API call.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records found for this query.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_call_queues:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_call_queues:admin"]
        }
      },
      "post": {
        "tags": ["Call Queues"],
        "summary": "Create a call queue",
        "description": "[Creates a call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues#h_e81faeeb-9184-429a-aaea-df49ff5ff413). Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service, and so on.\n You can add phone users or common areas to call queues.\n\n**Prerequisites:**\n\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:call_queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createCallQueue",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name", "site_id"],
                "type": "object",
                "properties": {
                  "cost_center": {
                    "type": "string",
                    "description": "The cost center name.",
                    "example": "testCostCenter"
                  },
                  "department": {
                    "type": "string",
                    "description": "The department name.",
                    "example": "testDepartment"
                  },
                  "description": {
                    "maxLength": 32,
                    "type": "string",
                    "description": "The description for the call queue.",
                    "example": "testDescription"
                  },
                  "extension_number": {
                    "type": "integer",
                    "description": "The phone extension number for the site.\n\n\nIf a site code has been [assigned](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number instead of the original extension number.",
                    "format": "int64",
                    "example": 10
                  },
                  "members": {
                    "type": "object",
                    "properties": {
                      "common_area_ids": {
                        "maxItems": 10,
                        "type": "array",
                        "description": "**Optional**\n\n The unique identifier of the [common area](https://marketplace.zoom.us/docs/api-reference/phone/methods/#operation/listCommonAreas). This can be retrieved from the [List Common Areas](https://developers.zoom.us/docs/api/rest/reference/phone/methods/#operation/listCommonAreas) API.",
                        "items": {
                          "type": "string",
                          "example": "1pegM6NlSfCEP_jBCfX94A"
                        }
                      },
                      "users": {
                        "maxItems": 10,
                        "type": "array",
                        "description": "The object of the user. It provides either the 'id' (userId) field or the 'email address' of the user.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "The email address of the user. It can be retrieved from the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/methods#operation/users) API.",
                              "format": "email",
                              "example": "2021050800001@testapi.com"
                            },
                            "id": {
                              "type": "string",
                              "description": "The user ID. It can be retrieved from the [List users](https://marketplace.zoom.us/docs/api-reference/zoom-api/methods#operation/users) API.",
                              "example": "dksc_wq67sach2_3jxs"
                            }
                          }
                        }
                      }
                    },
                    "description": "A list of one or more phone users to be included in the call queue. It provides either users or common area(s), or at least one user in the users object."
                  },
                  "name": {
                    "maxLength": 32,
                    "minLength": 1,
                    "type": "string",
                    "description": "The name of the call queue.",
                    "example": "callhandling0001_Not_Delete"
                  },
                  "site_id": {
                    "type": "string",
                    "description": "The unique identifier of the site. It's required only if [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) have been enabled. This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.",
                    "example": "lA68sMSVQ6GAUcGg_GH0nQ"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**\n\nCall queue created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "extension_number": {
                      "type": "integer",
                      "description": "The extension number assigned for the call queue.",
                      "format": "int64",
                      "example": 26000026010
                    },
                    "id": {
                      "type": "string",
                      "description": "The unique identifier of the call queue.",
                      "example": "IU8_1qAGS1Gf-3e56B_1Lw"
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the call queue.",
                      "example": "callhandling0001_Not_Delete"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the call queue.\n\n`active`: Call queue is enabled and active.\n\n`inactive`: Call queue is inactive. Inactive call queues cannot be called but will retain its settings and appear in the [Call Queues](https://zoom.us/pbx/page/telephone/groups#/groups) page.",
                      "example": "active"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation Failed.\n\nMultiple Site is disabled.\n\nSite does not exist.\n {extensionNumber} is out of range\n Exceeded the maximum number to add members per time <br>\n**Error Code:** `400` <br>\n Invalid short number length.\n Extension number {extensionNumber} is already used. <br>\n**Error Code:** `412` <br>\n The maximum number of Call Queue members is up to {maxSize}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User not found: {userId} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:call_queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:call_queue:admin"]
        }
      }
    },
    "/phone/call_queues/{callQueueId}": {
      "get": {
        "tags": ["Call Queues"],
        "summary": "Get call queue details",
        "description": "Routes incoming calls to a group of users and returns information on a specific call queue. \n\nFor instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service, and so on. \n\n\n \n**Prerequisites:**\n\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:call_queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getACallQueue",
        "parameters": [
          {
            "name": "callQueueId",
            "in": "path",
            "description": "The unique identifier of the call queue. You can retrieve it from the [List Call Queues API](https://marketplace.zoom.us/docs/api-reference/zoom-api/phone-call-queues/listcallqueues).",
            "required": true,
            "schema": { "type": "string", "example": "3PNsZB50TNev4pgBjtKeDw" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nCall Queue details retrieved successfully. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cost_center": {
                      "type": "string",
                      "description": "The name of the cost center.",
                      "example": "testCostCenter"
                    },
                    "department": {
                      "type": "string",
                      "description": "The name of the department.",
                      "example": "testDepartment"
                    },
                    "extension_id": {
                      "type": "string",
                      "description": "The extension ID.",
                      "example": "DgKe5UPTTlODBvcgmRIlPw"
                    },
                    "extension_number": {
                      "type": "integer",
                      "description": "The extension number assigned to the call queue.",
                      "format": "int64",
                      "example": 26000026001
                    },
                    "id": {
                      "type": "string",
                      "description": "The unique identifier of the call queue.",
                      "example": "3PNsZB50TNev4pgBjtKeDw"
                    },
                    "members": {
                      "type": "object",
                      "properties": {
                        "users": {
                          "maxItems": 300,
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The unique identifier of the user.",
                                "example": "yNCY-HBHQ36rkXEXYTwu2g"
                              },
                              "level": {
                                "type": "string",
                                "description": "The level of the user. The value can be one of the following:\n\n`manager`: A call queue manager has the privilege to change call queue settings, policy settings and manage recordings and voicemail inbox. There can only be one manager for each call queue.\n\n\n`user`: Regular user without the privileges of a manager.",
                                "example": "user",
                                "enum": ["manager", "user"]
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the user.",
                                "example": "APITA AUTO"
                              },
                              "receive_call": {
                                "type": "boolean",
                                "description": "Whether the user can receive calls or not.",
                                "example": true
                              },
                              "extension_id": {
                                "type": "string",
                                "description": "The extension ID of the user.",
                                "example": "oeDyBe8zT2SzOZW6gQJXUA"
                              }
                            }
                          }
                        },
                        "common_areas": {
                          "maxItems": 300,
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The unique identifier of the common area.",
                                "example": "HIlHzOEzS8ymQPFBZ-39AQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the common area.",
                                "example": "Common Area"
                              },
                              "extension_id": {
                                "type": "string",
                                "description": "The extension ID of common area.",
                                "example": "HIlHzOEzS8ymQPFBZ-39AQ"
                              }
                            }
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the call queue.",
                      "example": "ApiTA_2020_12_21_19_54_05_476"
                    },
                    "phone_numbers": {
                      "maxItems": 50,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the number.",
                            "example": "KsxwNLEhQ0SJ4U4Bor4ShA"
                          },
                          "number": {
                            "type": "string",
                            "description": "The phone number.",
                            "example": "+12058945717"
                          },
                          "source": {
                            "type": "string",
                            "description": "The source.",
                            "example": "internal",
                            "enum": ["internal", "external"]
                          }
                        }
                      }
                    },
                    "site": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the call queue is assigned.",
                          "example": "lA68sMSVQ6GAUcGg_GH0nQ"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                          "example": "ApiTA_Site_2020_07_12_00_42_50_109"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the call queue.",
                      "example": "active",
                      "enum": ["active", "inactive"]
                    },
                    "policy": {
                      "type": "object",
                      "properties": {
                        "voicemail_access_members": {
                          "maxItems": 50,
                          "uniqueItems": true,
                          "type": "array",
                          "description": "The shared voicemail access member list.",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "access_user_id": {
                                    "type": "string",
                                    "description": "The Zoom user ID or email to share or update the access permissions with.",
                                    "example": "w0RChiauQeqRlv5fgxYULQ"
                                  },
                                  "allow_download": {
                                    "type": "boolean",
                                    "description": "Whether the member has download permissions. The default is **false**.",
                                    "example": false
                                  },
                                  "allow_delete": {
                                    "type": "boolean",
                                    "description": "Whether the member has delete permissions. The default is **false**.",
                                    "example": false
                                  },
                                  "allow_sharing": {
                                    "type": "boolean",
                                    "description": "Whether the member has the permission to share. The default is **false**.",
                                    "example": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "shared_id": {
                                    "type": "string",
                                    "description": "The shared voicemail ID.",
                                    "example": "--e8ugg0SeS-9clgrDkn2w"
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "description": "The call queue policy list."
                    },
                    "timezone": {
                      "type": "string",
                      "description": "[Timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) of the Call Queue.",
                      "example": "Pacific/Midway"
                    },
                    "audio_prompt_language": {
                      "type": "string",
                      "description": "The language for all default audio prompts for the Call Queue. \n* `en-US` : English (US) \n* `en-GB` : English (UK) \n* `es-US` : Spanish (US) \n* `fr-CA` : French (Canada) \n* `da-DK` : Danish (Denmark) \n* `de-DE` : German (Germany) \n* `es-ES` : Spanish (Spain) \n* `fr-FR` : French (France) \n* `it-IT` : Italian (Italy) \n* `nl-NL` : Dutch (Netherlands) \n* `pt-PT` : Portuguese (Portugal) \n* `ja` : Japanese \n* `ko-KR` : Korean (Korea) \n* `pt-BR` : Portuguese (Brazil) \n* `zh-CN` : Chinese (PRC)",
                      "example": "en-US",
                      "enum": [
                        "en-US",
                        "en-GB",
                        "es-US",
                        "fr-CA",
                        "da-DK",
                        "de-DE",
                        "es-ES",
                        "fr-FR",
                        "it-IT",
                        "nl-NL",
                        "pt-PT",
                        "ja",
                        "ko-KR",
                        "pt-BR",
                        "zh-CN"
                      ]
                    },
                    "recording_storage_location": {
                      "type": "string",
                      "description": "Where recording will be stored. Recording includes Phone recordings, voicemail, voicemail transcripts, and custom greeting prompts. \n* `US` : United States \n* `AU` : Australia \n* `CA` : Canada \n* `DE` : Germany \n* `IN` : India \n* `JP` : Japan \n* `SG` : Singapore \n* `BR` : Brazil \n* `CN` : China \n* `MX` : Mexico \n\n<b>Note:</b> \n* If the setting is locked at the Account level, it can't be updated.",
                      "example": "US",
                      "enum": [
                        "US",
                        "AU",
                        "CA",
                        "DE",
                        "IN",
                        "JP",
                        "SG",
                        "BR",
                        "CN",
                        "MX"
                      ]
                    },
                    "own_storage_name": {
                      "type": "string",
                      "description": "The name of your own storage. Use your own storage provided by Oracle Cloud Infrastructure (OCI) to store Zoom Phone recordings, voicemails, and voicemail transcripts, and custom greeting prompts.",
                      "example": "us-oracle-storage"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n The group does not exist, groupId:{callQueueId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:call_queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:call_queue:admin"]
        }
      },
      "delete": {
        "tags": ["Call Queues"],
        "summary": "Delete a call queue",
        "description": "Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service etc.\n Use this API to delete a Call Queue.\n \n**Prerequisites:**\n\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:call_queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteACallQueue",
        "parameters": [
          {
            "name": "callQueueId",
            "in": "path",
            "description": "Unique identifier of the call queue.",
            "required": true,
            "schema": { "type": "string", "example": "3PNsZB50TNev4pgBjtKeDw" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nCall Queue deleted successfully. "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nThe group does not exist, groupId:{callQueueId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:call_queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:call_queue:admin"]
        }
      },
      "patch": {
        "tags": ["Call Queues"],
        "summary": "Update call queue details",
        "description": "Updates information of a specific call queue. Call queues allow you to route incoming calls to a group of users. For instance, you can use call queues to route calls to various departments in your organization such as sales, engineering, billing, customer service, and so on.\n  \n**Prerequisites:**\n\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:call_queue:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateCallQueue",
        "parameters": [
          {
            "name": "callQueueId",
            "in": "path",
            "description": "The call queue ID.",
            "required": true,
            "schema": { "type": "string", "example": "3PNsZB50TNev4pgBjtKeDw" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "cost_center": {
                    "type": "string",
                    "description": "The cost center name.",
                    "example": "Cost center"
                  },
                  "department": {
                    "type": "string",
                    "description": "The department name.",
                    "example": "Department"
                  },
                  "description": {
                    "maxLength": 32,
                    "type": "string",
                    "description": "The description for the call queue.",
                    "example": "Description"
                  },
                  "extension_number": {
                    "type": "integer",
                    "description": "The phone extension number for the site.\n\n\nIf a site code has been [assigned](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number instead of the original extension number.",
                    "format": "int64",
                    "example": 10
                  },
                  "name": {
                    "maxLength": 32,
                    "type": "string",
                    "description": "The name of the call queue.",
                    "example": "Call Queue"
                  },
                  "site_id": {
                    "type": "string",
                    "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) where the call queue is assigned.",
                    "example": "8f71O6rWT8KFUGQmJIFAdQ"
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the call queue. Allowed values:\n\n`active`\n\n`inactive`",
                    "example": "active",
                    "enum": ["active", "inactive"]
                  },
                  "timezone": {
                    "type": "string",
                    "description": "The [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) of the call queue.",
                    "example": "Pacific/Midway"
                  },
                  "audio_prompt_language": {
                    "type": "string",
                    "description": "The language for all default audio prompts for the Call Queue. \n* `en-US` : English (US) \n* `en-GB` : English (UK) \n* `es-US` : Spanish (US) \n* `fr-CA` : French (Canada) \n* `da-DK` : Danish (Denmark) \n* `de-DE` : German (Germany) \n* `es-ES` : Spanish (Spain) \n* `fr-FR` : French (France) \n* `it-IT` : Italian (Italy) \n* `nl-NL` : Dutch (Netherlands) \n* `pt-PT` : Portuguese (Portugal) \n* `ja` : Japanese \n* `ko-KR` : Korean (Korea) \n* `pt-BR` : Portuguese (Brazil) \n* `zh-CN` : Chinese (PRC)",
                    "example": "en-US",
                    "enum": [
                      "en-US",
                      "en-GB",
                      "es-US",
                      "fr-CA",
                      "da-DK",
                      "de-DE",
                      "es-ES",
                      "fr-FR",
                      "it-IT",
                      "nl-NL",
                      "pt-PT",
                      "ja",
                      "ko-KR",
                      "pt-BR",
                      "zh-CN"
                    ]
                  },
                  "recording_storage_location": {
                    "type": "string",
                    "description": "Where the recording will be stored. Recording includes phone recordings, voicemails, voicemail transcripts, and custom greeting prompts. \n* `US` : United States \n* `AU` : Australia \n* `CA` : Canada \n* `DE` : Germany \n* `IN` : India \n* `JP` : Japan \n* `SG` : Singapore \n* `BR` : Brazil \n* `CN` : China \n* `MX` : Mexico \n\n<b>Note:</b> \n* If the setting is locked at the Account Level, it can't be updated.",
                    "example": "US",
                    "enum": [
                      "US",
                      "AU",
                      "CA",
                      "DE",
                      "IN",
                      "JP",
                      "SG",
                      "BR",
                      "CN",
                      "MX"
                    ]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nCall Queue details updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation Failed. The group does not exist, groupId:{groupId}\n\nTimezone not found in the system. <br>\n**Error Code:** `400` <br>\n Unable to update this call queue as it is used for internal safety response team. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:call_queue:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:call_queue:admin"]
        }
      }
    },
    "/phone/call_queues/{callQueueId}/members": {
      "get": {
        "tags": ["Call Queues"],
        "summary": "List call queue members",
        "description": "Returns a list of call queue members.\n\n\n**Prerequisites:**\n\n* Pro, Business, or Education account\n* Account owner or admin permissions\n* Zoom Phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_call_queue_members:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listCallQueueMembers",
        "parameters": [
          {
            "name": "callQueueId",
            "in": "path",
            "description": "The call queue ID that is retrievable from the [List Call Queues](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Call-Queues/operation/listCallQueues) API.",
            "required": true,
            "schema": { "type": "string", "example": "3PNsZB50TNev4pgBjtKeDw" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nCall Queue members listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_queue_members": {
                      "maxItems": 300,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The member ID.",
                            "example": "yNCY-HBHQ36rkXEXYTwu2g"
                          },
                          "level": {
                            "type": "string",
                            "description": "The level of the member.",
                            "example": "user",
                            "enum": ["commonArea", "user"]
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the user or common area.",
                            "example": "APITA AUTO"
                          },
                          "receive_call": {
                            "type": "boolean",
                            "description": "Whether the user can receive calls. It displays if the level is user.",
                            "example": true
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "The extension ID of the user or common area.",
                            "example": "oeDyBe8zT2SzOZW6gQJXUA"
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "OvrVMfenVmKgsH0SqfWQ2jgUsHFGXeanCB2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned from a single API call.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records found for this query.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_call_queue_members:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_call_queue_members:admin"]
        }
      },
      "post": {
        "tags": ["Call Queues"],
        "summary": "Add members to a call queue",
        "description": "Adds phone users or [common areas](https://support.zoom.us/hc/articles/4481136653709) as members to a specific call queue.\n\n**Prerequisites:**\n* Pro or higher account plan.\n* Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:call_queue_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "addMembersToCallQueue",
        "parameters": [
          {
            "name": "callQueueId",
            "in": "path",
            "description": "The call queue ID.",
            "required": true,
            "schema": { "type": "string", "example": "3PNsZB50TNev4pgBjtKeDw" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "members": {
                    "type": "object",
                    "properties": {
                      "common_area_ids": {
                        "maxItems": 10,
                        "type": "array",
                        "description": "**Optional**\n\n The unique identifier of the [Common Area](https://marketplace.zoom.us/docs/api-reference/phone/methods/#operation/listCommonAreas). You can retrieve it from the List Common Areas API.",
                        "items": {
                          "type": "string",
                          "example": "iewGNg-LSYa0ghhkr4d0Hg"
                        }
                      },
                      "users": {
                        "maxItems": 10,
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "The email address of the user.",
                              "format": "email",
                              "example": "callhandling0001@testapi.com"
                            },
                            "id": {
                              "type": "string",
                              "description": "The user ID or the unique identifier of the user.",
                              "example": "wh23uihdqw-43iwdn"
                            }
                          }
                        }
                      }
                    },
                    "description": "A maximum of 10 members can be added at a time."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**\n\nMembers added successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation Failed. The group does not exist, groupId:{callQueueId}.\n\nExceeded the maximum number to add members per time. <br>\n**Error Code:** `412` <br>\n The maximum number of Call Queue members is up to {maxSize}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User not found: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:call_queue_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:call_queue_member:admin"]
        }
      },
      "delete": {
        "tags": ["Call Queues"],
        "summary": "Unassign all members",
        "description": "Removes all members from a call queue who were previously assigned to that call queue. The members could be phone users or [common areas](https://support.zoom.us/hc/articles/4481136653709).\n\n**Prerequisites:**\n\n* Pro or higher account plan.\n* Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:call_queue_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "unassignAllMembers",
        "parameters": [
          {
            "name": "callQueueId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "3PNsZB50TNev4pgBjtKeDw" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nMember unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nValidation Failed. The group does not exist, groupId:{callQueueId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:call_queue_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:call_queue_member:admin"]
        }
      }
    },
    "/phone/call_queues/{callQueueId}/members/{memberId}": {
      "delete": {
        "tags": ["Call Queues"],
        "summary": "Unassign a member",
        "description": "Removes a member who was previously added to a call queue. The member could be a phone user or common area. Note that you cannot use this API to unassign a call queue manager. \n\n**Prerequisites:**\n\n* Pro or higher account plan.\n* Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:call_queue_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "unassignMemberFromCallQueue",
        "parameters": [
          {
            "name": "callQueueId",
            "in": "path",
            "description": "Unique identifier of the Call Queue from which the member needs to be unassigned.",
            "required": true,
            "schema": { "type": "string", "example": "3PNsZB50TNev4pgBjtKeDw" }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "Unique identifier of the member who needs to be unassigned.",
            "required": true,
            "schema": { "type": "string", "example": "JpjPXizWTz-l35tFRUK3Gg" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nMember unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nValidation Failed. The group does not exist, groupId:{callQueueId}.\n\n**Error Code:** `400` <br>\nUnable to delete manager\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:call_queue_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:call_queue_member:admin"]
        }
      }
    },
    "/phone/call_queues/{callQueueId}/phone_numbers": {
      "post": {
        "tags": ["Call Queues"],
        "summary": "Assign numbers to a call queue",
        "description": "Assigns numbers to a call queue. After [buying phone number(s)](https://support.zoom.us/hc/en-us/articles/360020808292#h_007ec8c2-0914-4265-8351-96ab23efa3ad), you can assign it and allow callers to directly dial a number to reach a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).\n\n**Prerequisites:**\n- Pro or higher account plan\n* Account owner or admin permissions\n- Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:call_queue_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "assignPhoneToCallQueue",
        "parameters": [
          {
            "name": "callQueueId",
            "in": "path",
            "description": "The unique identifier of the call queue.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone_numbers": {
                    "maxItems": 50,
                    "type": "array",
                    "description": "This field provides either the `id` or the `number` field. Only a maximum of five numbers can be assigned to a call queue at a time.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The unique identifier of the phone number.",
                          "example": "MbXwdYC0R3GsbUy4iJ7IbQ"
                        },
                        "number": {
                          "type": "string",
                          "description": "The phone number.",
                          "example": "+12058945456"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Call Queue does not exist: {callQueueId}. <br>\n**Error Code:** `400` <br>\n Need to specify at least one phone number <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:call_queue_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:call_queue_number:admin"]
        }
      },
      "delete": {
        "tags": ["Call Queues"],
        "summary": "Unassign all phone numbers",
        "description": "Unbinds all phone numbers that are assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).  After successful unbinding, the numbers will appear in the [Unassigned tab](https://zoom.us/signin#/numbers/unassigned).\n \n If you only need to unassign a specific phone number, use the Unassign a Phone Number API instead. \n\n**Prerequisites:**\n* Pro or higher account palan\n* Account owner or admin permissions\n* Zoom Phone license \n\n \n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:call_queue_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "unassignAPhoneNumCallQueue",
        "parameters": [
          {
            "name": "callQueueId",
            "in": "path",
            "description": "The unique identifier of the call queue.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nPhone numbers unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation Failed. The group does not exist, groupId:{callQueueId} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:call_queue_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:call_queue_number:admin"]
        }
      }
    },
    "/phone/call_queues/{callQueueId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "tags": ["Call Queues"],
        "summary": "Unassign a phone number",
        "description": "Unbinds a phone number from a call queue. After assigning a phone number, you can unbind it if you don't want it to be assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).  After successful unbinding, the number will appear in the [Unassigned tab](https://zoom.us/signin#/numbers/unassigned).\n\n\n**Prerequisites:**\n* Pro or higher account palan\n* Account owner or admin permissions\n* Zoom Phone license \n\n \n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:call_queue_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "unAssignPhoneNumCallQueue",
        "parameters": [
          {
            "name": "callQueueId",
            "in": "path",
            "description": "The unique identifier of the call queue.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          },
          {
            "name": "phoneNumberId",
            "in": "path",
            "description": "The phone number ID. ",
            "required": true,
            "schema": { "type": "string", "example": "MbXwdYC0R3GsbUy4iJ7IbQ" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nPhone Number unassigned successfuly."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation failed. The group does not exist, groupId:{callQueueId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Phone number not belong to call queue. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:call_queue_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:call_queue_number:admin"]
        }
      }
    },
    "/phone/call_queues/{callQueueId}/policies/{policyType}": {
      "post": {
        "tags": ["Call Queues"],
        "summary": "Add a policy setting to a call queue",
        "description": "Use this API to add the policy sub-setting for a specific [call queue](https://support.zoom.us/hc/en-us/articles/360021524831) according to the `policyType`. For example, you can use this API to set up shared access members. \n\n**Prerequisites:** \n* Pro or higher account with Zoom Phone license.\n* Account owner or admin privileges \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:call_queue_policy:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addCQPolicySubSetting",
        "parameters": [
          {
            "name": "callQueueId",
            "in": "path",
            "description": "The call queue ID, retrievable the [List Call Queues](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Call-Queues/operation/listCallQueues) API.",
            "required": true,
            "schema": { "type": "string", "example": "3PNsZB50TNev4pgBjtKeDw" }
          },
          {
            "name": "policyType",
            "in": "path",
            "description": "The policy sub-setting item that you wish to add. Allowed values: `voice_mail`.",
            "required": true,
            "schema": { "type": "string", "example": "voice_mail" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "voicemail_access_members": {
                    "uniqueItems": true,
                    "type": "array",
                    "description": "The shared voicemail access member list. The number is limited to the minimum value of 10 or the number of allowed access members account setting",
                    "items": {
                      "type": "object",
                      "properties": {
                        "access_user_id": {
                          "type": "string",
                          "description": "The Zoom user ID or email to share or update the access permissions with.",
                          "example": "w0RChiauQeqRlv5fgxYULQ"
                        },
                        "allow_download": {
                          "type": "boolean",
                          "description": "Specifies whether the member has download permissions. The default is **false**.",
                          "example": false
                        },
                        "allow_delete": {
                          "type": "boolean",
                          "description": "Specifies whether the member has delete permissions. The default is **false**.",
                          "example": false
                        },
                        "allow_sharing": {
                          "type": "boolean",
                          "description": "Specifies whether the member has the permission to share. The default is **false**.",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code** `201`   \n \nCreated Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "voicemail_access_members": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "The shared access member list.",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "access_user_id": {
                                "type": "string",
                                "description": "The Zoom user ID or email to share or update the access permissions with.",
                                "example": "w0RChiauQeqRlv5fgxYULQ"
                              },
                              "allow_download": {
                                "type": "boolean",
                                "description": "Specifies whether the member has download permissions. The default is **false**.",
                                "example": false
                              },
                              "allow_delete": {
                                "type": "boolean",
                                "description": "Specifies whether the member has delete permissions. The default is **false**.",
                                "example": false
                              },
                              "allow_sharing": {
                                "type": "boolean",
                                "description": "Specifies whether the member has the permission to share. The default is **false**.",
                                "example": false
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "shared_id": {
                                "type": "string",
                                "description": "The shared voicemail ID.",
                                "example": "--e8ugg0SeS-9clgrDkn2w"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:call_queue_policy:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:call_queue_policy:admin"]
        }
      },
      "delete": {
        "tags": ["Call Queues"],
        "summary": "Delete a CQ policy setting",
        "description": "Use this API to remove the policy sub-setting for a specific [call queue](https://support.zoom.us/hc/en-us/articles/360021524831) according to the `policyType`. For example, you can use this API to remove shared access members. \n\n**Prerequisites:** \n* Pro or higher account with Zoom Phone license.\n* Account owner or admin privileges \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:call_queue_policy:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "removeCQPolicySubSetting",
        "parameters": [
          {
            "name": "callQueueId",
            "in": "path",
            "description": "The call queue ID, retrievable from the [List Call Queues](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Call-Queues/operation/listCallQueues) API.",
            "required": true,
            "schema": { "type": "string", "example": "3PNsZB50TNev4pgBjtKeDw" }
          },
          {
            "name": "policyType",
            "in": "path",
            "description": "Corresponds to tbe policy sub-setting item you wish to remove. Allowed values: `voice_mail`",
            "required": true,
            "schema": { "type": "string", "example": "voice_mail" }
          },
          {
            "name": "shared_ids",
            "in": "query",
            "description": "Comma separated list of shared IDs to remove. The number is limited to the minimum value of 10 or the number of allowed access members account setting.",
            "required": true,
            "schema": {
              "maxItems": 20,
              "type": "array",
              "example": "8_RkKw9OQ42oYsXqJJjs4A,4_RkKw9OQ42oYsXqJJjs4A",
              "items": { "type": "string", "example": "8_RkKw9OQ42oYsXqJJjs4A" }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content  \n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:call_queue_policy:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:call_queue_policy:admin"]
        }
      },
      "patch": {
        "tags": ["Call Queues"],
        "summary": "Update a call queue's policy subsetting",
        "description": "Updates the policy subsetting for a specific [call queue](https://support.zoom.us/hc/en-us/articles/360021524831) according to the `policyType`. For example, you can use this API to update shared access members.\n\n**Prerequisites:** \n* Pro or higher account with Zoom Phone license.\n* Account owner or admin privileges \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:call_queue_policy:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateCQPolicySubSetting",
        "parameters": [
          {
            "name": "callQueueId",
            "in": "path",
            "description": "The call queue ID that is retrievable from the [List Call Queues](https://developers.zoom.us/docs/api/rest/reference/phone/methods/#operation/listCallQueues) API.",
            "required": true,
            "schema": { "type": "string", "example": "3PNsZB50TNev4pgBjtKeDw" }
          },
          {
            "name": "policyType",
            "in": "path",
            "description": "The field that corresponds to the policy sub-setting item you wish to update. Allowed values: `voice_mail`.",
            "required": true,
            "schema": { "type": "string", "example": "voice_mail" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "voicemail_access_members": {
                    "maxItems": 50,
                    "type": "array",
                    "description": "The shared voicemail access member list. The maximum number of allowed access members follows the setting in your account.",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "access_user_id": {
                              "type": "string",
                              "description": "The Zoom user ID or email of which to share or update the access permissions.",
                              "example": "w0RChiauQeqRlv5fgxYULQ"
                            },
                            "allow_download": {
                              "type": "boolean",
                              "description": "Whether the member has download permissions. The default is **false**.",
                              "example": false
                            },
                            "allow_delete": {
                              "type": "boolean",
                              "description": "Whether the member has delete permissions. The default is **false**.",
                              "example": false
                            },
                            "allow_sharing": {
                              "type": "boolean",
                              "description": "Whether the member has the permission to share. The default is **false**.",
                              "example": false
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "shared_id": {
                              "type": "string",
                              "description": "The shared voicemail ID.",
                              "example": "--e8ugg0SeS-9clgrDkn2w"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   No Content.   "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:call_queue_policy:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:call_queue_policy:admin"]
        }
      }
    },
    "/phone/call_queues/{callQueueId}/recordings": {
      "get": {
        "tags": ["Call Queues"],
        "summary": "Get call queue recordings",
        "description": "Use this API to view [call recordings](https://support.zoom.us/hc/en-us/articles/360038521091#h_cbc9f2a3-e06c-4daa-83d4-ddbceef9c77b) from the call queue.\n\n\n**Prerequisites:**\n\n* Pro or higher account with Zoom Phone license.\n* [Automatic call recordings](https://support.zoom.us/hc/en-us/articles/360033511872#h_fcb297bb-14e8-4094-91ca-dc61e1a18734) must be enabled in the Policy Settings for call queues. \n \n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_call_queue_recordings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "getCallQueueRecordings",
        "parameters": [
          {
            "name": "callQueueId",
            "in": "path",
            "description": "Unique identifier of the Call Queue.",
            "required": true,
            "schema": { "type": "string", "example": "3PNsZB50TNev4pgBjtKeDw" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data. The month defined should fall within the last six months. If unspecified, returns data within the 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-10-31"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "description": "Start date.",
                      "example": "2022-03-26"
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "OvrVMfenVmKgsH0SqfWQ2jgUsHFGXeanCB2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30
                    },
                    "recordings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "callee_name": {
                            "type": "string",
                            "description": "Contact name of the callee.",
                            "example": "APITA AUTO"
                          },
                          "callee_number": {
                            "type": "string",
                            "description": "Number of the callee.",
                            "example": "+12058945717"
                          },
                          "callee_number_type": {
                            "type": "string",
                            "description": "The callee's number type: \n* `1` &mdash; Internal number. \n* `2` &mdash; External number.\n* `3` &mdash; Customized emergency number.",
                            "example": "1",
                            "enum": ["1", "2", "3"]
                          },
                          "caller_name": {
                            "type": "string",
                            "description": "Name of the caller.",
                            "example": "ZOOM_API Test"
                          },
                          "caller_number": {
                            "type": "string",
                            "description": "Phone number of the caller.",
                            "example": "+12055432724"
                          },
                          "caller_number_type": {
                            "type": "integer",
                            "description": "The caller's number type: \n* `1` &mdash; Internal number. \n* `2` &mdash; External number.",
                            "example": 1,
                            "enum": [1, 2]
                          },
                          "date_time": {
                            "type": "string",
                            "description": "Date of the recording.",
                            "format": "date",
                            "example": "2022-04-01"
                          },
                          "direction": {
                            "type": "string",
                            "description": "Direction of call. The value of this field can be either `outbound` or `inbound`.",
                            "example": "inbound"
                          },
                          "download_url": {
                            "type": "string",
                            "description": "URL using which the recording can be downloaded.",
                            "example": "https://file.zoomdev.us/file?filename=call_recording_080e-2cba-4315-a963-81ce9635e_20220401031509.mp3&jwt=eyJhbGciNiJ9.eyJka0NzZiNjQyYjhkZjRlN2E3ZTgxNjU4MmEzMWQ4NjE3NjkyNjNjYmQ0NDJhM2QzYzY3NTZjIiwiaXNzIjoiwiYXVkIjoiZmlsZSIsImlhdCI6MTY0ODV4cCI6MTY0ODc4NTMxN30.azPOfIrODv6v6-7YWwvBWAqysJy_xe_FAI&path=zoomfs%3A%2F%2Fpbx-voice%2Frecording%2F2022%2F4%2F1%2FKxQKamXhQfWQs9BPdvDagA%2F8dunF6uUT1qW3KEe0sgaXA%2F08096c0e-2cba-4315-a963-81=e9635e%2Fcall_recording_080=c0e-2cba-4315-a963-813=635e_20220401031509.mp3"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "Duration of the call.",
                            "example": 10
                          },
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the recording.",
                            "example": "08096c0e2cba4315a963813d1ce9635e"
                          }
                        }
                      }
                    },
                    "to": {
                      "type": "string",
                      "description": "End date.",
                      "example": "2022-04-1"
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned for this API call.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_call_queue_recordings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_call_queue_recordings:admin"]
        }
      }
    },
    "/phone/carrier_reseller/numbers": {
      "get": {
        "tags": ["Carrier Reseller"],
        "summary": "List phone numbers",
        "description": "Use this API to list phone numbers in a carrier reseller (master) account that can be pushed to its subaccounts.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_carrier_numbers:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listCRPhoneNumbers",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The size of the page.",
            "required": false,
            "schema": { "type": "integer", "example": 30 }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The current page number of returned records.",
            "required": false,
            "schema": { "type": "string", "example": "next_page_token" }
          },
          {
            "name": "assigned_status",
            "in": "query",
            "description": "Number assignment status.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "assigned",
              "enum": ["assigned", "unassigned", "returned"]
            }
          },
          {
            "name": "sub_account_id",
            "in": "query",
            "description": "Partner account ID from sub-account.",
            "required": false,
            "schema": { "type": "string", "example": "8EVJZPwCTmSZme6fTOcBFg" }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "Partial string of the phone number.",
            "required": false,
            "schema": { "type": "string", "example": "555" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **No Content**\n\nPhone numbers listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "carrier_reseller_numbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assigned_status": {
                            "type": "string",
                            "description": "Number assignment status.",
                            "example": "assigned",
                            "enum": ["assigned", "unassigned", "returned"]
                          },
                          "carrier_code": {
                            "type": "integer",
                            "description": "Carrier reseller ID.",
                            "example": 9998
                          },
                          "country_iso_code": {
                            "type": "string",
                            "description": "Two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                            "example": "US"
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "Phone number in E164 format.",
                            "example": "+12059535689"
                          },
                          "status": {
                            "type": "string",
                            "description": "Status of phone number.",
                            "example": "active",
                            "enum": ["inactive", "active"]
                          },
                          "sub_account_id": {
                            "type": "string",
                            "description": "`nullable` Partner account ID from sub-account.",
                            "example": "8EVJZPwCTmSZme6fTOcBFg"
                          },
                          "sub_account_name": {
                            "type": "string",
                            "description": "`nullable` Sub-account name.",
                            "example": "testAccount"
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "next_page_token"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call for each page.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_carrier_numbers:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_carrier_numbers:admin"]
        }
      },
      "post": {
        "tags": ["Carrier Reseller"],
        "summary": "Create phone numbers",
        "description": "Use this API to add phone numbers to a carrier reseller (master) account. Up to 200 numbers at a time. If this API is called in MA mode, it also has functions of distribution.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:carrier_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "createCRPhoneNumbers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "phone_number": {
                      "type": "string",
                      "description": "Phone number in E164 format.",
                      "example": "+12059535689"
                    },
                    "status": {
                      "type": "string",
                      "description": "`nullable` Status of phone number. default value is 'inactive'.",
                      "example": "inactive",
                      "enum": ["active", "inactive"]
                    }
                  },
                  "description": "Number up to 200"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **No Content**\n\nPhone numbers created successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nThis account is not a Carrier Reseller.\nReseller does not configure Carrier.\n\n**Error Code:** `300` <br>\nInvalid phone number.\nInvalid phone number status.\nUnable to recognize country.\nPhone number already exists.\n\n**Error Code:** `429` <br>\nPhone number batch operation is limited to 200 per request.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:carrier_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:carrier_number:admin"]
        }
      },
      "patch": {
        "tags": ["Carrier Reseller"],
        "summary": "Activate phone numbers",
        "description": "Use this API to change phone number status to 'active' in a carrier reseller's master account. Up to 200 numbers at a time.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:carrier_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "activeCRPhoneNumbers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Phone number in E164 format. Number up to 200.",
                  "example": "+12059535689"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nPhone numbers activated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nPhone number does not exists.\n\n**Error Code:** `429` <br>\nPhone number batch operation is limited to 200 per request.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:carrier_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:carrier_number:admin"]
        }
      }
    },
    "/phone/carrier_reseller/numbers/{number}": {
      "delete": {
        "tags": ["Carrier Reseller"],
        "summary": "Delete a phone number",
        "description": "Use this API to delete or unassign a phone number from a carrier reseller account.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:carrier_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteCRPhoneNumber",
        "parameters": [
          {
            "name": "number",
            "in": "path",
            "description": "Phone number in E164 format.",
            "required": true,
            "schema": { "type": "string", "example": "+12059535689" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nPhone number unassigned/deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nPhone number does not exists.\n\n**Error Code:** `429` <br>\nPhone number batch operation is limited to 200 per request.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:carrier_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:carrier_number:admin"]
        }
      }
    },
    "/phone/common_areas": {
      "get": {
        "tags": ["Common Areas"],
        "summary": "List common areas",
        "description": "Lists common areas under an account.\n\n**Note**: For use by customers who opted for `Common Area Optimization`  \n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:common_area:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listCommonAreas",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The total number of records returned from a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \n The list of common areas retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "common_areas": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "calling_plans": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the plan.",
                                  "example": "US/CA Metered Calling Plan"
                                },
                                "type": {
                                  "type": "integer",
                                  "description": "Zoom Phone [calling plan number](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).",
                                  "example": 100
                                },
                                "billing_account_id": {
                                  "type": "string",
                                  "description": "The ID of the billing account. It displays when the common area is in India.",
                                  "example": "3WWAEiEjTj2IQuyDiKMd_A"
                                },
                                "billing_account_name": {
                                  "type": "string",
                                  "description": "The billing account name. It displays when the common area is in India.",
                                  "example": "Delhi billing"
                                }
                              }
                            }
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The display name of the common area.",
                            "example": "test_ca"
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "The extension number.",
                            "format": "int64",
                            "example": 100012347
                          },
                          "id": {
                            "type": "string",
                            "description": "The common area ID or common area extension ID.",
                            "example": "JOZmuJ30Spyrw-v9vUzIrA"
                          },
                          "phone_numbers": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "display_name": {
                                  "type": "string",
                                  "description": "The phone number display name.",
                                  "example": "Phone number display name"
                                },
                                "id": {
                                  "type": "string",
                                  "description": "The phone number ID.",
                                  "example": "S5q4FDC3QsOCnO7LqHgqNw"
                                },
                                "number": {
                                  "type": "string",
                                  "description": "The phone number.",
                                  "example": "+12058945543"
                                },
                                "source": {
                                  "type": "string",
                                  "description": "The phone number source. The value can be either `internal` or `external`.",
                                  "example": "internal",
                                  "enum": ["internal", "external"]
                                }
                              }
                            }
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) that the common area desk phone is assigned.",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the site.",
                                "example": "Main Site"
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the common area.",
                            "example": "offline",
                            "enum": ["online", "offline"]
                          },
                          "desk_phones": {
                            "type": "array",
                            "description": "The common area's desk phones.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The desk phone ID.",
                                  "example": "Aky1xpSLSc2PR0XOtj9XWQ"
                                },
                                "display_name": {
                                  "type": "string",
                                  "description": "The desk phone display name.",
                                  "example": "analog_ta"
                                },
                                "device_type": {
                                  "type": "string",
                                  "description": "The desk phone device type.",
                                  "example": "Poly obi504"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The desk phone status.",
                                  "example": "offline",
                                  "enum": ["online", "offline"]
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "RaO87FrnwXvFQta5aV8sU5C3c9O8s9Nraq2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The total number of records returned from a single API call.",
                      "example": 30
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:common_area:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:common_area:admin"]
        }
      },
      "post": {
        "tags": ["Common Areas"],
        "summary": "Add a common area",
        "description": "Adds an instance of common area. You can configure devices shared by users and deployed in shared spaces.\n\n**Note**: For use by customers who opted for `Common Area Optimization`  \n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:common_area:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "addCommonArea",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["display_name"],
                "type": "object",
                "properties": {
                  "calling_plans": {
                    "maxItems": 100,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "integer",
                          "description": "The Zoom Phone [calling plan number](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).",
                          "example": 100
                        }
                      }
                    }
                  },
                  "country_iso_code": {
                    "type": "string",
                    "description": "The two-lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                    "example": "US"
                  },
                  "display_name": {
                    "type": "string",
                    "description": "The display name of the common area. Enter at least three characters.",
                    "example": "test_ca"
                  },
                  "extension_number": {
                    "type": "integer",
                    "description": "The extension number assigned to the common area. If the site code is enabled, provide the short extension number instead.",
                    "format": "int64",
                    "example": 1001014
                  },
                  "site_id": {
                    "type": "string",
                    "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672). You can retrieve the identifier from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.",
                    "example": "8f71O6rWT8KFUGQmJIFAdQ"
                  },
                  "timezone": {
                    "type": "string",
                    "description": " The [timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists) for the common area.",
                    "example": "America/Los_Angeles"
                  },
                  "template_id": {
                    "type": "string",
                    "description": "The unique identifier of the [Setting Template](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0067442). \nYou can retrieve the identifier from the [List setting templates](https://developers.zoom.us/docs/api/rest/reference/phone/methods/#operation/listSettingTemplates) API.\nThe setting template must belong to the same site as the common area.",
                    "example": "2kFqiqSlS5udzWB5QqMiNg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \n\nThe common area has been added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "display_name": {
                      "type": "string",
                      "description": "The display name of the common area.",
                      "example": "test_ca"
                    },
                    "id": {
                      "type": "string",
                      "description": "The common area ID or common area extension ID.",
                      "example": "JOZmuJ30Spyrw-v9vUzIrA"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation failed.<br>\n* Timezone not found in the system.\n* This country is not supported by Zoom Phone.\n* Site does not exist: {site_id}.<br>\n* The template type error or the template does not exist:{template_id}.<br>\n* The template's site is not the same as the common area's site.<br> <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:common_area:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:common_area:admin"]
        }
      }
    },
    "/phone/common_areas/activation_codes": {
      "get": {
        "tags": ["Common Areas"],
        "summary": "List activation codes",
        "description": "Returns a list of activation code information of the common areas under an account.\n\n**Note**: This API serves customers who opted for `Common Area Optimization`.  \n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_common_area_activation_codes:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`\n\n**Not supported in Gov cluster** ",
        "operationId": "listActivationCodes",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The total number of records returned from a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \n The list of activation codes of the common areas retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "common_areas_activation_codes": {
                      "type": "array",
                      "description": "The activation code information of the common areas.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "common_area_id": {
                            "type": "string",
                            "description": "The common area ID or common area extension ID.",
                            "example": "JOZmuJ30Spyrw-v9vUzIrA"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The display name of the common area.",
                            "example": "test_ca"
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "The extension number.",
                            "format": "int64",
                            "example": 100012347
                          },
                          "activation_code": {
                            "type": "string",
                            "description": "The activation code.",
                            "example": "5678-2345-1234-1234"
                          },
                          "activation_code_expiration": {
                            "type": "string",
                            "description": "The time when the activation code expires (format: 'yyyy-MM-ddThh:dd:ssZ').",
                            "example": "2021-10-08T16:12:04Z"
                          },
                          "status": {
                            "type": "string",
                            "description": "The values of this field can be `used` or `not_used`. \n \n used: The common area has been logged in to a smartphone through an activation code.  \n \n not_used: The common area is never logged in to a smartphone through an activation code.",
                            "example": "used",
                            "enum": ["used", "not_used"]
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "site_id": {
                                "type": "string",
                                "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) that the common area is assigned.",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the site.",
                                "example": "Main Site"
                              }
                            }
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "RaO87FrnwXvFQta5aV8sU5C3c9O8s9Nraq2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The total number of records returned from a single API call.",
                      "example": 30
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n The next page token is invalid or expired. <br>\n**Error Code:** `400` <br>\n The account_id is invalid. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_common_area_activation_codes:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": [
            "phone:read:list_common_area_activation_codes:admin"
          ]
        }
      }
    },
    "/phone/common_areas/template_id/{templateId}": {
      "post": {
        "tags": ["Common Areas"],
        "summary": "Apply template to common areas",
        "description": "Applies a template to common areas.  You can add up to 50 common areas at a time.\n\n**Note**: For use by customers who opted for `Common Area Optimization`  \n\n**Prerequisites**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:apply_template_to_common_areas:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "ApplyTemplatetoCommonAreas",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "The template ID is the unique identifier of the [Setting Template](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0067442). \nYou can retrieve the identifier from the [List setting templates](https://developers.zoom.us/docs/api/rest/reference/phone/methods/#operation/listSettingTemplates) API.\nIf the account enabled [multiple sites](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0069716#h_05c88e35-1593-491f-b1a8-b7139a75dc15), the setting template must belong to the same site as the common areas.",
            "required": true,
            "schema": { "type": "string", "example": "2kFqiqSlS5udzWB5QqMiNg" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "common_area_ids": {
                    "maxItems": 50,
                    "type": "array",
                    "description": "The `common_area_ids` is an array. Each element is the unique identifier of the [Common Area](https://marketplace.zoom.us/docs/api-reference/phone/methods/#operation/listCommonAreas). It can be retrieved from the List Common Areas API.",
                    "items": {
                      "type": "string",
                      "description": "The common area ID or common area extension ID.",
                      "example": "5NmyHmVoRWWk4YT5ad6oxg"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   Template applied successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n The template's site is not the same as the common area's site. <br>\n**Error Code:** `400` <br>\n Common area size must be less than 50. <br> \nYou need to have administrative privileges to edit this site. <br>\n**Error Code:** `404` <br>\n Common area does not exist: {commonAreaId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  The template type error or the template does not exist:{templateId}. \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:apply_template_to_common_areas:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": [
            "phone:write:apply_template_to_common_areas:admin"
          ]
        }
      }
    },
    "/phone/common_areas/{commonAreaId}": {
      "get": {
        "tags": ["Common Areas"],
        "summary": "Get common area details",
        "description": "Use this API to get detailed information on the common area.\n\n**Note**: For use by customers who opted for `Common Area Optimization`  \n\n**Prerequisites:**  \n \n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:common_area:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getACommonArea",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "description": "Common area ID or common area extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "5NmyHmVoRWWk4YT5ad6oxg" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nCommon area details returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "area_code": {
                      "type": "string",
                      "description": "Area code of the common area.",
                      "example": "408"
                    },
                    "calling_plans": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Calling plan name.",
                            "example": "US/CA Metered Calling Plan"
                          },
                          "type": {
                            "type": "integer",
                            "description": "Calling plan type.",
                            "example": 100
                          },
                          "billing_account_id": {
                            "type": "string",
                            "description": "Billing account ID. Displayed when the common area is in India.",
                            "example": "3WWAEiEjTj2IQuyDiKMd_A"
                          },
                          "billing_account_name": {
                            "type": "string",
                            "description": "Billing account name. Displayed when the common area is in India.",
                            "example": "Delhi billing"
                          }
                        }
                      }
                    },
                    "cost_center": {
                      "type": "string",
                      "description": "The cost center the common area belongs to.",
                      "example": "pbx_cost_center"
                    },
                    "country": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "Two-lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                          "example": "US"
                        },
                        "country_code": {
                          "type": "string",
                          "description": "The country calling code.",
                          "example": "1"
                        },
                        "name": {
                          "type": "string",
                          "description": "The common area's country name.",
                          "example": "United States"
                        }
                      },
                      "description": "The common area country information."
                    },
                    "department": {
                      "type": "string",
                      "description": "The department the common area belongs to.",
                      "example": "department_pbx"
                    },
                    "display_name": {
                      "type": "string",
                      "description": "Display name of the common area.",
                      "example": "test_ca"
                    },
                    "extension_number": {
                      "type": "integer",
                      "description": "The extension number.",
                      "format": "int64",
                      "example": 100012347
                    },
                    "emergency_address": {
                      "type": "object",
                      "properties": {
                        "address_line1": {
                          "type": "string",
                          "description": "The emergency location address line 1.",
                          "example": "55 Almaden Blvd"
                        },
                        "address_line2": {
                          "type": "string",
                          "description": "The emergency location address line 2.",
                          "example": "6th floor"
                        },
                        "city": {
                          "type": "string",
                          "description": "The emergency location address city.",
                          "example": "San Jose"
                        },
                        "country": {
                          "type": "string",
                          "description": "The country of the emergency location.",
                          "example": "US"
                        },
                        "id": {
                          "type": "string",
                          "description": "The emergency location address ID.",
                          "example": "gBGwqgwoTb-DiSCA75tMWw"
                        },
                        "state_code": {
                          "type": "string",
                          "description": "The emergency location address state code.",
                          "example": "CA"
                        },
                        "status": {
                          "type": "integer",
                          "description": "The emergency address verification status.: \n* `1` &mdash; Verification not Required. \n* `2` &mdash; Unverified. \n* `3` &mdash; Verification requested. \n* `4` &mdash; Verfied. \n* `5` &mdash; Rejected. \n* `6` &mdash; Verification failed.",
                          "example": 1,
                          "enum": [1, 2, 3, 4, 5, 6]
                        },
                        "zip": {
                          "type": "string",
                          "description": "The emergency address Zip Code.",
                          "example": "95113"
                        }
                      },
                      "description": "The emergency address information."
                    },
                    "id": {
                      "type": "string",
                      "description": "Common area ID or common area extension ID.",
                      "example": "SHzioi3ZR9SXv-XkLbmYCg"
                    },
                    "outbound_caller_ids": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "is_default": {
                            "type": "boolean",
                            "description": "Whether the outbound caller ID is the default one: if `true`, the outbound caller ID is the default caller ID.",
                            "example": true
                          },
                          "name": {
                            "type": "string",
                            "description": "Outbound caller name.",
                            "example": "Direct Number"
                          },
                          "number": {
                            "type": "string",
                            "description": "Outbound caller number.",
                            "example": "+12055437350"
                          }
                        }
                      }
                    },
                    "phone_numbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "display_name": {
                            "type": "string",
                            "description": "The display name of the phone number.",
                            "example": "office phone"
                          },
                          "id": {
                            "type": "string",
                            "description": "The phone number ID.",
                            "example": "TqH98ec8RVCu6Z00aBv9ow"
                          },
                          "number": {
                            "type": "string",
                            "description": "The phone number.",
                            "example": "+12055437350"
                          },
                          "source": {
                            "type": "string",
                            "description": "Phone number source: `internal` or `external`",
                            "example": "internal",
                            "enum": ["internal", "external"]
                          }
                        }
                      }
                    },
                    "policy": {
                      "type": "object",
                      "properties": {
                        "international_calling": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "account",
                              "enum": ["account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified.",
                              "example": true
                            }
                          },
                          "description": "Whether the current extension can make international calls outside of their calling plan."
                        },
                        "outbound_calling": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to define calling rules to restrict user or extension from calling specific countries, cities or numbers.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                              "example": true
                            }
                          }
                        }
                      },
                      "description": "A list of the common area's policies. Policies are exceptions to the common area's restrictions."
                    },
                    "site": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.",
                          "example": "SQv52YtkRLC2dwrDdYtGsA"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the site.",
                          "example": "Main site"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Status of the common area. It can be either `online` or `offline`.",
                      "example": "offline",
                      "enum": ["online", "offline"]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `400` <br>\n Common area does not exist: {commonAreaId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:common_area:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:common_area:admin"]
        }
      },
      "delete": {
        "tags": ["Common Areas"],
        "summary": "Delete a common area",
        "description": "Use this API to remove the common area. \n\n**Note**: For use by customers who opted for `Common Area Optimization`  \n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:common_area:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteCommonArea",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "description": "Common area ID or common area extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "5NmyHmVoRWWk4YT5ad6oxg" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \ncommon area deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nCommon area does not exist: {0}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:common_area:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:common_area:admin"]
        }
      },
      "patch": {
        "tags": ["Common Areas"],
        "summary": "Update common area",
        "description": "Use this API to update the common area information.\n\n**Note**: For use by customers who opted for `Common Area Optimization`  \n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:common_area:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateCommonArea",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "5NmyHmVoRWWk4YT5ad6oxg" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "area_code": {
                    "type": "string",
                    "description": "Area code of the common area.",
                    "example": "408"
                  },
                  "cost_center": {
                    "type": "string",
                    "description": "The cost center the common area belongs to.",
                    "example": "cost_center_pbx"
                  },
                  "country_iso_code": {
                    "type": "string",
                    "description": "Two-lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                    "example": "US"
                  },
                  "department": {
                    "type": "string",
                    "description": "The department the common area belongs to.",
                    "example": "department_pbx"
                  },
                  "display_name": {
                    "type": "string",
                    "description": "Display name of the common area.",
                    "example": "common area 01"
                  },
                  "emergency_address_id": {
                    "type": "string",
                    "description": "The emergency location's address ID.",
                    "example": "gBGwqgwoTb-DiSCA75tMWw"
                  },
                  "extension_number": {
                    "type": "integer",
                    "description": "Extension number of the phone. If the site code is enabled, provide the short extension number instead.",
                    "format": "int64",
                    "example": 1001014
                  },
                  "outbound_caller_id": {
                    "type": "string",
                    "description": "The user's outbound caller ID phone number in E164 format.",
                    "example": "+12055437350"
                  },
                  "policy": {
                    "type": "object",
                    "properties": {
                      "international_calling": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "If enabled, the common area can use international calling.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "If reset, the common area international calling setting resets to the default setting.",
                            "example": true
                          }
                        },
                        "description": "Whether the current extension can make international calls outside of their calling plan."
                      }
                    },
                    "description": "A list of the common area's policies."
                  },
                  "site_id": {
                    "type": "string",
                    "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) to which the common area desk phone is assigned.",
                    "example": "SQv52YtkRLC2dwrDdYtGsA"
                  },
                  "timezone": {
                    "type": "string",
                    "description": "[Timezone ID](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists) for the common area.",
                    "example": "Europe/Berlin"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nCommon area information updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nCommon area does not exist: {0}.\n\n**Error Code:** `409` <br>\nA conflict occurred with the target extension number. Try again later.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:common_area:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:common_area:admin"]
        }
      }
    },
    "/phone/common_areas/{commonAreaId}/calling_plans": {
      "post": {
        "tags": ["Common Areas"],
        "summary": "Assign calling plans to a common area",
        "description": "Use this API to assign calling plans to a common area.\n\n**Note**: For use by customers who opted for `Common Area Optimization`  \n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:common_area_calling_plan:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "assignCallingPlansToCommonArea",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "description": "Common area ID or common area extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "5NmyHmVoRWWk4YT5ad6oxg" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["calling_plans"],
                "type": "object",
                "properties": {
                  "calling_plans": {
                    "type": "array",
                    "items": {
                      "required": ["type"],
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "integer",
                          "description": "Zoom Phone [calling plan number](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).",
                          "example": 100
                        },
                        "billing_account_id": {
                          "type": "string",
                          "description": "Billing account ID. If the user is in India, the field is required.",
                          "example": "3WWAEiEjTj2IQuyDiKMd_A"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \n\nAssigned calling plans to the common area successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "calling_plans": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Calling plan name.",
                            "example": "US/CA Metered Calling Plan"
                          },
                          "type": {
                            "type": "integer",
                            "description": "The Zoom Phone [calling plan number](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).",
                            "example": 100
                          },
                          "billing_account_id": {
                            "type": "string",
                            "description": "The billing account ID. It displays when the common area is in India.",
                            "example": "3WWAEiEjTj2IQuyDiKMd_A"
                          },
                          "billing_account_name": {
                            "type": "string",
                            "description": "The billing account name. It displays when the common area is in India.",
                            "example": "Delhi billing"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nCommon area does not exist: {commonAreaId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:common_area_calling_plan:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:common_area_calling_plan:admin"]
        }
      }
    },
    "/phone/common_areas/{commonAreaId}/calling_plans/{type}": {
      "delete": {
        "tags": ["Common Areas"],
        "summary": "Unassign a calling plan from the common area",
        "description": "Use this API to unassign a calling plan from the common area.\n\n**Note**: For use by customers who opted for `Common Area Optimization`  \n\n**Prerequisites:** \n* A Pro or higher account with a Zoom Phone license \n* An account owner or admin permissions \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:common_area_calling_plan:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "unassignCallingPlansFromCommonArea",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "description": "Common area ID or common area extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "SHzioi3ZR9SXv-XkLbmYCg" }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Zoom Phone [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) to remove.",
            "required": true,
            "schema": { "type": "string", "example": "100" }
          },
          {
            "name": "billing_account_id",
            "in": "query",
            "description": "Billing account ID. If the common area is in India, the parameter is required.",
            "required": false,
            "schema": { "type": "string", "example": "3WWAEiEjTj2IQuyDiKMd_A" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nUnassign calling plans from common area successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nCommon area does not exist: {commonAreaId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:common_area_calling_plan:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:common_area_calling_plan:admin"]
        }
      }
    },
    "/phone/common_areas/{commonAreaId}/phone_numbers": {
      "post": {
        "tags": ["Common Areas"],
        "summary": "Assign phone numbers to a common area",
        "description": "Assign phone numbers to a common area.\n\n**Note**: For use by customers who opted for `Common Area Optimization`  \n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:common_area_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "assignPhoneNumbersToCommonArea",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "description": "Common area ID or common area extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "5NmyHmVoRWWk4YT5ad6oxg" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["phone_numbers"],
                "type": "object",
                "properties": {
                  "phone_numbers": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Phone number ID.",
                          "example": "TqH98ec8RVCu6Z00aBv9ow"
                        },
                        "number": {
                          "type": "string",
                          "description": "The phone number.",
                          "example": "+12055437350"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \n\nAssigned phone numbers to the common area successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phone_numbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The phone number ID.",
                            "example": "TqH98ec8RVCu6Z00aBv9ow"
                          },
                          "number": {
                            "type": "string",
                            "description": "The phone number.",
                            "example": "+12055437350"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nCommon area does not exist: {commonAreaId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:common_area_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:common_area_number:admin"]
        }
      }
    },
    "/phone/common_areas/{commonAreaId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "tags": ["Common Areas"],
        "summary": "Unassign phone numbers from common area",
        "description": "Use this API to unassign a phone number from a common area.\n\n**Note**: For use by customers who opted for `Common Area Optimization`  \n\n**Prerequisites:**\n* A Pro or a higher account with a Zoom Phone license\n* An account owner or admin permissions\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:common_area_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "unassignPhoneNumbersFromCommonArea",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "description": "Common area ID or common area extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "SHzioi3ZR9SXv-XkLbmYCg" }
          },
          {
            "name": "phoneNumberId",
            "in": "path",
            "description": "The phone number or the phone number ID.",
            "required": true,
            "schema": { "type": "string", "example": "TqH98ec8RVCu6Z00aBv9ow" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nUnassign phone numbers from common area successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nCommon area does not exist: {commonAreaId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:common_area_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:common_area_number:admin"]
        }
      }
    },
    "/phone/common_areas/{commonAreaId}/pin_code": {
      "patch": {
        "tags": ["Common Areas"],
        "summary": "Update common area pin code",
        "description": "Updates the common area pin code.\n\n**Note**: For use by customers who opted for `Common Area Optimization`  \n\n**Prerequisites**\n\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions, This depends on whether [The PIN cannot be viewed by the admin](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0069783) is enabled.  \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:common_area:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateCommonAreaPinCode",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "5NmyHmVoRWWk4YT5ad6oxg" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["pin_code"],
                "type": "object",
                "properties": {
                  "pin_code": {
                    "type": "string",
                    "description": "The pin code to access voicemail, hot desking, unlock desk phones, and call authorized-required.",
                    "example": "67941"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**     Common area pin code updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Validation failed.<br>\n* The PIN Code cannot be updated by the admin.\n* PIN code could only include numbers.\n* Invalid PIN code. PIN code must be {0} digits long. \n* Invalid PIN code. PIN code must be {0} to {1} digits long.\n* Invalid PIN code. Your PIN code must not be the same as the extension number.\n* Invalid PIN code. The PIN code must not contain a group of repeated digits.\n* PIN code cannot be an ascending or descending group of digits. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \nCommon area does not exist: {commonAreaId}. \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:common_area:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:common_area:admin"]
        }
      }
    },
    "/phone/common_areas/{commonAreaId}/settings": {
      "get": {
        "tags": ["Common Areas"],
        "summary": "Get common area settings",
        "description": "Returns common area settings.\n\n**Note**: For customers who opted for `Common Area Optimization`.  \n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_common_area_settings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getCommonAreaSettings",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "5NmyHmVoRWWk4YT5ad6oxg" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nCommon Area Setting object returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "desk_phones": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The desk phone ID.",
                            "example": "Aky1xpSLSc2PR0XOtj9XWQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The desk phone display name.",
                            "example": "analog_ta"
                          },
                          "device_type": {
                            "type": "string",
                            "description": "The desk phone device type.",
                            "example": "Poly obi504"
                          },
                          "status": {
                            "type": "string",
                            "description": "The desk phone status.",
                            "example": "offline",
                            "enum": ["online", "offline"]
                          },
                          "mac_address": {
                            "type": "string",
                            "description": "The MAC address or serial number of the device.",
                            "example": "203a07240534"
                          },
                          "hot_desking": {
                            "type": "object",
                            "properties": {
                              "status": {
                                "type": "string",
                                "description": "This field allows the hot desking feature to the current device: letting the guest user sign in to the desk phone. You can't use the desk phone until the guest user signs out. \nOptions include:\n* `unsupported` \n* `on` \n* `off`",
                                "example": "off",
                                "enum": ["unsupported", "on", "off"]
                              }
                            }
                          },
                          "private_ip": {
                            "type": "string",
                            "description": "The private IP of the registered device.",
                            "example": "192.168.10.13"
                          },
                          "public_ip": {
                            "type": "string",
                            "description": "The public IP of the registered device.",
                            "example": "220.148.231.126"
                          }
                        }
                      }
                    }
                  },
                  "description": "The common area setting."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `404` <br>\n Common area does not exist: {commonAreaId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_common_area_settings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_common_area_settings:admin"]
        }
      }
    },
    "/phone/common_areas/{commonAreaId}/settings/{settingType}": {
      "post": {
        "tags": ["Common Areas"],
        "summary": "Add common area settings",
        "description": "Use this API to add the common area setting according to the setting type, specifically for desk phones.\n\n**Note**: For use by customers who opted for `Common Area Optimization`  \n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:common_area_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "AddCommonAreaSetting",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "description": "Common area ID or common area extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "5NmyHmVoRWWk4YT5ad6oxg" }
          },
          {
            "name": "settingType",
            "in": "path",
            "description": "Corresponds to the setting item you wish to modify. Allowed values: `desk_phone`",
            "required": true,
            "schema": { "type": "string", "example": "desk_phone" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_id": {
                    "type": "string",
                    "description": "Desk phone ID.",
                    "example": "ULfeE4mgSImyelNmTekUfg"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \n\nCreated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "desk_phones": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Desk phone ID.",
                            "example": "Aky1xpSLSc2PR0XOtj9XWQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "Desk phone display name.",
                            "example": "analog_ta"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nCommon area does not exist: {commonAreaId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:common_area_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:common_area_setting:admin"]
        }
      },
      "delete": {
        "tags": ["Common Areas"],
        "summary": "Delete common area setting",
        "description": "Use this API to remove the common area subsetting from desk phones. \n\n**Note**: For use by customers who opted for `Common Area Optimization`  \n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:common_area_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteCommonAreaSetting",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "description": "Common area ID or common area extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "5NmyHmVoRWWk4YT5ad6oxg" }
          },
          {
            "name": "settingType",
            "in": "path",
            "description": "Corresponds to the setting item you wish to modify. Allowed values: `desk_phone`",
            "required": true,
            "schema": { "type": "string", "example": "desk_phone" }
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "Desk phone ID.",
            "required": true,
            "schema": { "type": "string", "example": "TNxfEp2WT9emyCsAQt4qnA" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nCommon area does not exist: {0}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:common_area_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:common_area_setting:admin"]
        }
      },
      "patch": {
        "tags": ["Common Areas"],
        "summary": "Update common area settings",
        "description": "Use this API to update the common area setting according to the setting type, specifically for desk phones.\n\n**Note**: For use by customers who opted for `Common Area Optimization`  \n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:common_area_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "UpdateCommonAreaSetting",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "5NmyHmVoRWWk4YT5ad6oxg" }
          },
          {
            "name": "settingType",
            "in": "path",
            "description": "Corresponds to the setting item you wish to modify. Allowed values: `desk_phone`",
            "required": true,
            "schema": { "type": "string", "example": "desk_phone" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "desk_phones": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Desk phone ID.",
                          "example": "ULfeE4mgSImyelNmTekUfg"
                        },
                        "hot_desking": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "Allow hot desking feature to the current device: letting the guest user sign in to the desk phone. You can't use the desk phone until the guest user signs out. \nOptions include:\n* `on` \n* `off`",
                              "example": "off",
                              "enum": ["on", "off"]
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nCommon area does not exist: {commonAreaId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:common_area_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:common_area_setting:admin"]
        }
      }
    },
    "/phone/metrics/call_logs": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "List call logs",
        "description": " Lists the monthly call logs metrics. You can use query parameters to filter the response by date, site and MOS(Mean Opinion Score) of the call.The call logs that provide a record of all incoming and outgoing calls over Zoom Phone in an account. \n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_call_logs:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "listCallLogsMetrics",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start date in **yyyy-mm-dd** format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. If unspecified, returns data from the past 1 day.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "This setting is **required** only when the `from` parameter is specified. The end date is in **yyyy-mm-dd** format, which is the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by call logs of a specific phone site.",
            "required": false,
            "schema": { "type": "string", "example": "SQv52YtkRLC2dwrDdYtGsA" }
          },
          {
            "name": "quality_type",
            "in": "query",
            "description": "This setting filters call logs by voice quality. Zoom uses MOS of 3.5 as a general baseline to categorize calls by call quality. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.   \n   \n The value of this field can be one of the following:  \n \n* `good`: Retrieve call logs of the call(s) with good quality of voice.  \n \n* `bad`: Retrieve call logs of the call(s) with good quality of voice.  \n \n* `all`: Retrieve all call logs without filtering by voice quality. \n\n\n\n",
            "required": false,
            "schema": { "type": "string", "example": "good" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "T6WMY4fJBIAlxPUiqRtwvQS9dvsq8AoRam2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_logs": {
                      "type": "array",
                      "description": "Call logs.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "call_id": {
                            "type": "string",
                            "description": "The unique identifier of the phone call.",
                            "example": "7081466125443483485"
                          },
                          "callee": {
                            "type": "object",
                            "properties": {
                              "codec": {
                                "type": "string",
                                "description": "The audio codec.",
                                "example": "ES8311"
                              },
                              "device_private_ip": {
                                "type": "string",
                                "description": "This setting displays the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                                "example": "10.100.111.237"
                              },
                              "device_public_ip": {
                                "type": "string",
                                "description": "This setting displays the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                                "example": "38.99.100.2"
                              },
                              "device_type": {
                                "type": "string",
                                "description": "The device type, and if applicable, its version number. Acceptable device types: \n* `Windows_Client` \n* `MAC_Client` \n* `Linux_Client`  \n* `Android_Phone` \n* `IOS_Phone` \n* `Android_Pad` \n* `IOS_Pad` \n* [Zoom Phone Appliance](https://support.zoom.us/hc/en-us/articles/360001299063#h_cc0dac0d-44aa-4fb6-8e39-359166c38715) \n* `Windows_VDI_Client` \n* `MAC_VDI_Client` \n* `Linux_VDI_Client`",
                                "example": "MAC_Client 5.11.9.9957"
                              },
                              "extension_number": {
                                "type": "string",
                                "description": "The full extension number of the callee.",
                                "example": "100994"
                              },
                              "headset": {
                                "type": "string",
                                "description": "The headset the callee uses.",
                                "example": "Edifier"
                              },
                              "isp": {
                                "type": "string",
                                "description": "ISP.",
                                "example": "Cogent Communications"
                              },
                              "microphone": {
                                "type": "string",
                                "description": "The microphone the callee uses for the call.",
                                "example": "+12053194087"
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "The phone number of the callee in E164 format.",
                                "example": "+12053194087"
                              },
                              "site_id": {
                                "type": "string",
                                "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).",
                                "example": "ZNWikLeVSjuaMvUoxFqCuw"
                              }
                            },
                            "description": "The callee object that contains information of the calee."
                          },
                          "caller": {
                            "type": "object",
                            "properties": {
                              "codec": {
                                "type": "string",
                                "description": "Audio codec.",
                                "example": "ES8311"
                              },
                              "device_private_ip": {
                                "type": "string",
                                "description": "This setting displays the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                                "example": "10.100.111.232"
                              },
                              "device_public_ip": {
                                "type": "string",
                                "description": "This setting display sthe device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                                "example": "38.99.100.3"
                              },
                              "device_type": {
                                "type": "string",
                                "description": "The device type, and if applicable, its version number. Acceptable device types: \n* `Windows_Client` \n* `MAC_Client` \n* `Linux_Client`  \n* `Android_Phone` \n* `IOS_Phone` \n* `Android_Pad` \n* `IOS_Pad` \n* [Zoom Phone Appliance](https://support.zoom.us/hc/en-us/articles/360001299063#h_cc0dac0d-44aa-4fb6-8e39-359166c38715) \n* `Windows_VDI_Client` \n* `MAC_VDI_Client` \n* `Linux_VDI_Client` ",
                                "example": "MAC_Client"
                              },
                              "extension_number": {
                                "type": "string",
                                "description": "The full extension number of the caller.",
                                "example": "100152"
                              },
                              "headset": {
                                "type": "string",
                                "description": "The headset the caller uses for the call.",
                                "example": "Edifier"
                              },
                              "isp": {
                                "type": "string",
                                "description": "ISP.",
                                "example": "Cogent Communications"
                              },
                              "microphone": {
                                "type": "string",
                                "description": "The microphone the caller uses for the call.",
                                "example": "+12053194087"
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "The phone number of the caller in E164 format.",
                                "example": "+12053194087"
                              },
                              "site_id": {
                                "type": "string",
                                "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).",
                                "example": "ZNWikLeVSjuaMvUoxFqCuw"
                              }
                            },
                            "description": "The caller object that contains information of the caller."
                          },
                          "date_time": {
                            "type": "string",
                            "description": "The date and time when the call started.",
                            "example": "2021-04-01T02:59:32Z"
                          },
                          "direction": {
                            "type": "string",
                            "description": "The direction of the call. The value of this field can be either `internal` or `outbound`.",
                            "example": "internal"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The duration of the call in seconds.",
                            "example": 20
                          },
                          "mos": {
                            "type": "string",
                            "description": "The  Mean Opinion Score (MOS). Zoom uses MOS as the main measurement to report on voice quality. MOS measures voice quality on a scale of one to five. A score of 1 indicates unacceptable voice quality for all users. A score of five is the best voice quality.",
                            "example": "4.5"
                          }
                        }
                      }
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date of the report.",
                      "example": "2021-03-31"
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "T6WMY4fJBIAlxPUiqRtwvQS9dvsq8AoRam2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single call.",
                      "example": 30
                    },
                    "to": {
                      "type": "string",
                      "description": "The end time and date of the report.",
                      "example": "2021-04-01"
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records available across all pages.",
                      "example": 20
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_call_logs:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_call_logs:admin"]
        }
      }
    },
    "/phone/metrics/call_logs/{callId}/qos": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Get call QoS",
        "description": "Gets the call quality of service (QoS) data for a call made or received by a Zoom phone user in the account. \n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license   \n   \n \n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:call_qos:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getCallQoS",
        "parameters": [
          {
            "name": "callId",
            "in": "path",
            "description": "The unique identifier of the call.",
            "required": true,
            "schema": { "type": "string", "example": "7081466125443483485" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_id": {
                      "type": "string",
                      "description": "The unique identifier of the phone call.",
                      "example": "7081466125443483485"
                    },
                    "callee_qos": {
                      "type": "object",
                      "properties": {
                        "device_private_ip": {
                          "type": "string",
                          "description": "This setting displays the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "example": "10.100.111.237"
                        },
                        "device_public_ip": {
                          "type": "string",
                          "description": "This setting displays the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "example": "38.99.100.2"
                        },
                        "receiving": {
                          "type": "array",
                          "description": "The QoS that the callee receives.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date_time": {
                                "type": "string",
                                "description": "The date and time when the QoS was received.",
                                "format": "date-time",
                                "example": "2022-04-01T03:05:43Z"
                              },
                              "qos": {
                                "type": "object",
                                "properties": {
                                  "avg_loss": {
                                    "type": "string",
                                    "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                    "example": "0.82%"
                                  },
                                  "bitrate": {
                                    "type": "string",
                                    "description": "The number of bits per second, in kbps, that can be transmitted along a digital network.",
                                    "example": "14.98kbps"
                                  },
                                  "jitter": {
                                    "type": "string",
                                    "description": "The variation in the delay of received packets, in milliseconds.",
                                    "example": "7.53ms"
                                  },
                                  "max_loss": {
                                    "type": "string",
                                    "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                    "example": "1.51%"
                                  },
                                  "mos": {
                                    "type": "string",
                                    "description": "The MOS (Mean Opinion Score).\n\nMOS measures voice quality on a scale of 1 to 5. A score than or equal to 3.5 means good quality, while below 3.5 means poor quality.",
                                    "example": "3.6"
                                  },
                                  "network_delay": {
                                    "type": "string",
                                    "description": "The amount of time, in milliseconds, it takes for a VoIP (Voice Over IP) packet to travel from one point to another.",
                                    "example": "307"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "sending": {
                          "type": "array",
                          "description": "The QoS that the callee sends.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date_time": {
                                "type": "string",
                                "description": "The date and time when the QoS was delivered.",
                                "format": "date-time",
                                "example": "2022-04-01T03:05:43Z"
                              },
                              "qos": {
                                "type": "object",
                                "properties": {
                                  "avg_loss": {
                                    "type": "string",
                                    "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                    "example": "0.82%"
                                  },
                                  "bitrate": {
                                    "type": "string",
                                    "description": "The number of bits per second, in kbps, that can be transmitted along a digital network.",
                                    "example": "14.98kbps"
                                  },
                                  "jitter": {
                                    "type": "string",
                                    "description": "The variation in the delay of received packets, in milliseconds.",
                                    "example": "7.53ms"
                                  },
                                  "max_loss": {
                                    "type": "string",
                                    "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                    "example": "1.51%"
                                  },
                                  "mos": {
                                    "type": "string",
                                    "description": "The MOS (Mean Opinion Score).\n\nMOS measures voice quality on a scale of 1 to 5. A score than or equal to 3.5 means good quality, while below 3.5 means poor quality.",
                                    "example": "3.6"
                                  },
                                  "network_delay": {
                                    "type": "string",
                                    "description": "The amount of time, in milliseconds, it takes for a VoIP (Voice Over IP) packet to travel from one point to another.",
                                    "example": "307"
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "caller_qos": {
                      "type": "object",
                      "properties": {
                        "device_private_ip": {
                          "type": "string",
                          "description": "This setting displays the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "example": "10.100.111.237"
                        },
                        "device_public_ip": {
                          "type": "string",
                          "description": "This setting displays the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "example": "38.99.100.2"
                        },
                        "receiving": {
                          "type": "array",
                          "description": "The QoS (quality of service) that the caller receives .",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date_time": {
                                "type": "string",
                                "description": "The date and time when the QoS was received.",
                                "format": "date-time",
                                "example": "2022-04-01T03:05:43Z"
                              },
                              "qos": {
                                "type": "object",
                                "properties": {
                                  "avg_loss": {
                                    "type": "string",
                                    "description": "The average amount of packet loss. For example, the percentage of packets that fail to arrive at their destination.",
                                    "example": "1.29%"
                                  },
                                  "bitrate": {
                                    "type": "string",
                                    "description": "The number of bits per second, in kbps, that can be transmitted along a digital network.",
                                    "example": "16.31kbps"
                                  },
                                  "jitter": {
                                    "type": "string",
                                    "description": "The variation in the delay of received packets in milliseconds.",
                                    "example": "5.15ms"
                                  },
                                  "max_loss": {
                                    "type": "string",
                                    "description": "The maximum amount of packet loss. For example, the maximum percentage of packets that fail to arrive at their destination.",
                                    "example": "2.01%"
                                  },
                                  "mos": {
                                    "type": "string",
                                    "description": "The MOS (Mean Opinion Score).\n\nMOS measures voice quality on a scale of 1 to 5. A score than or equal to 3.5 means good quality, while below 3.5 means poor quality.",
                                    "example": "3.6"
                                  },
                                  "network_delay": {
                                    "type": "string",
                                    "description": "The amount of time, in milliseconds, it takes for a VoIP (Voice Over IP) packet to travel from one point to another.",
                                    "example": "301"
                                  }
                                }
                              }
                            }
                          }
                        },
                        "sending": {
                          "type": "array",
                          "description": "The QoS that the caller sent.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "date_time": {
                                "type": "string",
                                "description": "The date and time when the QoS was delivered.",
                                "format": "date-time",
                                "example": "2022-04-01T03:05:43Z"
                              },
                              "qos": {
                                "type": "object",
                                "properties": {
                                  "avg_loss": {
                                    "type": "string",
                                    "description": "The average amount of packet loss, i.e., the percentage of packets that fail to arrive at their destination.",
                                    "example": "1.29%"
                                  },
                                  "bitrate": {
                                    "type": "string",
                                    "description": "The number of bits per second in kbps that can be transmitted along a digital network.",
                                    "example": "16.31kbps"
                                  },
                                  "jitter": {
                                    "type": "string",
                                    "description": "The variation in the delay of received packets. The value of this field is expressed in milliseconds.",
                                    "example": "5.15ms"
                                  },
                                  "max_loss": {
                                    "type": "string",
                                    "description": "The maximum amount of packet loss, i.e., the maximum percentage of packets that fail to arrive at their destination.",
                                    "example": "2.01%"
                                  },
                                  "mos": {
                                    "type": "string",
                                    "description": "The Mean Opinion Score (MOS) measures voice quality on a scale of one to five. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.",
                                    "example": "3.6"
                                  },
                                  "network_delay": {
                                    "type": "string",
                                    "description": "The amount of time (in milliseconds) it takes for a VoIP packet to travel from one point to another.",
                                    "example": "303"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "description": "The quality of service object that represents the call quality data of the caller."
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:read:admin", "phone:read:call_qos:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:call_qos:admin"]
        }
      }
    },
    "/phone/metrics/call_logs/{call_id}": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "Get call details from call log",
        "description": "Returns call log details of a specific call. \n\nThe call logs provide a record of all incoming and outgoing calls over Zoom Phone in an account.\n\n **Prerequisites:**\n * Business, or Education account\n * Zoom Phone license \n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:call_log:admin`",
        "operationId": "getCallLogMetricsDetails",
        "parameters": [
          {
            "name": "call_id",
            "in": "path",
            "description": "The unique identifier of the phone call. \nThe value of this field can be retrieved from [List Call Logs]() API.",
            "required": true,
            "schema": { "type": "string", "example": "7081466125443483485" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_id": {
                      "type": "string",
                      "description": "The unique identifier of the phone call.",
                      "example": "7081466125443483485"
                    },
                    "callee": {
                      "type": "object",
                      "properties": {
                        "codec": {
                          "type": "string",
                          "description": "The audio codec.",
                          "example": "ES8311"
                        },
                        "device_private_ip": {
                          "type": "string",
                          "description": "This setting displays the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "example": "10.100.111.237"
                        },
                        "device_public_ip": {
                          "type": "string",
                          "description": "This setting displays the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "example": "38.99.100.2"
                        },
                        "device_type": {
                          "type": "string",
                          "description": "The device type, and if applicable, its version number. Acceptable device types: \n* `Windows_Client` \n* `MAC_Client` \n* `Linux_Client`  \n* `Android_Phone` \n* `IOS_Phone` \n* `Android_Pad` \n* `IOS_Pad` \n* [Zoom Phone Appliance](https://support.zoom.us/hc/en-us/articles/360001299063#h_cc0dac0d-44aa-4fb6-8e39-359166c38715) \n* `Windows_VDI_Client` \n* `MAC_VDI_Client` \n* `Linux_VDI_Client` ",
                          "example": "MAC_Client"
                        },
                        "extension_number": {
                          "type": "string",
                          "description": "The full extension number of the callee.",
                          "example": "100994"
                        },
                        "headset": {
                          "type": "string",
                          "description": "The headset the callee uses for the call.",
                          "example": "Edifier"
                        },
                        "isp": {
                          "type": "string",
                          "description": "ISP.",
                          "example": "Cogent Communications"
                        },
                        "microphone": {
                          "type": "string",
                          "description": "The microphone the callee uses for the call.",
                          "example": "+18889843519"
                        },
                        "phone_number": {
                          "type": "string",
                          "description": "The phone number of the callee in E164 format.",
                          "example": "+18889843519"
                        },
                        "site_id": {
                          "type": "string",
                          "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).",
                          "example": "ZNWikLeVSjuaMvUoxFqCuw"
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of the extension for `user`, `callQueue`, `autoReceptionist`, or `sharedLineGroup`.",
                          "example": "DYHrdpjrS3uaOf7dPkkg8w"
                        },
                        "extension_type": {
                          "type": "string",
                          "description": "The type of extension:  \n* `user`  \n* `callQueue` \n* `autoReceptionist` \n* `sharedLineGroup`",
                          "example": "user",
                          "enum": [
                            "user",
                            "callQueue",
                            "autoReceptionist",
                            "sharedLineGroup"
                          ]
                        },
                        "display_name": {
                          "type": "string",
                          "description": "The extension's name.",
                          "example": "user A"
                        }
                      },
                      "description": "The callee object that contains information of the callee."
                    },
                    "caller": {
                      "type": "object",
                      "properties": {
                        "codec": {
                          "type": "string",
                          "description": "The audio codec.",
                          "example": "ES8311"
                        },
                        "device_private_ip": {
                          "type": "string",
                          "description": "This setting displays the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "example": "10.100.111.237"
                        },
                        "device_public_ip": {
                          "type": "string",
                          "description": "This setting displays the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                          "example": "38.99.100.2"
                        },
                        "device_type": {
                          "type": "string",
                          "description": "The device type, and if applicable, its version number. Acceptable device types: \n* `Windows_Client` \n* `MAC_Client` \n* `Linux_Client`  \n* `Android_Phone` \n* `IOS_Phone` \n* `Android_Pad` \n* `IOS_Pad` \n* [Zoom Phone Appliance](https://support.zoom.us/hc/en-us/articles/360001299063#h_cc0dac0d-44aa-4fb6-8e39-359166c38715) \n* `Windows_VDI_Client` \n* `MAC_VDI_Client` \n* `Linux_VDI_Client` ",
                          "example": "MAC_Client"
                        },
                        "extension_number": {
                          "type": "string",
                          "description": "The full extension number of the caller.",
                          "example": "100152"
                        },
                        "headset": {
                          "type": "string",
                          "description": "The headset the caller uses for the call.",
                          "example": "Edifier"
                        },
                        "isp": {
                          "type": "string",
                          "description": "ISP.",
                          "example": "Cogent Communications"
                        },
                        "microphone": {
                          "type": "string",
                          "description": "The microphone the caller uses for the call.",
                          "example": "+12053194087"
                        },
                        "phone_number": {
                          "type": "string",
                          "description": "The phone number of the caller in E164 format.",
                          "example": "+12053194087"
                        },
                        "site_id": {
                          "type": "string",
                          "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).",
                          "example": "ZNWikLeVSjuaMvUoxFqCuw"
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of the extension for `user`, `callQueue`, `autoReceptionist`, or `sharedLineGroup`.",
                          "example": "S5ODD6U3RcGs7H01n8vswA"
                        },
                        "extension_type": {
                          "type": "string",
                          "description": "The type of extension:  \n* `user`  \n* `callQueue` \n* `autoReceptionist` \n* `sharedLineGroup`",
                          "example": "user",
                          "enum": [
                            "user",
                            "callQueue",
                            "autoReceptionist",
                            "sharedLineGroup"
                          ]
                        },
                        "display_name": {
                          "type": "string",
                          "description": "The extension's name.",
                          "example": "user B"
                        }
                      },
                      "description": "The caller object that contains information of the caller."
                    },
                    "date_time": {
                      "type": "string",
                      "description": "The date and time when the call started.",
                      "example": "2022-04-01T03:05:18Z"
                    },
                    "direction": {
                      "type": "string",
                      "description": "The direction of the call. \nThe value of this field can be either `internal` or `outbound`.",
                      "example": "internal"
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The duration of the call in seconds.",
                      "example": 27
                    },
                    "mos": {
                      "type": "string",
                      "description": " The Mean Opinion Score (MOS). \n \n Zoom uses MOS as the main measurement to report on voice quality. MOS measures voice quality on a scale of one to five. A score of one indicates unacceptable voice quality for all users. A score of five is the best voice quality.",
                      "example": "3.6"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:read:admin", "phone:read:call_log:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:call_log:admin"]
        }
      }
    },
    "/phone/metrics/emergency_services/default_emergency_address/users": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "List default emergency address users",
        "description": "Returns the users who provide a default personal emergency address rather than a default site address or default account address.   \n\n**Prerequisites:** \n* Pro or higher account plan with Zoom phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:default_emergency_address:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listUserDefaultEmergencyAddress",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "The status of **Default Emergency Address**.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "set",
              "enum": ["set", "not_set"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The site's ID.",
            "required": false,
            "schema": { "type": "string", "example": "NjHmTu16Qfe8yOiNJuekXA" }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The name, email, or extension number of the user.",
            "required": false,
            "schema": { "type": "string", "example": "james" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes, and the maximu  page number is 100.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "T6WMY4fJBIAlxPUiqRtwvQS9dvsq8AoRam2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n Locations returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "6VXOgUaNNeZ7qL7bENvXPgclgeZ3bf3nbj2"
                    },
                    "page_size": {
                      "type": "number",
                      "description": "The total number of records returned from a single API call.",
                      "example": 1
                    },
                    "total_records": {
                      "type": "number",
                      "description": "The total number of records found for this query.",
                      "example": 6
                    },
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "The user's email.",
                            "example": "test.user@gmail.com"
                          },
                          "user_display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "James Lu"
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "The user's extension ID.",
                            "example": "VodZOCkyRM-wfOqr1xmuMQ"
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "The user's extension number.",
                            "format": "int64",
                            "example": 10010
                          },
                          "site_name": {
                            "type": "string",
                            "description": "The site's name.",
                            "example": "Main Site"
                          },
                          "site_id": {
                            "type": "string",
                            "description": "The unique identifier of the site.",
                            "example": "oB18huSERjqbzrsyL2bD5w"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of **Default Emergency Address**.",
                            "example": "set",
                            "enum": ["set", "not_set"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `802` <br>\n Data is not ready, please try again later <br>\n**Error Code:** `8001` <br>\n Site does not exist <br>\n**Error Code:** `400` <br>\n The next page token is invalid or expired. <br>\n**Error Code:** `400` <br>\n status can't be empty. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:default_emergency_address:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:default_emergency_address:admin"]
        }
      }
    },
    "/phone/metrics/emergency_services/detectable_personal_location/users": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "List detectable personal location users",
        "description": "Returns the users who created one or more detectable personal locations with associated network data. (Exclude users didn't enable Location Permission on client.) \n\n**Prerequisites:** \n* Pro or higher account plan with Zoom phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:detectable_personal_location:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listUserDetectablePersonalLocation",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "The status of **Detectable Personal Location**.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "set",
              "enum": ["set", "not_set"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The site's ID.",
            "required": false,
            "schema": { "type": "string", "example": "NjHmTu16Qfe8yOiNJuekXA" }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The name, email, or extension number of the user.",
            "required": false,
            "schema": { "type": "string", "example": "james" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes, and the maximum page number is 100.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "T6WMY4fJBIAlxPUiqRtwvQS9dvsq8AoRam2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n Locations returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "6VXOgUaNNeZ7qL7bENvXPgclgeZ3bf3nbj2"
                    },
                    "page_size": {
                      "type": "number",
                      "description": "The total number of records returned from a single API call.",
                      "example": 1
                    },
                    "total_records": {
                      "type": "number",
                      "description": "The total number of records found for this query.",
                      "example": 6
                    },
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "The user's email.",
                            "example": "test.user@gmail.com"
                          },
                          "user_display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "James Lu"
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "The user's extension ID.",
                            "example": "VodZOCkyRM-wfOqr1xmuMQ"
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "The user's extension number.",
                            "format": "int64",
                            "example": 10010
                          },
                          "site_name": {
                            "type": "string",
                            "description": "The site's name.",
                            "example": "Main Site"
                          },
                          "site_id": {
                            "type": "string",
                            "description": "The unique identifier of the site.",
                            "example": "oB18huSERjqbzrsyL2bD5w"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of **Detectable Personal Location**.",
                            "example": "set",
                            "enum": ["set", "not_set"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `802` <br>\n Data is not ready, please try again later <br>\n**Error Code:** `8001` <br>\n Site does not exist <br>\n**Error Code:** `400` <br>\n status can't be empty. <br>\n**Error Code:** `400` <br>\n The next page token is invalid or expired. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:detectable_personal_location:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:detectable_personal_location:admin"]
        }
      }
    },
    "/phone/metrics/emergency_services/nomadic_emergency_services/users": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "List nomadic emergency services users",
        "description": "Returns users who have been enabled for nomadic emergency services.\n\n**Prerequisites:** \n* Pro or higher account plan with Zoom phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:nomadic_emergency_services:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listUserNomadicEmergencyServices",
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "description": "The status of **Nomadic Emergency Services is disabled**.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "enabled",
              "enum": ["enabled", "disabled"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The site's ID.",
            "required": false,
            "schema": { "type": "string", "example": "NjHmTu16Qfe8yOiNJuekXA" }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The name, email, or extension number of the user.",
            "required": false,
            "schema": { "type": "string", "example": "james" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes, and the max page number is 100.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "T6WMY4fJBIAlxPUiqRtwvQS9dvsq8AoRam2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n Locations returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "6VXOgUaNNeZ7qL7bENvXPgclgeZ3bf3nbj2"
                    },
                    "page_size": {
                      "type": "number",
                      "description": "The total number of records returned from a single API call.",
                      "example": 1
                    },
                    "total_records": {
                      "type": "number",
                      "description": "The total number of records found for this query.",
                      "example": 6
                    },
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "The user's email.",
                            "example": "test.user@gmail.com"
                          },
                          "user_display_name": {
                            "type": "string",
                            "description": "The user's name.",
                            "example": "James Lu"
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "The user's extension ID.",
                            "example": "VodZOCkyRM-wfOqr1xmuMQ"
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "The user's extension number.",
                            "format": "int64",
                            "example": 10010
                          },
                          "site_name": {
                            "type": "string",
                            "description": "The site's name.",
                            "example": "Main Site"
                          },
                          "site_id": {
                            "type": "string",
                            "description": "The unique identifier of the site.",
                            "example": "oB18huSERjqbzrsyL2bD5w"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of **Nomadic Emergency Services**. ",
                            "example": "enabled",
                            "enum": ["enabled", "disabled"]
                          },
                          "reason_for_disabling": {
                            "type": "integer",
                            "description": "The reason of disabling nomadic emergency services, only returned if service is disabled\n`1`: Nomadic Emergency Services is disabled\n`2`: Routing emergency calls to The Safety Team and PSAP is disabled\n`3`: The assigned number of this user is not a US/CA number\n`4`: Placing emergency calls to PSAP for extension-only users is disabled, or no US/CA numbers has been assigned to Emergency Number Pool.\n`5`: This user is only assigned with BYOC numbers and BYOC carriers were set to route the emergency calls, or for extension-only users, only BYOC numbers has been assigned to Emergency Number Pool and the BYOC carrier was set to route the emergency calls.",
                            "format": "int32",
                            "example": 2,
                            "enum": [1, 2, 3, 4, 5]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `802` <br>\n Data is not ready, please try again later <br>\n**Error Code:** `8001` <br>\n Site does not exist <br>\n**Error Code:** `400` <br>\n The next page token is invalid or expired. <br>\n**Error Code:** `400` <br>\n status can't be empty. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:nomadic_emergency_services:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:nomadic_emergency_services:admin"]
        }
      }
    },
    "/phone/metrics/emergency_services/realtime_location/devices": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "List real time location for IP phones",
        "description": "Returns currently detected location of IP phones.\n\n**Prerequisites:** \n* Pro or higher account plan with Zoom phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:realtime_location_devices:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listPhoneRealtimelocation",
        "parameters": [
          {
            "name": "location_type",
            "in": "query",
            "description": "The location's type. ",
            "required": true,
            "schema": {
              "type": "string",
              "example": "personal",
              "enum": ["company", "personal", "unknown"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The site's ID.",
            "required": false,
            "schema": { "type": "string", "example": "NjHmTu16Qfe8yOiNJuekXA" }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The device name or device MAC address.",
            "required": false,
            "schema": { "type": "string", "example": "Desk Phone" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes, and the maximum page number is 100.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "T6WMY4fJBIAlxPUiqRtwvQS9dvsq8AoRam2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n Locations returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "device_id": {
                            "type": "string",
                            "description": "The device ID.",
                            "example": "-tDdYIstSumpA0L13GztIQ"
                          },
                          "device_name": {
                            "type": "string",
                            "description": "The device's name.",
                            "example": "Desk Phone"
                          },
                          "site_id": {
                            "type": "string",
                            "description": "The unique identifier of the site.",
                            "example": "NjHmTu16Qfe8yOiNJuekXA"
                          },
                          "site_name": {
                            "type": "string",
                            "description": "The site name.",
                            "example": "HF site"
                          },
                          "public_ip": {
                            "type": "string",
                            "description": "The device's public IP address.",
                            "example": "192.168.1.1"
                          },
                          "private_ip": {
                            "type": "string",
                            "description": "The device's subnet or private IP address.",
                            "example": "192.168.1.1"
                          },
                          "bssid": {
                            "type": "string",
                            "description": "The BSSID (Basic Service Set Identifiers) of the wifi network which the device connected to",
                            "example": "SA43YjfBTS6gJbUpfvIziQ"
                          },
                          "emergency_address": {
                            "type": "string",
                            "description": "The emergency location's address.",
                            "example": "55 ALMADEN BLVD"
                          },
                          "mac_address": {
                            "type": "string",
                            "description": "The MAC address or serial number of the device.",
                            "example": "543968a78ee7"
                          },
                          "location_name": {
                            "type": "string",
                            "description": "The location's name.",
                            "example": "example location"
                          },
                          "network_switch": {
                            "type": "object",
                            "properties": {
                              "port": {
                                "type": "string",
                                "description": "The port of the network switch.",
                                "example": "2"
                              },
                              "mac_address": {
                                "type": "string",
                                "description": "The MAC address or serial number of network switch.",
                                "example": "543968a78ee7"
                              }
                            }
                          },
                          "location_type": {
                            "type": "string",
                            "description": "The type of location: `personal`, `company`, `unknown`",
                            "example": "personal",
                            "enum": ["company", "personal", "unknown"]
                          },
                          "assigned_info": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extension_id": {
                                  "type": "string",
                                  "description": "The extension ID of the user's Zoom Phone.",
                                  "example": "IqoQmDRqS-aIoXqV_FZ88w"
                                },
                                "extension_number": {
                                  "type": "integer",
                                  "description": "The extension number of the user's Zoom Phone.",
                                  "format": "int64",
                                  "example": 10010
                                },
                                "user_email": {
                                  "type": "string",
                                  "description": "The email of the user.",
                                  "example": "test.user@gmai.com"
                                },
                                "user_display_name": {
                                  "type": "string",
                                  "description": "The name of the user.",
                                  "example": "James Lu"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records found for this query.",
                      "example": 1
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The total number of records returned from a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "T6WMY4fJBIAlxPUiqRtwvQS9dvsq8AoRam2"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `8001` <br>\n Site does not exist <br>\n**Error Code:** `400` <br>\n location_type can't be empty. <br>\n**Error Code:** `400` <br>\n The next page token is invalid or expired. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:realtime_location_devices:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:realtime_location_devices:admin"]
        }
      }
    },
    "/phone/metrics/emergency_services/realtime_location/users": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "List real time location for users",
        "description": "Returns the user's currently detected location. (Excludes users who didn't enable location permission on the client.)  \n\n**Prerequisites:** \n* Pro or higher account plan with Zoom phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:realtime_location_users:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listUserRealtimeLocation",
        "parameters": [
          {
            "name": "location_type",
            "in": "query",
            "description": "The location's type.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "personal",
              "enum": ["company", "personal", "unknown"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The site's ID.",
            "required": false,
            "schema": { "type": "string", "example": "NjHmTu16Qfe8yOiNJuekXA" }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The name, email or extension number of the user.",
            "required": false,
            "schema": { "type": "string", "example": "james" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes, and the max page number is 100.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "T6WMY4fJBIAlxPUiqRtwvQS9dvsq8AoRam2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n Locations returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "6VXOgUaNNeZ7qL7bENvXPgclgeZ3bf3nbj2"
                    },
                    "page_size": {
                      "type": "number",
                      "description": "The total number of records returned from a single API call.",
                      "example": 1
                    },
                    "total_records": {
                      "type": "number",
                      "description": "The total number of records found for this query.",
                      "example": 6
                    },
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "email": {
                            "type": "string",
                            "description": "The user's email",
                            "example": "test.user@gmail.com"
                          },
                          "bssid": {
                            "type": "string",
                            "description": "The BSSID (Basic Service Set Identifiers) of the wifi network which the user is connected to.",
                            "example": "d0:15:a6:1f:4f:35"
                          },
                          "user_display_name": {
                            "type": "string",
                            "description": "The user's name",
                            "example": "James Lu"
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "The user's extension ID.",
                            "example": "VodZOCkyRM-wfOqr1xmuMQ"
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "The user's extension number.",
                            "format": "int64",
                            "example": 10010
                          },
                          "site_name": {
                            "type": "string",
                            "description": "The site's name.",
                            "example": "Main Site"
                          },
                          "site_id": {
                            "type": "string",
                            "description": "The unique identifier of the site.",
                            "example": "oB18huSERjqbzrsyL2bD5w"
                          },
                          "public_ip": {
                            "type": "string",
                            "description": "The device's public IP address.",
                            "example": "66.172.49.116"
                          },
                          "private_ip": {
                            "type": "string",
                            "description": "The device's subnet or private IP address.",
                            "example": "10.100.161.25"
                          },
                          "emergency_address": {
                            "type": "string",
                            "description": "The emergency location's address.",
                            "example": "55 ALMADEN BLVD"
                          },
                          "location_name": {
                            "type": "string",
                            "description": "The location's name.",
                            "example": "example location"
                          },
                          "network_switch": {
                            "type": "object",
                            "properties": {
                              "port": {
                                "type": "string",
                                "description": "The port of the network switch.",
                                "example": "2"
                              },
                              "mac_address": {
                                "type": "string",
                                "description": "The MAC address or serial number of network switch.",
                                "example": "543968a78ee7"
                              }
                            }
                          },
                          "location_type": {
                            "type": "string",
                            "description": "The type of location: `company`, `personal`, `unknown`",
                            "example": "unknown",
                            "enum": ["company", "personal", "unknown"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `8001` <br>\n Site does not exist <br>\n**Error Code:** `400` <br>\n location_type can't be empty. <br>\n**Error Code:** `400` <br>\n The next page token is invalid or expired. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:realtime_location_users:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:realtime_location_users:admin"]
        }
      }
    },
    "/phone/metrics/location_tracking": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "List tracked locations",
        "description": "Lists the tracked locations. \n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n* Account owner or admin permissions\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_tracked_locations:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listTrackedLocations",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "The type of response data. Supports  only six responses at this time.\n`1`: Nomadic Emergency Services.\n`2`: Users Permission for Location Sharing.\n`3`: Default Emergency Address.\n`4`: Detectable Personal Location.\n`5`: Real-time Location for Users.\n`6`: Real-time Location for IP Phones.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 6,
              "enum": [1, 2, 3, 4, 5, 6]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The site's ID.",
            "required": false,
            "schema": { "type": "string", "example": "NjHmTu16Qfe8yOiNJuekXA" }
          },
          {
            "name": "location_type",
            "in": "query",
            "description": "The location's type. 'Company' is the default value.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "personal",
              "enum": ["company", "personal", "unknown"]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The device name or device MAC address.",
            "required": false,
            "schema": { "type": "string", "example": "device name" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n Locations returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "location_tracking": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assignees": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extension_number": {
                                  "type": "integer",
                                  "description": "The extension number of the user's Zoom Phone.",
                                  "format": "int64",
                                  "example": 10010
                                },
                                "id": {
                                  "type": "string",
                                  "description": "The user ID of the user with the assigned device.",
                                  "example": "IqoQmDRqS-aIoXqV_FZ88w"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the user.",
                                  "example": "testUser"
                                }
                              }
                            }
                          },
                          "city": {
                            "type": "string",
                            "description": "The city of the location.",
                            "example": "SAN JOSE"
                          },
                          "country": {
                            "maxLength": 2,
                            "minLength": 2,
                            "type": "string",
                            "description": "The two-lettered country code (Aplha-2 code in ISO-3166 format) standard of the location.",
                            "example": "US"
                          },
                          "device": {
                            "type": "object",
                            "properties": {
                              "bssid": {
                                "type": "string",
                                "description": "The device's BSSIDs (Basic Service Set Identifiers).",
                                "example": "SA43YjfBTS6gJbUpfvIziQ"
                              },
                              "id": {
                                "type": "string",
                                "description": "The device ID.",
                                "example": "-tDdYIstSumpA0L13GztIQ"
                              },
                              "mac_address": {
                                "type": "string",
                                "description": "The MAC address or serial number of the device.",
                                "example": "543968a78ee7"
                              },
                              "name": {
                                "type": "string",
                                "description": "The device name.",
                                "example": "Desk Phone"
                              },
                              "private_ip": {
                                "type": "string",
                                "description": "The device's subnet or private IP address.",
                                "example": "192.168.1.1"
                              },
                              "public_ip": {
                                "type": "string",
                                "description": "The device's public IP address.",
                                "example": "192.168.1.1"
                              }
                            }
                          },
                          "emergency_address": {
                            "type": "string",
                            "description": "The emergency location's address.",
                            "example": "55 ALMADEN BLVD"
                          },
                          "name": {
                            "type": "string",
                            "description": "The location's name.",
                            "example": "testLocation"
                          },
                          "network_switch": {
                            "type": "object",
                            "properties": {
                              "mac_address": {
                                "type": "string",
                                "description": "The MAC address or serial number of network switch.",
                                "example": "543968a78ee7"
                              },
                              "port": {
                                "type": "string",
                                "description": "The port of the network switch.",
                                "example": "2"
                              }
                            }
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The unique identifier of the site.",
                                "example": "NjHmTu16Qfe8yOiNJuekXA"
                              },
                              "name": {
                                "type": "string",
                                "description": "The site name.",
                                "example": "testSite"
                              }
                            }
                          },
                          "type": {
                            "type": "string",
                            "description": "The type of location",
                            "example": "personal",
                            "enum": ["company", "personal", "unknown"]
                          },
                          "zip": {
                            "type": "string",
                            "description": "The zip code of the location.",
                            "example": "95113"
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "T6WMY4fJBIAlxPUiqRtwvQS9dvsq8AoRam2"
                    },
                    "page_size": {
                      "maximum": 100,
                      "type": "integer",
                      "description": "The total number of records returned from a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records found for this query.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_tracked_locations:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_tracked_locations:admin"]
        }
      }
    },
    "/phone/metrics/past_calls": {
      "get": {
        "tags": ["Dashboard"],
        "summary": "List past call metrics",
        "description": " Returns all the call logs metrics of the account from the selected time period. The call logs provide a record of all incoming and outgoing calls over Zoom Phone in an account. You can use query parameters to filter the response by metrics of the call (such as date, phone number, extension number and quality type). \n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_call_logs:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "listPastCallMetrics",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. If unspecified, returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          },
          {
            "name": "phone_number",
            "in": "query",
            "description": "This setting filters call logs of a specified phone number.",
            "required": false,
            "schema": { "type": "string", "example": "12058945458" }
          },
          {
            "name": "extension_number",
            "in": "query",
            "description": "This setting filters call logs of a specified extension number",
            "required": false,
            "schema": { "type": "string", "example": "1000001028" }
          },
          {
            "name": "quality_type",
            "in": "query",
            "description": "This setting filters call logs by voice quality. Zoom uses MOS of 3.5 as a general baseline to categorize calls by call quality. A MOS greater than or equal to 3.5 means good quality, while below 3.5 means poor quality.   \n   \n The value of this field can be one of the following:  \n \n* `good`: Retrieve call logs of the call(s) with good quality of voice.  \n \n* `bad`: Retrieve call logs of the call(s) with good quality of voice.  \n  \n",
            "required": false,
            "schema": {
              "type": "string",
              "example": "good",
              "enum": ["good", "bad"]
            }
          },
          {
            "name": "department",
            "in": "query",
            "description": "The department the extension belongs to.",
            "required": false,
            "schema": { "type": "string", "example": "Phone department" }
          },
          {
            "name": "cost_center",
            "in": "query",
            "description": "The cost center the extension belongs to.",
            "required": false,
            "schema": { "type": "string", "example": "Phone cost center" }
          },
          {
            "name": "directions",
            "in": "query",
            "description": "The directions of the call.",
            "required": false,
            "schema": {
              "maxItems": 3,
              "type": "array",
              "items": {
                "type": "string",
                "example": "inbound",
                "enum": ["inbound", "outbound", "internal"]
              }
            }
          },
          {
            "name": "durations",
            "in": "query",
            "description": "The duration of the call.   \n \n* `0`: The call that lasts 1 to 5 minutes.   \n \n* `1`: The call that lasts 5 to 10 minutes.   \n \n* `2`: The call that lasts more than 10 minutes.   \n \n* `3`: The call that lasts less than 1 minute.",
            "required": false,
            "schema": {
              "maxItems": 4,
              "type": "array",
              "items": { "type": "integer", "example": 1, "enum": [0, 1, 2, 3] }
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by call logs of a specific phone site.",
            "required": false,
            "schema": { "type": "string", "example": "SQv52YtkRLC2dwrDdYtGsA" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "T6WMY4fJBIAlxPUiqRtwvQS9dvsq8AoRam2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status code:** `200`  \n  List past call metrics successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_logs": {
                      "type": "array",
                      "description": "The call logs.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "call_id": {
                            "type": "string",
                            "description": "The unique identifier of the phone call.",
                            "example": "7081466125443483485"
                          },
                          "callee": {
                            "type": "object",
                            "properties": {
                              "codec": {
                                "type": "string",
                                "description": "The audio codec.",
                                "example": "ES8311"
                              },
                              "device_private_ip": {
                                "type": "string",
                                "description": "This setting displays the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                                "example": "10.100.111.237"
                              },
                              "device_public_ip": {
                                "type": "string",
                                "description": "This setting displays the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                                "example": "38.99.100.2"
                              },
                              "device_type": {
                                "type": "string",
                                "description": "The device type, and if applicable, its version number. Acceptable device types: \n* `Windows_Client` \n* `MAC_Client` \n* `Linux_Client`  \n* `Android_Phone` \n* `IOS_Phone` \n* `Android_Pad` \n* `IOS_Pad` \n* [Zoom Phone Appliance](https://support.zoom.us/hc/en-us/articles/360001299063#h_cc0dac0d-44aa-4fb6-8e39-359166c38715) \n* `Windows_VDI_Client` \n* `MAC_VDI_Client` \n* `Linux_VDI_Client` ",
                                "example": "MAC_Client"
                              },
                              "extension_number": {
                                "type": "string",
                                "description": "The full extension number of the callee.",
                                "example": "100994"
                              },
                              "headset": {
                                "type": "string",
                                "description": "The headset the callee uses for the call.",
                                "example": "Edifier"
                              },
                              "isp": {
                                "type": "string",
                                "description": "The internet service provider.",
                                "example": "Cogent Communications"
                              },
                              "microphone": {
                                "type": "string",
                                "description": "The microphone the callee uses for the call.",
                                "example": "+12053194087"
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "The phone number of the callee in E164 format.",
                                "example": "+12053194087"
                              },
                              "site_id": {
                                "type": "string",
                                "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).",
                                "example": "ZNWikLeVSjuaMvUoxFqCuw"
                              }
                            },
                            "description": "The callee object that contains information of the callee."
                          },
                          "caller": {
                            "type": "object",
                            "properties": {
                              "codec": {
                                "type": "string",
                                "description": "The audio codec.",
                                "example": "ES8311"
                              },
                              "device_private_ip": {
                                "type": "string",
                                "description": "This setting displays the device's private IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                                "example": "10.100.111.232"
                              },
                              "device_public_ip": {
                                "type": "string",
                                "description": "This setting displays the device's public IP address if the account has the `show_device_ip_for_call_log` parameter set to `enabled`.",
                                "example": "38.99.100.3"
                              },
                              "device_type": {
                                "type": "string",
                                "description": "The device type, and if applicable, its version number. Acceptable device types: \n* `Windows_Client` \n* `MAC_Client` \n* `Linux_Client`  \n* `Android_Phone` \n* `IOS_Phone` \n* `Android_Pad` \n* `IOS_Pad` \n* [Zoom Phone Appliance](https://support.zoom.us/hc/en-us/articles/360001299063#h_cc0dac0d-44aa-4fb6-8e39-359166c38715) \n* `Windows_VDI_Client` \n* `MAC_VDI_Client` \n* `Linux_VDI_Client` ",
                                "example": "MAC_Client"
                              },
                              "extension_number": {
                                "type": "string",
                                "description": "The full extension number of the caller.",
                                "example": "100152"
                              },
                              "headset": {
                                "type": "string",
                                "description": "The headset the caller uses for the call.",
                                "example": "Edifier"
                              },
                              "isp": {
                                "type": "string",
                                "description": "The internet service provider.",
                                "example": "Cogent Communications"
                              },
                              "microphone": {
                                "type": "string",
                                "description": "The microphone the caller uses for the call.",
                                "example": "+12053194087"
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "The phone number of the caller in E164 format.",
                                "example": "+12053194087"
                              },
                              "site_id": {
                                "type": "string",
                                "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).",
                                "example": "ZNWikLeVSjuaMvUoxFqCuw"
                              }
                            },
                            "description": "The caller object that contains information of the caller."
                          },
                          "date_time": {
                            "type": "string",
                            "description": "The date and time when the call started.",
                            "example": "2021-04-01T02:59:32Z"
                          },
                          "direction": {
                            "type": "string",
                            "description": "The direction of the call.",
                            "example": "internal",
                            "enum": ["inbound", "outbound", "internal"]
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The duration of the call in seconds.",
                            "example": 20
                          },
                          "mos": {
                            "type": "string",
                            "description": "The Mean Opinion Score (MOS). Zoom uses (MOS) as the main measurement to report on voice quality. MOS measures voice quality on a scale of one to five. A score of 1 indicates unacceptable voice quality for all users. A score of five is the best voice quality.",
                            "example": "4.5"
                          }
                        }
                      }
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date of the report.",
                      "example": "2021-03-31"
                    },
                    "to": {
                      "type": "string",
                      "description": "The end time and date of the report.",
                      "example": "2021-04-01"
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "T6WMY4fJBIAlxPUiqRtwvQS9dvsq8AoRam2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single call.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records available across all pages.",
                      "example": 20
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_call_logs:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_call_logs:admin"]
        }
      }
    },
    "/phone/devices/{deviceId}/line_keys": {
      "get": {
        "tags": ["Device Line Keys"],
        "summary": "Get device line keys information",
        "description": "Use this API to get information on the Zoom Phone device [line keys](https://support.zoom.us/hc/en-us/articles/4402415568397-Customizing-keys-for-devices-with-multiple-users) settings and position.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:read:admin`,`phone:read`\n\n**Granular Scopes:** `phone:read:device_line_keys`,`phone:read:device_line_keys:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "listDeviceLineKeySetting",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "schema": { "type": "string", "example": "yfWfRkZ_QPSNGuWKiAGYbQ" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nDevice line keys returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "device_id": {
                      "type": "string",
                      "description": "Device ID.",
                      "example": "yfWfRkZ_QPSNGuWKiAGYbQ"
                    },
                    "device_name": {
                      "type": "string",
                      "description": "Device name.",
                      "example": "ATA Device"
                    },
                    "positions": {
                      "type": "array",
                      "description": "Device line key position.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "index": {
                            "maximum": 300,
                            "minimum": 1,
                            "type": "integer",
                            "description": "The order of the device line key.",
                            "example": 1
                          },
                          "owner_extension_name": {
                            "type": "string",
                            "description": "Port owner name.",
                            "example": "Port owner name"
                          },
                          "owner_extension_number": {
                            "type": "integer",
                            "description": "Port owner extension number.",
                            "format": "int64",
                            "example": 123
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "Extension number of the Zoom Phone used by the `user` or `commonArea`.",
                            "format": "int64",
                            "example": 123
                          },
                          "extension_type": {
                            "type": "string",
                            "description": "Type of the assignee. Available only if the device is assigned.",
                            "example": "User",
                            "enum": ["User", "CommonArea"]
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "Extension ID of the `user` or `common area`.",
                            "example": "MjGXQfCxShapaxJDka7"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "Display name of the user or common area.",
                            "example": "Display name"
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number in E164 format.",
                            "example": "+12055437350"
                          },
                          "outbound_caller_ids": {
                            "type": "array",
                            "description": "Outbound caller ids.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extension_id": {
                                  "type": "string",
                                  "description": "Extension ID of the `user` or `common area`.",
                                  "example": "MjGXQfCxShapaxJDka7"
                                },
                                "phone_number": {
                                  "type": "string",
                                  "description": "The phone number in E164 format.",
                                  "example": "+12055437350"
                                },
                                "usage_type": {
                                  "type": "string",
                                  "description": "Phone number usage type.",
                                  "example": "Main Company Number",
                                  "enum": [
                                    "Main Company Number",
                                    "Additional Company Number",
                                    "Direct Number",
                                    "Phone Number"
                                  ]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  },
                  "description": "Device line key setting."
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read",
              "phone:read:device_line_keys",
              "phone:read:device_line_keys:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin", "phone:read"],
          "x-granular-scopes": [
            "phone:read:device_line_keys",
            "phone:read:device_line_keys:admin"
          ]
        }
      },
      "patch": {
        "tags": ["Device Line Keys"],
        "summary": "Batch update device line key position",
        "description": "Use this API to batch update the Zoom Phone device [line key position](https://support.zoom.us/hc/en-us/articles/4402415568397-Customizing-keys-for-devices-with-multiple-users) information.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`,`phone:write`\n\n**Granular Scopes:** `phone:update:device_line_keys`,`phone:update:device_line_keys:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "batchUpdateDeviceLineKeySetting",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "schema": { "type": "string", "example": "yfWfRkZ_QPSNGuWKiAGYbQ" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "positions": {
                    "type": "array",
                    "description": "Device line key position.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "extension_id": {
                          "type": "string",
                          "description": "Extension ID of the `user` or `common area`.",
                          "example": "MjGXQfCxShapaxJDka7"
                        },
                        "index": {
                          "maximum": 300,
                          "minimum": 1,
                          "type": "integer",
                          "description": "The order of the device line key.",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n  **No Content**  \n \nDevice line keys and positions updated sucessfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nExtension ID does not exist: {0}. <br>\nIndex is invalid: {0}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone:update:device_line_keys",
              "phone:update:device_line_keys:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin", "phone:write"],
          "x-granular-scopes": [
            "phone:update:device_line_keys",
            "phone:update:device_line_keys:admin"
          ]
        }
      }
    },
    "/phone/dial_by_name_directory/extensions": {
      "get": {
        "tags": ["Dial by Name Directory"],
        "summary": "List users in directory",
        "description": "Use this API to get users that are in or not in a [directory](https://support.zoom.us/hc/en-us/articles/4404938949389-Using-a-dial-by-name-directory).\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:directory:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "ListUsersFromDirectory",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "in_directory",
            "in": "query",
            "description": "Whether the user belongs to the directory.",
            "required": false,
            "schema": { "type": "boolean", "example": false, "default": false }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).",
            "required": true,
            "schema": { "type": "string", "example": "LFD8Bb63f" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nSuccessfully listed the user information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size.",
                      "example": "FHBv62"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The size of the page.",
                      "example": 10
                    },
                    "result": {
                      "type": "array",
                      "description": "User list.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "extension_id": {
                            "type": "string",
                            "description": "Extension ID.",
                            "example": "FDFU83j"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "Display name.",
                            "example": "CUSTOMERS"
                          },
                          "email": {
                            "type": "string",
                            "description": "Email.",
                            "example": "email@example.com"
                          },
                          "extension_number": {
                            "type": "string",
                            "description": "Extension number.",
                            "example": "1933"
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the site.",
                                "example": "flej2f"
                              },
                              "name": {
                                "type": "string",
                                "description": "Site Name.",
                                "example": "New Site"
                              }
                            },
                            "description": "Site."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `2001` <br>\nAccount does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:read:admin", "phone:read:directory:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:directory:admin"]
        }
      },
      "post": {
        "tags": ["Dial by Name Directory"],
        "summary": "Add users to a directory",
        "description": "Use this API to add users to a [directory](https://support.zoom.us/hc/en-us/articles/4404938949389-Using-a-dial-by-name-directory).\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:directory:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "AddUsersToDirectory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["site_id"],
                "type": "object",
                "properties": {
                  "site_id": {
                    "type": "string",
                    "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites)",
                    "example": "pei2g0vFDF"
                  },
                  "extension_ids": {
                    "type": "array",
                    "description": "The IDs of user's extension. If the value is not specified, only add value of `site_id` to `included sites`",
                    "items": { "type": "string", "example": "O3JFBAnds" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**\n\n\nSuccessfully added users to the directory."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `2001` <br>\nAccount does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:directory:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:directory:admin"]
        }
      },
      "delete": {
        "tags": ["Dial by Name Directory"],
        "summary": "Delete users from a directory",
        "description": "Use this API to delete users from the [directory](https://support.zoom.us/hc/en-us/articles/4404938949389-Using-a-dial-by-name-directory).\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:directory:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "DeleteUsersFromDirectory",
        "parameters": [
          {
            "name": "site_id",
            "in": "query",
            "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites)",
            "required": true,
            "schema": { "type": "string", "example": "fdfdkq3k" }
          },
          {
            "name": "extension_ids",
            "in": "query",
            "description": "Extension Ids. If the value is not specified, delete the value of `site_id` from  `included sites` and delete all users related with `site_id` from directory.",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string", "example": "derek" }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\n\nSuccessfully deleted users from the directory."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `2001` <br>\nAccount does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:directory:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:directory:admin"]
        }
      }
    },
    "/phone/sites/{siteId}/dial_by_name_directory/extensions": {
      "get": {
        "tags": ["Dial by Name Directory"],
        "summary": "List users in a directory by site",
        "description": "Use this API to get users that are in or not in a [directory](https://support.zoom.us/hc/en-us/articles/4404938949389-Using-a-dial-by-name-directory) of the specified site.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:directory:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "ListUsersFromDirectoryBySite",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).",
            "required": true,
            "schema": { "type": "string", "example": "fef3ggd" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "in_directory",
            "in": "query",
            "description": "Whether the user belongs to the directory.",
            "required": false,
            "schema": { "type": "boolean", "example": false, "default": false }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) to which users to get belongs.",
            "required": false,
            "schema": { "type": "string", "example": "fefeqd" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nSuccessfully listed the user information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size.",
                      "example": "lfei3g"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The size of the page.",
                      "example": 30
                    },
                    "result": {
                      "type": "array",
                      "description": "User list.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "extension_id": {
                            "type": "string",
                            "description": "Extension ID.",
                            "example": "feq3g"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "Display name.",
                            "example": "Name"
                          },
                          "email": {
                            "type": "string",
                            "description": "Email.",
                            "example": "example@example.com"
                          },
                          "extension_number": {
                            "type": "string",
                            "description": "Extension number.",
                            "example": "1003"
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the site.",
                                "example": "fdjl23"
                              },
                              "name": {
                                "type": "string",
                                "description": "Site Name.",
                                "example": "New site"
                              }
                            },
                            "description": "Site."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `2001` <br>\nAccount does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:read:admin", "phone:read:directory:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:directory:admin"]
        }
      },
      "post": {
        "tags": ["Dial by Name Directory"],
        "summary": "Add users to a directory of a site",
        "description": "Use this API to add users to a [directory](https://support.zoom.us/hc/en-us/articles/4404938949389-Using-a-dial-by-name-directory) of the specified site.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:directory:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "AddUsersToDirectoryBySite",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).",
            "required": true,
            "schema": { "type": "string", "example": "fdfdko2" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "site_id": {
                    "type": "string",
                    "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) to which users to add  belongs",
                    "example": "fdfdwb"
                  },
                  "extension_ids": {
                    "type": "array",
                    "description": "The IDs of user's extension. If the value is not specified, only add value of `site_id` to `included sites`",
                    "items": { "type": "string", "example": "qdvd3fg" }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**\n\n\nSuccessfully added users to the directory."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `2001` <br>\nAccount does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:directory:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:directory:admin"]
        }
      },
      "delete": {
        "tags": ["Dial by Name Directory"],
        "summary": "Delete users from a directory of a site",
        "description": "Use this API to delete users from a [directory](https://support.zoom.us/hc/en-us/articles/4404938949389-Using-a-dial-by-name-directory) of the specified site.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:directory:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "DeleteUsersFromDirectoryBySite",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites).",
            "required": true,
            "schema": { "type": "string", "example": "fo2if" }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) to which users to delete belongs",
            "required": false,
            "schema": { "type": "string", "example": "fleoq3" }
          },
          {
            "name": "extension_ids",
            "in": "query",
            "description": "Extension Ids. If the value is not specified, delete the value of `site_id` from  `included sites` and delete all users related with `site_id` from directory",
            "required": false,
            "schema": {
              "type": "array",
              "items": { "type": "string", "example": "fiefi02kd" }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\n\nSuccessfully deleted users from the directory."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `2001` <br>\nAccount does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:directory:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:directory:admin"]
        }
      }
    },
    "/phone/emergency_addresses": {
      "get": {
        "tags": ["Emergency Addresses"],
        "summary": "List emergency addresses",
        "description": "Lists the emergency addresses.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_emergency_addresses:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listEmergencyAddresses",
        "parameters": [
          {
            "name": "site_id",
            "in": "query",
            "description": "The emergency address site ID.",
            "required": false,
            "schema": { "type": "string", "example": "SQv52YtkRLC2dwrDdYtGsA" }
          },
          {
            "name": "user_id",
            "in": "query",
            "description": "User ID to which the personal emergency address belongs.",
            "required": false,
            "schema": { "type": "string", "example": "DnEopNmXQEGU2uvvzjgojw" }
          },
          {
            "name": "level",
            "in": "query",
            "description": "The emergency address owner level:\n\n* `0` - Account/Company-level emergency address. \n\n* `1` - User/Personal-level emergency address.\n\n* `2` - Unknown company/pending emergency address.",
            "required": false,
            "schema": { "type": "integer", "example": 1, "enum": [0, 1, 2] }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The emergency address verification status: \n* `1` &mdash; Verification not Required. \n* `2` &mdash; Unverified. \n* `3` &mdash; Verification requested. \n* `4` &mdash; Verified. \n* `5` &mdash; Rejected. \n* `6` &mdash; Verification failed.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1,
              "enum": [1, 2, 3, 4, 5, 6]
            }
          },
          {
            "name": "address_keyword",
            "in": "query",
            "description": "Keyword(s) to filter emergency addresses. You can filter by either: \n* Address Line 1. \n* Address Line 2. \n* City. \n* State Abbreviation. \n* Zip Code.",
            "required": false,
            "schema": { "type": "string", "example": "55 ALMADEN BLVD" }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`\n\nEmergency addresses listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "emergency_addresses": {
                      "type": "array",
                      "description": "Information about emergency addresses.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "address_line1": {
                            "type": "string",
                            "description": "The emergency address line 1.",
                            "example": "55 ALMADEN BLVD"
                          },
                          "address_line2": {
                            "type": "string",
                            "description": "The emergency address line 2.",
                            "example": "8 Floor"
                          },
                          "city": {
                            "type": "string",
                            "description": "The emergency address city.",
                            "example": "SAN JOSE"
                          },
                          "country": {
                            "type": "string",
                            "description": "The emergency address country.",
                            "example": "US"
                          },
                          "id": {
                            "type": "string",
                            "description": "The emergency address ID.",
                            "example": "Qza2T_KATwCeUfTkzGsOmQ"
                          },
                          "is_default": {
                            "type": "boolean",
                            "description": "Indicates whether the emergency address is default or not.",
                            "example": true
                          },
                          "level": {
                            "type": "integer",
                            "description": "The emergency address owner level:\n\n* `0` - Account/Company-level emergency address. \n\n* `1` - User/Personal-level emergency address.\n\n* `2` - Unknown company/pending emergency address.",
                            "example": 1,
                            "enum": [0, 1, 2]
                          },
                          "owner": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "integer",
                                "description": "The emergency address owner extension number.",
                                "format": "int64",
                                "example": 101002
                              },
                              "id": {
                                "type": "string",
                                "description": "The emergency address owner ID.",
                                "example": "y9th648XRfSL9S61p1TsBw"
                              },
                              "name": {
                                "type": "string",
                                "description": "The emergency address owner name.",
                                "example": "ZOOM_API Test"
                              }
                            },
                            "description": "The emergency address owner information for a user-level emergency address."
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The site's ID.",
                                "example": "SQv52YtkRLC2dwrDdYtGsA"
                              },
                              "name": {
                                "type": "string",
                                "description": "The site's name.",
                                "example": "Main site"
                              }
                            },
                            "description": "The emergency address site information."
                          },
                          "state_code": {
                            "type": "string",
                            "description": "The emergency address state code.",
                            "example": "CA"
                          },
                          "status": {
                            "type": "integer",
                            "description": "The emergency address verification status: \n* `1` &mdash; Verification not required. \n* `2` &mdash; Unverified. \n* `3` &mdash; Verification requested. \n* `4` &mdash; Verified. \n* `5` &mdash; Rejected. \n* `6` &mdash; Verification failed.",
                            "example": 1,
                            "enum": [1, 2, 3, 4, 5, 6]
                          },
                          "zip": {
                            "type": "string",
                            "description": "The emergency address zip code.",
                            "example": "95113"
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "T6WMY4fJBIAlxPUiqRtwvQS9dvsq8AoRam2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 20
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nSite does not exist: {site_id}\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_emergency_addresses:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_emergency_addresses:admin"]
        }
      },
      "post": {
        "tags": ["Emergency Addresses"],
        "summary": "Add an emergency address",
        "description": "Adds an emergency address. If the address provided is not an exact match, the system generated corrected address will be used. \n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:emergency_address:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addEmergencyAddress",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "address_line1",
                  "city",
                  "country",
                  "state_code",
                  "zip"
                ],
                "type": "object",
                "properties": {
                  "address_line1": {
                    "type": "string",
                    "description": "The emergency address line 1.",
                    "example": "55 Almaden Blvd"
                  },
                  "address_line2": {
                    "type": "string",
                    "description": "The emergency address line 2.",
                    "example": "8 Floor"
                  },
                  "city": {
                    "type": "string",
                    "description": "The emergency address city.",
                    "example": "San Jose"
                  },
                  "country": {
                    "type": "string",
                    "description": "The emergency address country.",
                    "example": "US"
                  },
                  "is_default": {
                    "type": "boolean",
                    "description": "Indicates whether the emergency address is default or not.",
                    "example": true
                  },
                  "site_id": {
                    "type": "string",
                    "description": "The site ID. Nullable if 'user_id' is not null.",
                    "example": "SQv52YtkRLC2dwrDdYtGsA"
                  },
                  "state_code": {
                    "type": "string",
                    "description": "The emergency address state code.",
                    "example": "10"
                  },
                  "user_id": {
                    "type": "string",
                    "description": "User ID to which the personal emergency address belongs.",
                    "example": "fWOgOALdT1ei4vjXK-QYsA"
                  },
                  "zip": {
                    "type": "string",
                    "description": "The emergency address zip code.",
                    "example": "95113"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**\n\nEmergency address added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address_line1": {
                      "type": "string",
                      "description": "The emergency address line 1.",
                      "example": "55 Almaden Blvd"
                    },
                    "address_line2": {
                      "type": "string",
                      "description": "The emergency address line 2.",
                      "example": "8 Floor"
                    },
                    "city": {
                      "type": "string",
                      "description": "The emergency address city.",
                      "example": "San Jose"
                    },
                    "country": {
                      "type": "string",
                      "description": "The emergency address country.",
                      "example": "US"
                    },
                    "id": {
                      "type": "string",
                      "description": "The emergency address ID.",
                      "example": "Qza2T_KATwCeUfTkzGsOmQ"
                    },
                    "is_default": {
                      "type": "boolean",
                      "description": "Indicates whether the emergency address is default or not.",
                      "example": true
                    },
                    "level": {
                      "type": "integer",
                      "description": "The emergency address owner level:\n\n* `0` - Account/Company-level emergency address. \n\n* `1` - User/Personal-level emergency address.\n\n* `2` - Unknown company/pending emergency address.",
                      "example": 1,
                      "enum": [0, 1, 2]
                    },
                    "owner": {
                      "type": "object",
                      "properties": {
                        "extension_number": {
                          "type": "string",
                          "description": "The emergency address owner extension number.",
                          "example": "101002"
                        },
                        "id": {
                          "type": "string",
                          "description": "The emergency address owner ID.",
                          "example": "y9th648XRfSL9S61p1TsBw"
                        },
                        "name": {
                          "type": "string",
                          "description": "The emergency address owner name.",
                          "example": "ZOOM_API Test"
                        }
                      },
                      "description": "The emergency address owner information for a user-level emergency address."
                    },
                    "site": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The site's ID.",
                          "example": "SQv52YtkRLC2dwrDdYtGsA"
                        },
                        "name": {
                          "type": "string",
                          "description": "The site's name.",
                          "example": "Main site"
                        }
                      },
                      "description": "The emergency address site information."
                    },
                    "state_code": {
                      "type": "string",
                      "description": "The emergency address state code.",
                      "example": "CA"
                    },
                    "status": {
                      "type": "integer",
                      "description": "The emergency address verification status: \n* `1` &mdash; Verification not required. \n* `2` &mdash; Unverified. \n* `3` &mdash; Verification requested. \n* `4` &mdash; Verified. \n* `5` &mdash; Rejected. \n* `6` &mdash; Verification failed.",
                      "example": 1,
                      "enum": [1, 2, 3, 4, 5, 6]
                    },
                    "zip": {
                      "type": "string",
                      "description": "The emergency address zip code.",
                      "example": "95113"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:emergency_address:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:emergency_address:admin"]
        }
      }
    },
    "/phone/emergency_addresses/{emergencyAddressId}": {
      "get": {
        "tags": ["Emergency Addresses"],
        "summary": "Get emergency address details",
        "description": "Gets the emergency address information.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions  \n \n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:emergency_address:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getEmergencyAddress",
        "parameters": [
          {
            "name": "emergencyAddressId",
            "in": "path",
            "description": "The emergency address ID.",
            "required": true,
            "schema": { "type": "string", "example": "Qza2T_KATwCeUfTkzGsOmQ" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nEmergency address retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address_line1": {
                      "type": "string",
                      "description": "The emergency address line 1.",
                      "example": "55 ALMADEN BLVD"
                    },
                    "address_line2": {
                      "type": "string",
                      "description": "The emergency address line 2.",
                      "example": "8 Floor"
                    },
                    "city": {
                      "type": "string",
                      "description": "The emergency address city.",
                      "example": "San Jose"
                    },
                    "country": {
                      "type": "string",
                      "description": "The emergency address country.",
                      "example": "US"
                    },
                    "id": {
                      "type": "string",
                      "description": "The emergency address ID.",
                      "example": "Qza2T_KATwCeUfTkzGsOmQ"
                    },
                    "is_default": {
                      "type": "boolean",
                      "description": "Indicates whether the emergency address is default or not.",
                      "example": true
                    },
                    "level": {
                      "type": "integer",
                      "description": "The emergency address owner level:\n\n* `0` - Account/Company-level emergency address. \n\n* `1` - User/Personal-level emergency address.\n\n* `2` - Unknown company/pending emergency address.",
                      "example": 1,
                      "enum": [0, 1, 2]
                    },
                    "owner": {
                      "type": "object",
                      "properties": {
                        "extension_number": {
                          "type": "integer",
                          "description": "The extension number of the emergency address owner .",
                          "format": "int64",
                          "example": 101002
                        },
                        "id": {
                          "type": "string",
                          "description": "The emergency address owner ID.",
                          "example": "y9th648XRfSL9S61p1TsBw"
                        },
                        "name": {
                          "type": "string",
                          "description": "The emergency address owner name.",
                          "example": "ZOOM_API Test"
                        }
                      },
                      "description": "The emergency address owner information for a user-level emergency address."
                    },
                    "site": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The site's ID.",
                          "example": "SQv52YtkRLC2dwrDdYtGsA"
                        },
                        "name": {
                          "type": "string",
                          "description": "The site's name.",
                          "example": "Main site"
                        }
                      },
                      "description": "The emergency address site information."
                    },
                    "state_code": {
                      "type": "string",
                      "description": "The emergency address state code.",
                      "example": "CA"
                    },
                    "status": {
                      "type": "integer",
                      "description": "The emergency address verification status: \n* `1` &mdash; Verification not required. \n* `2` &mdash; Unverified. \n* `3` &mdash; Verification requested. \n* `4` &mdash; Verified. \n* `5` &mdash; Rejected. \n* `6` &mdash; Verification failed.",
                      "example": 1,
                      "enum": [1, 2, 3, 4, 5, 6]
                    },
                    "zip": {
                      "type": "string",
                      "description": "The emergency address zip code.",
                      "example": "95113"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nEmergency address does not exist {emergencyAddressId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:emergency_address:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:emergency_address:admin"]
        }
      },
      "delete": {
        "tags": ["Emergency Addresses"],
        "summary": "Delete an emergency address",
        "description": "Removes an emergency address.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:emergency_address:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "deleteEmergencyAddress",
        "parameters": [
          {
            "name": "emergencyAddressId",
            "in": "path",
            "description": "The emergency address ID.",
            "required": true,
            "schema": { "type": "string", "example": "Qza2T_KATwCeUfTkzGsOmQ" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nEmergency address deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:emergency_address:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:emergency_address:admin"]
        }
      },
      "patch": {
        "tags": ["Emergency Addresses"],
        "summary": "Update an emergency address",
        "description": "Updates an emergency address information. If the address provided is not an exact match, the system generated corrected address will be used. \n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:emergency_address:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateEmergencyAddress",
        "parameters": [
          {
            "name": "emergencyAddressId",
            "in": "path",
            "description": "The ID of the emergency address.",
            "required": true,
            "schema": { "type": "string", "example": "Qza2T_KATwCeUfTkzGsOmQ" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "address_line1": {
                    "type": "string",
                    "description": "The emergency address line 1.",
                    "example": "55 Almaden Blvd"
                  },
                  "address_line2": {
                    "type": "string",
                    "description": "The emergency address line 2.",
                    "example": "8 Floor"
                  },
                  "city": {
                    "type": "string",
                    "description": "The emergency address city.",
                    "example": "San Jose"
                  },
                  "country": {
                    "type": "string",
                    "description": "The emergency address country.",
                    "example": "US"
                  },
                  "is_default": {
                    "type": "boolean",
                    "description": "Whether the emergency address is default or not.",
                    "example": false
                  },
                  "state_code": {
                    "type": "string",
                    "description": "The emergency address state code.",
                    "example": "CA"
                  },
                  "zip": {
                    "type": "string",
                    "description": "The emergency address zip code.",
                    "example": "95113"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nEmergency address updated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "address_line1": {
                      "type": "string",
                      "description": "The emergency address line 1.",
                      "example": "55 ALMADEN BLVD"
                    },
                    "address_line2": {
                      "type": "string",
                      "description": "The emergency address line 2.",
                      "example": "8 Floor"
                    },
                    "city": {
                      "type": "string",
                      "description": "The emergency address city.",
                      "example": "San Jose"
                    },
                    "country": {
                      "type": "string",
                      "description": "The emergency address country.",
                      "example": "US"
                    },
                    "id": {
                      "type": "string",
                      "description": "The emergency address ID.",
                      "example": "Qza2T_KATwCeUfTkzGsOmQ"
                    },
                    "is_default": {
                      "type": "boolean",
                      "description": "Whether the emergency address is default or not.",
                      "example": true
                    },
                    "level": {
                      "type": "integer",
                      "description": "The emergency address owner level:  \n \n* `0` - Account/Company-level emergency address.   \n \n* `1` - User/Personal-level emergency address.  \n \n* `2` - Unknown company/pending emergency address.",
                      "example": 1,
                      "enum": [0, 1, 2]
                    },
                    "owner": {
                      "type": "object",
                      "properties": {
                        "extension_number": {
                          "type": "integer",
                          "description": "The extension number of the emergency address owner.",
                          "format": "int64",
                          "example": 101002
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of the emergency address owner.",
                          "example": "y9th648XRfSL9S61p1TsBw"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the emergency address owner.",
                          "example": "ZOOM_API Test"
                        }
                      },
                      "description": "The emergency address owner information for a user-level emergency address."
                    },
                    "site": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The site's ID.",
                          "example": "SQv52YtkRLC2dwrDdYtGsA"
                        },
                        "name": {
                          "type": "string",
                          "description": "The site's name.",
                          "example": "Main site"
                        }
                      },
                      "description": "The information about the emergency address site."
                    },
                    "state_code": {
                      "type": "string",
                      "description": "The emergency address state code.",
                      "example": "CA"
                    },
                    "status": {
                      "type": "integer",
                      "description": "The emergency address verification status: \n* `1` &mdash; Verification not required. \n* `2` &mdash; Unverified. \n* `3` &mdash; Verification requested. \n* `4` &mdash; Verified. \n* `5` &mdash; Rejected. \n* `6` &mdash; Verification failed.",
                      "example": 1,
                      "enum": [1, 2, 3, 4, 5, 6]
                    },
                    "zip": {
                      "type": "string",
                      "description": "The emergency address zip code.",
                      "example": "95113"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:emergency_address:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:emergency_address:admin"]
        }
      }
    },
    "/phone/batch_locations": {
      "post": {
        "tags": ["Emergency Service Locations"],
        "summary": "Batch add emergency service locations",
        "description": "Adds emergency service locations in batch. \n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n* Account owner or admin permissions\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:batch_emergency_locations:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "batchAddLocations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["locations"],
                "type": "object",
                "properties": {
                  "locations": {
                    "maxItems": 10,
                    "type": "array",
                    "items": {
                      "required": [
                        "company_address",
                        "display_name",
                        "identifier"
                      ],
                      "type": "object",
                      "properties": {
                        "bssid": {
                          "type": "string",
                          "description": "The location's BSSID (Basic Service Set Identifier).",
                          "example": "SA43YjfBTS6gJbUpfvIziQ"
                        },
                        "company_address": {
                          "required": ["address_line1", "country"],
                          "type": "object",
                          "properties": {
                            "address_line1": {
                              "type": "string",
                              "description": "The location's physical address.",
                              "example": "55 Almaden Boulevard"
                            },
                            "address_line2": {
                              "type": "string",
                              "description": "The location's optional physical address information. For example, a suite number.",
                              "example": "6th floor"
                            },
                            "city": {
                              "type": "string",
                              "description": "The location's city.",
                              "example": "SAN JOSE"
                            },
                            "country": {
                              "type": "string",
                              "description": "The location's country.",
                              "example": "United States"
                            },
                            "state_code": {
                              "type": "string",
                              "description": "The location's state, province, or territory.",
                              "example": "CA"
                            },
                            "vat_number": {
                              "type": "string",
                              "description": "The location's VAT/NIF/CIF number. This number gets a new phone number online.\n\n**Note:** For Belgium, Netherlands, Portugal, Spain, and Switzerland, this field is required.",
                              "example": "123456789B01"
                            },
                            "zip": {
                              "type": "string",
                              "description": "The location's ZIP or postal code.",
                              "example": "95113"
                            }
                          }
                        },
                        "display_name": {
                          "type": "string",
                          "description": "The location's display name.",
                          "example": "example location"
                        },
                        "elin": {
                          "type": "string",
                          "description": "The location's ELIN (Emergency Location Identification Number). This value can be a BYOC number. If you use a BYOC number, you will need to manually update the BYOC address with your carrier.",
                          "example": "+12058945656"
                        },
                        "identifier": {
                          "type": "string",
                          "description": "The location's ID.",
                          "example": "eRYjZlItQIqlFbCuRA__SQ"
                        },
                        "network_switches": {
                          "maxItems": 1000,
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "mac_address": {
                                "type": "string",
                                "description": "The location's assigned MAC address. Required if the `network_switches` value is set.",
                                "example": "0004f25eec3d"
                              },
                              "port": {
                                "type": "string",
                                "description": "The location's port label. You **cannot** pass this parameter with the `port_prefix` and `port_range` parameter.",
                                "example": "11"
                              },
                              "port_prefix": {
                                "type": "string",
                                "description": "The location's port prefix. The prefix value **cannot** end with a digit.\n\nThis parameter passes with the `port_range_from` and `port_range_to` parameters.",
                                "example": "1"
                              },
                              "port_range_from": {
                                "type": "string",
                                "description": "The location's port starting range number. This can be a non-negative integer value.\n\nThis value **must** be less than or equal to the `port_range_to` value.",
                                "example": "10"
                              },
                              "port_range_to": {
                                "type": "string",
                                "description": "The location's port ending range number. This can be a non-negative integer value.\n\nThis value **cannot** be less than the `port_range_from` value.",
                                "example": "20"
                              }
                            }
                          }
                        },
                        "parent_identifier": {
                          "type": "string",
                          "description": "The location's parent location ID. Leave this value empty if the current location is a top location.",
                          "example": "FksDtQDfR9qs3gWXNDsfIw"
                        },
                        "private_ip": {
                          "type": "string",
                          "description": "The location's subnet or private IP address. This field is required if `minimum_match_criteria` is true.",
                          "example": "192.1.1.2"
                        },
                        "public_ip": {
                          "type": "string",
                          "description": "The location's public IP address. This field is required for top locations.",
                          "example": "192.1.1.1"
                        },
                        "sip_group_name": {
                          "type": "string",
                          "description": "The location's assigned SIP routing group for outgoing calls. The system routes the call to the defined [SIP trunk](https://en.wikipedia.org/wiki/SIP_trunking) in the SIP groups when location-based routing is enabled.\n\nThis only affects top locations and ignores all other locations.",
                          "example": "band width"
                        },
                        "minimum_match_criteria": {
                          "type": "boolean",
                          "description": "If true, it requires a user's location match on both public and private IP address, or BSSID, or network switch; detecting only a public IP address is not enough to detect the location.",
                          "example": true
                        }
                      }
                    }
                  },
                  "site_id": {
                    "type": "string",
                    "description": "The site ID.",
                    "example": "SQv52YtkRLC2dwrDdYtGsA"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nCreated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "locations": {
                      "maxItems": 10,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "display_name": {
                            "type": "string",
                            "description": "The location's display name.",
                            "example": "example location"
                          },
                          "location_id": {
                            "type": "string",
                            "description": "The location ID.",
                            "example": "FwOAeL4TRmqQrmF0jOfzkQ"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation Failed.\nLocation does not exist: {0}.\nToo many concurrent requests. A request to add locations batch has already been made.\nLocations size must be less than 10.\nYou can only access up to 5000 locations.\nCan not bind ELIN if location does not have an emergency address.\nA phone number can not be bound to multiple locations at the same time.\nPhone number format invalid.\nPhone number does not exist.\nThere is an error with the parent location of the sub location.\nNetwork switches size must be less than 100.\nSwitch MAC address is required.\nDuplicate Switch Info found.\nMac Address format invalid.\nNumber bssid per location limited to less than 100.\nBSSID format error.\nEmergency address Line 1 is required.\nEmergency address country is required.\nIP format error.\nPublic IP is required.\nSIP group does not exist.\nIdentifier can not be matched.\nYou can only access up to {0} level.\nThis location identifier already exists. You cannot have duplicate identifiers.\nThe parent_identifier can not be the value of the identifier of the same location.\nThis location display_name already exists. You cannot have duplicate location names.\nIdentifier is required.\nLocation name is required.\nEmergency address VAT is required in {0}.\nEmergency address state code is required in {0}.\nEmergency address zip is required in {0}.\nThe field can not exceed {0} characters. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:batch_emergency_locations:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:batch_emergency_locations:admin"]
        }
      }
    },
    "/phone/locations": {
      "get": {
        "tags": ["Emergency Service Locations"],
        "summary": "List emergency service locations",
        "description": "Returns emergency service locations. \n**Note**: When you enable [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites), the `site_id` parameter is required.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_emergency_locations:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "listLocations",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The unique identifier of the site. This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API. \n\n**Note:** When the account has been enabled Multiple Sites, this field is required.",
            "required": false,
            "schema": { "type": "string", "example": "SQv52YtkRLC2dwrDdYtGsA" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n\nEmergency service locations listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "locations": {
                      "type": "array",
                      "description": "The information about emergency service locations.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "bssid": {
                            "type": "string",
                            "description": "The emergency service location's BSSID (Basic Service Set Identifier).",
                            "example": "SA43YjfBTS6gJbUpfvIziQ"
                          },
                          "elin": {
                            "type": "object",
                            "properties": {
                              "phone_number": {
                                "type": "string",
                                "description": "The emergency service location's phone number.",
                                "example": "+12058945656"
                              },
                              "phone_number_id": {
                                "type": "string",
                                "description": "The emergency service location's phone number ID.",
                                "example": "9h5vTQJ0TmyKs0wItZ3JAw"
                              }
                            },
                            "description": "The emergency service location's ELIN (Emergency Location Identification Number)."
                          },
                          "id": {
                            "type": "string",
                            "description": "The emergency service location's ID.",
                            "example": "eRYjZlItQIqlFbCuRA__SQ"
                          },
                          "identifier": {
                            "type": "string",
                            "description": "The emergency service location's unique ID.",
                            "example": "FksDtQDfR9qs3gWXNDsfIw"
                          },
                          "name": {
                            "type": "string",
                            "description": "The emergency service location's name.",
                            "example": "example location"
                          },
                          "network_switches": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "mac_address": {
                                  "type": "string",
                                  "description": "The MAC address.",
                                  "example": "0004f25eec3d"
                                },
                                "port": {
                                  "type": "string",
                                  "description": "The port's label.",
                                  "example": "23"
                                },
                                "port_prefix": {
                                  "type": "string",
                                  "description": "The port's prefix.",
                                  "example": "01"
                                },
                                "port_range_from": {
                                  "type": "string",
                                  "description": "The port's range from value.",
                                  "example": "01"
                                },
                                "port_range_to": {
                                  "type": "string",
                                  "description": "The port's range to value.",
                                  "example": "02"
                                }
                              }
                            }
                          },
                          "parent_location_id": {
                            "type": "string",
                            "description": "The parent location's ID.",
                            "example": "RTGmTYafRU24RqJunfotSA"
                          },
                          "private_ip": {
                            "type": "string",
                            "description": "The emergency service location's subnet or private IP address.",
                            "example": "192.1.1.2"
                          },
                          "public_ip": {
                            "type": "string",
                            "description": "The emergency service location's public IP address.",
                            "example": "192.1.1.1"
                          },
                          "sip_group": {
                            "type": "object",
                            "properties": {
                              "display_name": {
                                "type": "string",
                                "description": "The SIP group's display name.",
                                "example": "band width"
                              },
                              "id": {
                                "type": "string",
                                "description": "The SIP group's ID.",
                                "example": "F_WKDH6FRdeddZBcNUlUeA"
                              }
                            },
                            "description": "The emergency service location's SIP group information."
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The site ID.",
                                "example": "SQv52YtkRLC2dwrDdYtGsA"
                              },
                              "name": {
                                "type": "string",
                                "description": "The site name.",
                                "example": "Main Site"
                              }
                            },
                            "description": "The emergency service location's site information."
                          },
                          "emergency_address": {
                            "type": "object",
                            "properties": {
                              "address_line1": {
                                "type": "string",
                                "description": "The location's physical address.",
                                "example": "55 ALMADEN BLVD"
                              },
                              "address_line2": {
                                "type": "string",
                                "description": "The location's optional physical address information. For example, a suite number.",
                                "example": "6th floor"
                              },
                              "city": {
                                "type": "string",
                                "description": "The location's city.",
                                "example": "SAN JOSE"
                              },
                              "state_code": {
                                "type": "string",
                                "description": "The location's State/Province/Territory.",
                                "example": "CA"
                              },
                              "country": {
                                "type": "string",
                                "description": "The location's country.",
                                "example": "US"
                              },
                              "zip": {
                                "type": "string",
                                "description": "The location's ZIP or postal code.",
                                "example": "95113"
                              },
                              "vat_number": {
                                "type": "string",
                                "description": "The location's VAT/NIF/CIF number. This number is used to get a new phone number online.\n\n**Note:** For Belgium, Netherlands, Portugal, Spain, and Switzerland, this field is required.",
                                "example": "123456789B01"
                              }
                            }
                          },
                          "minimum_match_criteria": {
                            "type": "boolean",
                            "description": "If true, it requires a user's location match on both public and private IP address, or BSSID, or network switch; detecting only a public IP address is not enough to detect the location.",
                            "example": true
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "T6WMY4fJBIAlxPUiqRtwvQS9dvsq8AoRam2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "example": 30
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_emergency_locations:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_emergency_locations:admin"]
        }
      },
      "post": {
        "tags": ["Emergency Service Locations"],
        "summary": "Add an emergency service location",
        "description": "Adds an emergency service location.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:emergency_location:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addLocation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["emergency_address_id", "name"],
                "type": "object",
                "properties": {
                  "bssid": {
                    "type": "string",
                    "description": "A comma-separated list of the emergency service location's BSSIDs (Basic Service Set Identifiers).",
                    "example": "SA43YjfBTS6gJbUpfvIziQ"
                  },
                  "elin_phone_number_id": {
                    "type": "string",
                    "description": "The ELIN (Emergency Location Identification Number). This value must be a phone number ID or phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format.",
                    "example": "9h5vTQJ0TmyKs0wItZ3JAw"
                  },
                  "emergency_address_id": {
                    "type": "string",
                    "description": "The emergency location address ID.",
                    "example": "Qza2T_KATwCeUfTkzGsOmQ"
                  },
                  "name": {
                    "type": "string",
                    "description": "The emergency service location's name.",
                    "example": "example location update"
                  },
                  "parent_location_id": {
                    "type": "string",
                    "description": "The parent location's ID to assign to the emergency service location.",
                    "example": "FwOAeL4TRmqQrmF0jOfzkQ"
                  },
                  "private_ip": {
                    "type": "string",
                    "description": "A comma-separated list of the emergency service location's subnet or private IP addresses. This field is required if `minimum_match_criteria` is true.",
                    "example": "192.1.1.3"
                  },
                  "public_ip": {
                    "type": "string",
                    "description": "A comma-separated list of the emergency service location's public IP addresses. This parameter is required for top locations.",
                    "example": "192.1.1.4"
                  },
                  "sip_group_id": {
                    "type": "string",
                    "description": "The SIP group ID to assign to the emergency service location. This value is not required for non-top locations.",
                    "example": "SA43YjfBTS6gJbUpfvIziQ"
                  },
                  "site_id": {
                    "type": "string",
                    "description": "The site ID.",
                    "example": "F_WKDH6FRdeddZBcNUlUeA"
                  },
                  "minimum_match_criteria": {
                    "type": "boolean",
                    "description": "If true, it requires a user's location match on both public and private IP address, or BSSID, or network switch; detecting only a public IP address is not enough to detect the location.",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` \n\nCreated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The phone's location ID.",
                      "example": "eRYjZlItQIqlFbCuRA__SQ"
                    },
                    "name": {
                      "type": "string",
                      "description": "The phone's location name.",
                      "example": "example location"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nValidation failed.\nA site ID is required.\nParent location does not exist.\nAn emergency address is required.\nAn emergency address is required.\nA location name is required.\nA public IP is required.\nYou can only access up to \"{0}\" level.\nYou can only access up to 5000 locations.\nThe maximum number of \"{0}\" is {1}.\nCannot bind an ELIN if the location does not have an emergency address.\nIP format error.\nDuplicate Switch Info found.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:emergency_location:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:emergency_location:admin"]
        }
      }
    },
    "/phone/locations/{locationId}": {
      "get": {
        "tags": ["Emergency Service Locations"],
        "summary": "Get emergency service location details",
        "description": "Returns an emergency service location's information.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:emergency_location:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getLocation",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "The emergency service location's ID.",
            "required": true,
            "schema": { "type": "string", "example": "FwOAeL4TRmqQrmF0jOfzkQ" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nEmergency service location retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bssid": {
                      "type": "string",
                      "description": "The emergency service location's BSSIDs (Basic Service Set Identifiers).",
                      "example": "SA43YjfBTS6gJbUpfvIziQ"
                    },
                    "elin": {
                      "type": "object",
                      "properties": {
                        "phone_number": {
                          "type": "string",
                          "description": "The emergency location's phone number.",
                          "example": "+12058945656"
                        },
                        "phone_number_id": {
                          "type": "string",
                          "description": "The emergency location's phone number ID.",
                          "example": "9h5vTQJ0TmyKs0wItZ3JAw"
                        }
                      },
                      "description": "The ELIN (Emergency Location Identification Number)."
                    },
                    "emergency_address": {
                      "type": "object",
                      "properties": {
                        "address_line1": {
                          "type": "string",
                          "description": "The emergency location address line 1.",
                          "example": "55 ALMADEN BLVD"
                        },
                        "address_line2": {
                          "type": "string",
                          "description": "The emergency location address line 2.",
                          "example": "6th floor"
                        },
                        "city": {
                          "type": "string",
                          "description": "The emergency location address's city.",
                          "example": "SAN JOSE"
                        },
                        "country": {
                          "type": "string",
                          "description": "The emergency location address's country.",
                          "example": "US"
                        },
                        "id": {
                          "type": "string",
                          "description": "The emergency location address ID.",
                          "example": "Qza2T_KATwCeUfTkzGsOmQ"
                        },
                        "state_code": {
                          "type": "string",
                          "description": "The emergency location address's state code.",
                          "example": "CA"
                        },
                        "zip": {
                          "type": "string",
                          "description": "The emergency address's zip code.",
                          "example": "95113"
                        }
                      },
                      "description": "The emergency location's address information."
                    },
                    "id": {
                      "type": "string",
                      "description": "The emergency location's ID.",
                      "example": "eRYjZlItQIqlFbCuRA__SQ"
                    },
                    "name": {
                      "type": "string",
                      "description": "The emergency location's name.",
                      "example": "example location"
                    },
                    "network_switches": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "mac_address": {
                            "type": "string",
                            "description": "The emergency location's assigned MAC address.",
                            "example": "64167f379097"
                          },
                          "port": {
                            "type": "string",
                            "description": "The port label.",
                            "example": "20"
                          },
                          "port_prefix": {
                            "type": "string",
                            "description": "The port prefix.",
                            "example": "2"
                          },
                          "port_range_from": {
                            "type": "string",
                            "description": "The port starting range number.",
                            "example": "01"
                          },
                          "port_range_to": {
                            "type": "string",
                            "description": "The port ending range number.",
                            "example": "05"
                          }
                        }
                      }
                    },
                    "parent_location_id": {
                      "type": "string",
                      "description": "The emergency location's parent location ID.",
                      "example": "FksDtQDfR9qs3gWXNDsfIw"
                    },
                    "private_ip": {
                      "type": "string",
                      "description": "The emergency location's subnet or private IP address.",
                      "example": "192.1.1.2"
                    },
                    "public_ip": {
                      "type": "string",
                      "description": "The emergency location's public IP address.",
                      "example": "192.1.1.1"
                    },
                    "sip_group": {
                      "type": "object",
                      "properties": {
                        "display_name": {
                          "type": "string",
                          "description": "The SIP group's display name.",
                          "example": "band width"
                        },
                        "id": {
                          "type": "string",
                          "description": "The SIP group ID.",
                          "example": "F_WKDH6FRdeddZBcNUlUeA"
                        }
                      },
                      "description": "The emergency location's SIP group information."
                    },
                    "site": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The site ID.",
                          "example": "SQv52YtkRLC2dwrDdYtGsA"
                        },
                        "name": {
                          "type": "string",
                          "description": "The site name.",
                          "example": "Main site"
                        }
                      },
                      "description": "The emergency location's site information."
                    },
                    "minimum_match_criteria": {
                      "type": "boolean",
                      "description": "If true, it requires a user's location match on both public and private IP address, or BSSID, or network switch; detecting only a public IP address is not enough to detect the location.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nLocation does not exist: {0}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:emergency_location:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:emergency_location:admin"]
        }
      },
      "delete": {
        "tags": ["Emergency Service Locations"],
        "summary": "Delete an emergency location",
        "description": "Removes an emergency location.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:emergency_location:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteLocation",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "The emergency service location's ID.",
            "required": true,
            "schema": { "type": "string", "example": "FwOAeL4TRmqQrmF0jOfzkQ" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nLocation deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:emergency_location:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:emergency_location:admin"]
        }
      },
      "patch": {
        "tags": ["Emergency Service Locations"],
        "summary": "Update emergency service location",
        "description": "Updates an emergency location's information.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:emergency_location:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateLocation",
        "parameters": [
          {
            "name": "locationId",
            "in": "path",
            "description": "The emergency service location's ID.",
            "required": true,
            "schema": { "type": "string", "example": "FwOAeL4TRmqQrmF0jOfzkQ" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "bssid": {
                    "type": "string",
                    "description": "A comma-separated list of the emergency service location's BSSIDs (Basic Service Set Identifiers).",
                    "example": "SA43YjfBTS6gJbUpfvIziQ"
                  },
                  "elin_phone_number_id": {
                    "type": "string",
                    "description": "The ELIN (Emergency Location Identification Number). This value must be a phone number ID or phone number in [E.164](https://en.wikipedia.org/wiki/E.164) format.",
                    "example": "+12058945656"
                  },
                  "emergency_address_id": {
                    "type": "string",
                    "description": "The emergency location's address ID.",
                    "example": "Qza2T_KATwCeUfTkzGsOmQ"
                  },
                  "name": {
                    "type": "string",
                    "description": "The emergency location's name.",
                    "example": "example location"
                  },
                  "network_switches": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "mac_address": {
                          "type": "string",
                          "description": "The emergency location's assigned MAC address.",
                          "example": "0004f25eec3d"
                        },
                        "port": {
                          "type": "string",
                          "description": "The emergency location's port label. You **cannot** pass this parameter with the `port_prefix` and `port_range` parameter.",
                          "example": "22"
                        },
                        "port_prefix": {
                          "type": "string",
                          "description": "The emergency location's port prefix. The prefix value **cannot** end with a digit.\n\nThis parameter passes with the `port_range_from` and `port_range_to` parameters.",
                          "example": "01"
                        },
                        "port_range_from": {
                          "type": "string",
                          "description": "The emergency location's port starting range number. This can be a non-negative integer value.\n\nThis value **must** be less than or equal to the `port_range_to` value.",
                          "example": "02"
                        },
                        "port_range_to": {
                          "type": "string",
                          "description": "The emergency location's port ending range number. This can be a non-negative integer value.\n\nThis value **cannot** be less than the `port_range_from` value.",
                          "example": "05"
                        }
                      }
                    }
                  },
                  "private_ip": {
                    "type": "string",
                    "description": "A comma-separated list of the emergency service location's subnet or private IP addresses. This field is required if `minimum_match_criteria` is true.",
                    "example": "192.1.1.2"
                  },
                  "public_ip": {
                    "type": "string",
                    "description": "A comma-separated list of the emergency service location's public IP addresses. This parameter is **required** for top locations.",
                    "example": "192.1.1.1"
                  },
                  "sip_group_id": {
                    "type": "string",
                    "description": "The SIP group ID to assign to the emergency service location. This value is not required for non-top locations.",
                    "example": "SA43YjfBTS6gJbUpfvIziQ"
                  },
                  "minimum_match_criteria": {
                    "type": "boolean",
                    "description": "If true, it requires a user's location match on both public and private IP address, or BSSID, or network switch; detecting only a public IP address is not enough to detect the location.",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nLocation updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:emergency_location:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:emergency_location:admin"]
        }
      }
    },
    "/phone/external_contacts": {
      "get": {
        "tags": ["External Contacts"],
        "summary": "List external contacts",
        "description": "Lists the external contacts.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_external_contacts:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "listExternalContacts",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nExternal contacts listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "external_contacts": {
                      "type": "array",
                      "description": "External contacts information.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The external contact's description.",
                            "example": "External contact Johnson"
                          },
                          "email": {
                            "type": "string",
                            "description": "The external contact's email address.",
                            "example": "example@example.com"
                          },
                          "extension_number": {
                            "type": "string",
                            "description": "The external contact's extension number.",
                            "example": "101014"
                          },
                          "external_contact_id": {
                            "type": "string",
                            "description": "Zoom-generated external contact ID.",
                            "example": "OJGi5xOFQPmrJbKg68-iWg"
                          },
                          "id": {
                            "type": "string",
                            "description": "Customer-configured external contact ID.",
                            "example": "external_contact_01"
                          },
                          "name": {
                            "type": "string",
                            "description": "The external contact's username or extension display name.",
                            "example": "Johnson"
                          },
                          "phone_numbers": {
                            "type": "array",
                            "description": "The external contact's phone numbers.",
                            "items": {
                              "type": "string",
                              "example": "+12058945656"
                            }
                          },
                          "auto_call_recorded": {
                            "type": "boolean",
                            "description": "Whether to allow the automatic call recording.",
                            "example": true
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "example": 30
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_external_contacts:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_external_contacts:admin"]
        }
      },
      "post": {
        "tags": ["External Contacts"],
        "summary": "Add an external contact",
        "description": "Adds an external contact.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:external_contact:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addExternalContact",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name"],
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The external contact's description.",
                    "example": "External contact Johnson"
                  },
                  "email": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "The external contact's email address.",
                    "example": "example@example.com"
                  },
                  "extension_number": {
                    "type": "string",
                    "description": "The external contact's extension number in the original phone system. Make certain that this extension number is **not** duplicated with an existing extension number in the account.",
                    "example": "101014"
                  },
                  "id": {
                    "type": "string",
                    "description": "The customer-configured external contact ID. It is recommended that you use a primary key from the original phone system.\n\nIf you do **not** use this parameter, the API automatically generates an `externalContactId`.",
                    "example": "external_contact_01"
                  },
                  "name": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "The external contact's username or extension display name.",
                    "example": "Johnson"
                  },
                  "phone_numbers": {
                    "type": "array",
                    "description": "A comma-separated list of the external contact's phone numbers. This value **must** be in [E.164](https://en.wikipedia.org/wiki/E.164) format. If you do not provide an extension number, you **must** provide this value.",
                    "items": { "type": "string", "example": "+12058945656" }
                  },
                  "routing_path": {
                    "type": "string",
                    "description": "The external contact's SIP group, to define the call routing path. This is for customers that use SIP trunking.",
                    "example": "PSTN"
                  },
                  "auto_call_recorded": {
                    "type": "boolean",
                    "description": "Whether to allow the automatic call recording.",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \nExternal contact added successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The external contact's username or extension display name.",
                      "example": "Johnson"
                    },
                    "external_contact_id": {
                      "type": "string",
                      "description": "The Zoom-generated external contact ID.",
                      "example": "nqerMCD0Tu6RPGoCpVbPtA"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:external_contact:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:external_contact:admin"]
        }
      }
    },
    "/phone/external_contacts/{externalContactId}": {
      "get": {
        "tags": ["External Contacts"],
        "summary": "Get external contact details",
        "description": "Gets an external contact's information.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions  \n \n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:external_contact:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getAExternalContact",
        "parameters": [
          {
            "name": "externalContactId",
            "in": "path",
            "description": "The external contact's ID.",
            "required": true,
            "schema": { "type": "string", "example": "OJGi5xOFQPmrJbKg68-iWg" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nExternal contact information retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "The external contact's description.",
                      "example": "External contact Johnson"
                    },
                    "email": {
                      "type": "string",
                      "description": "The external contact's email address.",
                      "example": "example@example.com"
                    },
                    "extension_number": {
                      "type": "string",
                      "description": "The external contact's extension number.",
                      "example": "101014"
                    },
                    "external_contact_id": {
                      "type": "string",
                      "description": "The Zoom-generated external contact ID.",
                      "example": "OJGi5xOFQPmrJbKg68-iWg"
                    },
                    "id": {
                      "type": "string",
                      "description": "The customer-configured external contact ID.",
                      "example": "external_contact_01"
                    },
                    "name": {
                      "type": "string",
                      "description": "The external contact's username or extension display name.",
                      "example": "Johnson"
                    },
                    "phone_numbers": {
                      "type": "array",
                      "description": "The external contact's phone numbers.",
                      "items": { "type": "string", "example": "+12058945657" }
                    },
                    "auto_call_recorded": {
                      "type": "boolean",
                      "description": "Whether to allow the automatic call recording.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nExternal contact does not exist: {externalContactId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:external_contact:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:external_contact:admin"]
        }
      },
      "delete": {
        "tags": ["External Contacts"],
        "summary": "Delete an external contact",
        "description": "Removes an external contact.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:external_contact:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteAExternalContact",
        "parameters": [
          {
            "name": "externalContactId",
            "in": "path",
            "description": "The external contact's ID.",
            "required": true,
            "schema": { "type": "string", "example": "OJGi5xOFQPmrJbKg68-iWg" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nExternal contact deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:external_contact:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:external_contact:admin"]
        }
      },
      "patch": {
        "tags": ["External Contacts"],
        "summary": "Update external contact",
        "description": "Updates an external contact's information.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license \n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:external_contact:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateExternalContact",
        "parameters": [
          {
            "name": "externalContactId",
            "in": "path",
            "description": "The external contact ID.",
            "required": true,
            "schema": { "type": "string", "example": "OJGi5xOFQPmrJbKg68-iWg" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The external contact's description.",
                    "example": "External contact Johnson"
                  },
                  "email": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "The external contact's email address.",
                    "example": "example@example.com"
                  },
                  "extension_number": {
                    "type": "string",
                    "description": "The external contact's extension number in the original phone system. Make certain that this extension number is **not** duplicated with an existing extension number in the account.",
                    "example": "101014"
                  },
                  "id": {
                    "type": "string",
                    "description": "The customer-configured external contact ID. We recommend that you use a primary key from the original phone system.\n\nIf you do **not** use this parameter, the API automatically generates an `externalContactId`.",
                    "example": "external_contact_01"
                  },
                  "name": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "The external contact's username or extension display name.",
                    "example": "Johnson"
                  },
                  "phone_numbers": {
                    "type": "array",
                    "description": "A comma-separated list of the external contact's phone numbers. This value **must** be in [E.164](https://en.wikipedia.org/wiki/E.164) format. If you do not provide an extension number, you **must** provide this value.",
                    "items": { "type": "string", "example": "+12058945657" }
                  },
                  "routing_path": {
                    "type": "string",
                    "description": "The external contact's SIP group, to define the call routing path. This is for customers that use SIP trunking.",
                    "example": "PSTN"
                  },
                  "auto_call_recorded": {
                    "type": "boolean",
                    "description": "Whether to allow the automatic call recording.",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nExternal contact updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:external_contact:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:external_contact:admin"]
        }
      }
    },
    "/phone/firmware_update_rules": {
      "get": {
        "tags": ["Firmware Update Rules"],
        "summary": "List firmware update rules",
        "description": "Use this API to get [firmware update rules](https://support.zoom.us/hc/en-us/articles/360054198852-Setting-up-firmware-update-rules).\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_firmware_update_rules:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "ListFirmwareRules",
        "parameters": [
          {
            "name": "site_id",
            "in": "query",
            "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). Required if multiple sites are enabled.",
            "required": false,
            "schema": { "type": "string", "example": "8f71O6rWT8KFUGQmJIFAdQ" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nSuccessfully listed the firmware update rules.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of the available result list exceeds the page size.",
                      "example": "10mHdrdYyMxKi8LQhL7GPI6BWj65IcrbjJ2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The size of the page.",
                      "example": 30
                    },
                    "rules": {
                      "type": "array",
                      "description": "Firmware update rules list.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "rule_id": {
                            "type": "string",
                            "description": "Unique identifier of the firmware update rule.",
                            "example": "3h_bQL5MR_-sCmlJcTclVg"
                          },
                          "version": {
                            "type": "string",
                            "description": "Firmware version.",
                            "example": "3.4.5.18"
                          },
                          "device_type": {
                            "type": "string",
                            "description": "Device type.",
                            "example": "AudioCodes"
                          },
                          "device_model": {
                            "type": "string",
                            "description": "Device model name.",
                            "example": "445hd"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_firmware_update_rules:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_firmware_update_rules:admin"]
        }
      },
      "post": {
        "tags": ["Firmware Update Rules"],
        "summary": "Add a firmware update rule",
        "description": "Use this API to add a [firmware update rule](https://support.zoom.us/hc/en-us/articles/360054198852-Setting-up-firmware-update-rules).\n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:firmware_update_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "AddFirmwareRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["device_model", "device_type", "version"],
                "type": "object",
                "properties": {
                  "site_id": {
                    "type": "string",
                    "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672). This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API. Required if multiple sites are enabled.",
                    "example": "8f71O6rWT8KFUGQmJIFAdQ"
                  },
                  "version": {
                    "type": "string",
                    "description": "Firmware version.",
                    "example": "3.4.5.18"
                  },
                  "device_type": {
                    "type": "string",
                    "description": "Device type.",
                    "example": "AudioCodes"
                  },
                  "device_model": {
                    "type": "string",
                    "description": "Device model name.",
                    "example": "445hd"
                  },
                  "restart_type": {
                    "type": "integer",
                    "description": "Restart type: `1` - Restart the devices immediately. `2` - Restart with the next resync or auto pull",
                    "example": 1,
                    "default": 1,
                    "enum": [1, 2]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**\n\nSuccessfully added a firmware update rule.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rule_Id": {
                      "type": "string",
                      "description": "Unique identifier of the firmware update rule.",
                      "example": "MRNStlOVS02fJ6pOAzrh0A"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `404` <br>\nThe firmware version does not exist, firmware version:{0}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:firmware_update_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:firmware_update_rule:admin"]
        }
      }
    },
    "/phone/firmware_update_rules/{ruleId}": {
      "get": {
        "tags": ["Firmware Update Rules"],
        "summary": "Get firmware update rule information",
        "description": "Use this API to get the [firmware update rule](https://support.zoom.us/hc/en-us/articles/360054198852-Setting-up-firmware-update-rules) information.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:firmware_update_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "GetFirmwareRuleDetail",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Unique identifier of the firmware update rule.",
            "required": true,
            "schema": { "type": "string", "example": "4Hzv4_K1RRKC_MFDPIocJA" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nSuccessfully get the firmware update rule.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "device_type": {
                      "type": "string",
                      "description": "Device type.",
                      "example": "AudioCodes"
                    },
                    "device_model": {
                      "type": "string",
                      "description": "Device model name.",
                      "example": "445hd"
                    },
                    "version": {
                      "type": "string",
                      "description": "Firmware version.",
                      "example": "3.4.5.18"
                    },
                    "update_log": {
                      "type": "string",
                      "description": "The update log.",
                      "example": "1. Supports call forwarding for Zoom Phone"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `404` <br>\nFirmware rule (ID: {0}) does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:firmware_update_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:firmware_update_rule:admin"]
        }
      },
      "delete": {
        "tags": ["Firmware Update Rules"],
        "summary": "Delete firmware update rule",
        "description": "Use this API to delete the [firmware update rule](https://support.zoom.us/hc/en-us/articles/360054198852-Setting-up-firmware-update-rules).\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:firmware_update_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "DeleteFirmwareUpdateRule",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Unique identifier of the firmware update rule.",
            "required": true,
            "schema": { "type": "string", "example": "4Hzv4_K1RRKC_MFDPIocJA" }
          },
          {
            "name": "restart_type",
            "in": "query",
            "description": "Restart type: `1` - Restart the devices immediately. `2` - Restart with the next resync or auto pull.",
            "required": false,
            "schema": {
              "type": "integer",
              "example": 1,
              "default": 1,
              "enum": [1, 2]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\n\nSuccessfully deleted firmware update rule."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `404` <br>\nThe rule does not exist, rule id:{0}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:firmware_update_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:firmware_update_rule:admin"]
        }
      },
      "patch": {
        "tags": ["Firmware Update Rules"],
        "summary": "Update firmware update rule",
        "description": "Use this API to update a specific [firmware update rule](https://support.zoom.us/hc/en-us/articles/360054198852-Setting-up-firmware-update-rules).\n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:firmware_update_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "UpdateFirmwareRule",
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "description": "Unique identifier of the firmware update rule.",
            "required": true,
            "schema": { "type": "string", "example": "4Hzv4_K1RRKC_MFDPIocJA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["device_model", "device_type", "version"],
                "type": "object",
                "properties": {
                  "version": {
                    "type": "string",
                    "description": "Firmware version.",
                    "example": "3.4.5.18"
                  },
                  "device_type": {
                    "type": "string",
                    "description": "Device type.",
                    "example": "AudioCodes"
                  },
                  "device_model": {
                    "type": "string",
                    "description": "Device model name.",
                    "example": "445hd"
                  },
                  "restart_type": {
                    "type": "integer",
                    "description": "Restart type: `1` - Restart the devices immediately. `2` - Restart with the next resync or auto pull",
                    "example": 1,
                    "default": 1,
                    "enum": [1, 2]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nSuccessfully updated a firmware update rule."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `404` <br>\nThe rule does not exist, rule id:{0}.<br>\n\nThe firmware version does not exist, firmware version:{0}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:firmware_update_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:firmware_update_rule:admin"]
        }
      }
    },
    "/phone/firmwares": {
      "get": {
        "tags": ["Firmware Update Rules"],
        "summary": "List updatable firmwares",
        "description": "Use this API to get updatable [firmwares](https://support.zoom.us/hc/en-us/articles/360054198852-Setting-up-firmware-update-rules).\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_firmwares:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "ListFirmwares",
        "parameters": [
          {
            "name": "is_update",
            "in": "query",
            "description": "Firmware update rule enabled. \n `true` - Get all firmwares that can have firmware update rules added \n `false` - Get all firmwares whether or not you can add firmware update rules to it",
            "required": false,
            "schema": { "type": "boolean", "example": true, "default": true }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites). Required if multiple sites are enabled.",
            "required": false,
            "schema": { "type": "string", "example": "8f71O6rWT8KFUGQmJIFAdQ" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nSuccessfully listed the firmwares.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "firmwares": {
                      "type": "array",
                      "description": "Firmwares list.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "device_type": {
                            "type": "string",
                            "description": "Device type.",
                            "example": "AudioCodes"
                          },
                          "device_model": {
                            "type": "string",
                            "description": "Device model name.",
                            "example": "445hd"
                          },
                          "versions": {
                            "type": "array",
                            "description": "Firmware versions.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "version": {
                                  "type": "string",
                                  "description": "Firmware version.",
                                  "example": "3.4.5.18"
                                },
                                "update_log": {
                                  "type": "string",
                                  "description": "The update log.",
                                  "example": "1. Supports call forwarding for Zoom Phone"
                                },
                                "expire_time": {
                                  "type": "string",
                                  "description": "Expire time.",
                                  "example": "2021-05-29T00:32:16.000Z"
                                },
                                "status": {
                                  "type": "integer",
                                  "description": "Version status: \n* `1` &mdash; Available. \n* `2` &mdash; Unavailable. \n* `3` &mdash; Sunset",
                                  "example": 1,
                                  "enum": [1, 2, 3]
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_firmwares:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_firmwares:admin"]
        }
      }
    },
    "/phone/group_call_pickup": {
      "get": {
        "tags": ["Group Call Pickup"],
        "summary": "List group call pickup objects",
        "description": "Use this API to retrieve a list of [Group Call Pickup](https://support.zoom.us/hc/en-us/articles/360060107472-Setting-up-and-using-group-call-pickup) objects in an account.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_call_pickup_groups:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listGCP",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "Unique identifier of the site. This can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.",
            "required": false,
            "schema": { "type": "string", "example": "NjHmTu16Qfe8yOiNJuekXA" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nGroup listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "group_call_pickup": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the group.",
                            "example": "qLZ4vXb8RAydayOR5ckYMg"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "Name of the group.",
                            "example": "testGCP"
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "Extension ID.",
                            "example": "testGCP"
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "Extension number.",
                            "format": "int64",
                            "example": 10002
                          },
                          "member_count": {
                            "type": "integer",
                            "description": "Member count of the group.",
                            "example": 1
                          },
                          "description": {
                            "type": "string",
                            "description": "Group call pickup  description.",
                            "example": "test"
                          },
                          "delay": {
                            "type": "integer",
                            "description": "Determines after how much time (in seconds) the group should be notified: default is `0` second.",
                            "example": 0,
                            "enum": [0, 5, 10, 15]
                          },
                          "cost_center": {
                            "type": "string",
                            "description": "Cost center name.",
                            "example": "test"
                          },
                          "department": {
                            "type": "string",
                            "description": "Department name.",
                            "example": "test"
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the site.",
                                "example": "testGCPSite"
                              }
                            }
                          },
                          "directed_call_pickup": {
                            "type": "boolean",
                            "description": "Whether the ringtone is on.",
                            "example": true
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call for each page.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_call_pickup_groups:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_call_pickup_groups:admin"]
        }
      },
      "post": {
        "tags": ["Group Call Pickup"],
        "summary": "Add a group call pickup object",
        "description": "Use this API to add a [Group Call Pickup](https://support.zoom.us/hc/en-us/articles/360060107472-Setting-up-and-using-group-call-pickup) instance to the account that has the Zoom Phone license assigned. \n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:call_pickup_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addGCP",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["display_name", "site_id"],
                "type": "object",
                "properties": {
                  "display_name": {
                    "maxLength": 32,
                    "type": "string",
                    "description": "Name of the group.",
                    "example": "test"
                  },
                  "site_id": {
                    "type": "string",
                    "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                    "example": "NjHmTu16Qfe8yOiNJuekXA"
                  },
                  "description": {
                    "type": "string",
                    "description": "Group call pickup description.",
                    "example": "test"
                  },
                  "extension_number": {
                    "type": "integer",
                    "description": "Short extension number.",
                    "format": "int64",
                    "example": 1
                  },
                  "delay": {
                    "type": "integer",
                    "description": "Determines after how much time (in seconds) the group should be notified.",
                    "example": 0,
                    "default": 0,
                    "enum": [0, 5, 10, 15]
                  },
                  "play_incoming_calls_sound": {
                    "type": "object",
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "Whether to play incoming call sound in Zoom clients.",
                        "example": false,
                        "default": false
                      },
                      "ring_tone": {
                        "type": "string",
                        "description": "Incoming call sound in Zoom clients.",
                        "example": "ringtone_1",
                        "default": "ringtone_1",
                        "enum": ["ringtone_1", "ringtone_2", "ringtone_3"]
                      },
                      "duration": {
                        "type": "integer",
                        "description": "Duration (in seconds) between ring tones.",
                        "example": 0,
                        "default": 0,
                        "enum": [0, 1, 3, 5]
                      }
                    },
                    "description": "This field is not available when `enable=false`"
                  },
                  "directed_call_pickup": {
                    "type": "boolean",
                    "description": "Whether the ringtone is on.",
                    "example": false,
                    "default": false
                  },
                  "member_extension_ids": {
                    "maximum": 100,
                    "type": "array",
                    "description": "Extension ID.",
                    "items": {
                      "type": "string",
                      "example": "RfFxkRTIRnOp6ZYo7c1Ptg"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \nGroup added successfully.  ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the group.",
                      "example": "q5C69v95SPKsZ5uUi-Xbcw"
                    },
                    "display_name": {
                      "type": "string",
                      "description": "Name of the group.",
                      "example": "testGCP"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:call_pickup_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:call_pickup_group:admin"]
        }
      }
    },
    "/phone/group_call_pickup/{groupId}": {
      "get": {
        "tags": ["Group Call Pickup"],
        "summary": "Get call pickup group by ID",
        "description": "Use this API to retrieve information on a specific [Group Call Pickup](https://support.zoom.us/hc/en-us/articles/360060107472-Setting-up-and-using-group-call-pickup) object in an account. \n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:call_pickup_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "GetGCP",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "kLD4F3WBT-O9LYE31C0tRQ" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nGroup returned successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "ID of the group.",
                      "example": "qLZ4vXb8RAydayOR5ckYMg"
                    },
                    "display_name": {
                      "type": "string",
                      "description": "Name of the group.",
                      "example": "testGCP"
                    },
                    "extension_id": {
                      "type": "string",
                      "description": "Extension ID.",
                      "example": "mLG45gHYSVaeVVc64gp1jQ"
                    },
                    "extension_number": {
                      "type": "integer",
                      "description": "Extension number.",
                      "format": "int64",
                      "example": 10002
                    },
                    "description": {
                      "type": "string",
                      "description": "Description of the group.",
                      "example": "test"
                    },
                    "delay": {
                      "type": "integer",
                      "description": "Determines after how much time (in seconds) the group should be notified.",
                      "example": 5,
                      "enum": [0, 5, 10, 15]
                    },
                    "member_count": {
                      "type": "integer",
                      "description": "Member count of the group.",
                      "example": 1
                    },
                    "cost_center": {
                      "type": "string",
                      "description": "Cost center name.",
                      "example": "test"
                    },
                    "department": {
                      "type": "string",
                      "description": "Department name.",
                      "example": "test"
                    },
                    "site": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                          "example": "8f71O6rWT8KFUGQmJIFAdQ"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the site.",
                          "example": "testGCPSite"
                        }
                      }
                    },
                    "play_incoming_calls_sound": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to play incoming call sound in Zoom clients.",
                          "example": true
                        },
                        "ring_tone": {
                          "type": "string",
                          "description": "Incoming call sound in Zoom clients.",
                          "example": "ringtone_1",
                          "enum": ["ringtone_1", "ringtone_2", "ringtone_3"]
                        },
                        "duration": {
                          "type": "integer",
                          "description": "Duration (in seconds) between ring tones.",
                          "example": 0,
                          "enum": [0, 1, 3, 5]
                        }
                      }
                    },
                    "directed_call_pickup": {
                      "type": "boolean",
                      "description": "Whether the ringtone is on.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:call_pickup_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:call_pickup_group:admin"]
        }
      },
      "delete": {
        "tags": ["Group Call Pickup"],
        "summary": "Delete group call pickup objects",
        "description": "Use this API to remove a [Group Call Pickup](https://support.zoom.us/hc/en-us/articles/360060107472-Setting-up-and-using-group-call-pickup) object.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:call_pickup_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteGCP",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "NLFzgdWFTG2origU8sAT6w" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nGroup deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nGroup call pickup does not exist.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:call_pickup_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:call_pickup_group:admin"]
        }
      },
      "patch": {
        "tags": ["Group Call Pickup"],
        "summary": "Update the group call pickup information",
        "description": "Use this API to update a specific [Group Call Pickup](https://support.zoom.us/hc/en-us/articles/360060107472-Setting-up-and-using-group-call-pickup) object information.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:call_pickup_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateGCP",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "kLD4F3WBT-O9LYE31C0tRQ" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "maxLength": 32,
                    "type": "string",
                    "description": "Name of the group.",
                    "example": "test"
                  },
                  "extension_number": {
                    "type": "integer",
                    "description": "Short extension number.",
                    "format": "int64",
                    "example": 1
                  },
                  "description": {
                    "maxLength": 32,
                    "type": "string",
                    "description": "Description for the group.",
                    "example": "test"
                  },
                  "delay": {
                    "type": "integer",
                    "description": "Determines after how much time (in seconds) the group should be notified.",
                    "example": 0,
                    "enum": [0, 5, 10, 15]
                  },
                  "cost_center": {
                    "type": "string",
                    "description": "Cost center name.",
                    "example": "testCostCenter"
                  },
                  "department": {
                    "type": "string",
                    "description": "Department name.",
                    "example": "testDepartment"
                  },
                  "play_incoming_calls_sound": {
                    "type": "object",
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "Whether to play incoming call sound in Zoom clients.",
                        "example": true
                      },
                      "ring_tone": {
                        "type": "string",
                        "description": "Incoming call sound in Zoom clients.",
                        "example": "ringtone_1",
                        "default": "ringtone_1",
                        "enum": ["ringtone_1", "ringtone_2", "ringtone_3"]
                      },
                      "duration": {
                        "type": "integer",
                        "description": "Duration (in seconds) between ring tones.",
                        "example": 0,
                        "default": 0,
                        "enum": [0, 1, 3, 5]
                      }
                    },
                    "description": "This field is not available when `enable=false`"
                  },
                  "directed_call_pickup": {
                    "type": "boolean",
                    "description": "Whether the ringtone is on.",
                    "example": false
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\nGroup details updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nValidation Failed.<br>\nExtension number error.<br>\nDisplay name must be in the range of 3 to 200.<br>\nDescription is too long.<br>\nDelay must be in the range of 0 to 15.<br>\nDuration must be in the range of 0 to 5.<br>\n\n**Error Code:** `404` <br>\nGroup call pickup does not exist.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:call_pickup_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:call_pickup_group:admin"]
        }
      }
    },
    "/phone/group_call_pickup/{groupId}/members": {
      "get": {
        "tags": ["Group Call Pickup"],
        "summary": "List call pickup group members",
        "description": "Use this API to retrieve members of a [call pickup group](https://support.zoom.us/hc/en-us/articles/360060107472-Setting-up-and-using-group-call-pickup) in an account.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:call_pickup_group_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listGCPMembers",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "NLFzgdWFTG2origU8sAT6w" }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "Unique identifier of the site.",
            "required": false,
            "schema": { "type": "string", "example": "NjHmTu16Qfe8yOiNJuekXA" }
          },
          {
            "name": "extension_type",
            "in": "query",
            "description": "Type of the assignee.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user",
              "enum": ["user", "commonArea"]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nMembers listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "group_call_pickup_member": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the user to whom the group belongs.",
                            "example": "F1r_jMw4SGGljLqKdcMsvw"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "Name of the user.",
                            "example": "testGCPUser"
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "Extension ID.",
                            "example": "qLZ4vr_jMw4SFUGQmJI"
                          },
                          "extension_type": {
                            "type": "string",
                            "description": "Type of the assignee.",
                            "example": "user",
                            "enum": ["user", "commonArea"]
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "Zoom Phone extension number.",
                            "format": "int64",
                            "example": 10001
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "fefeLbe42"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call for each page.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:call_pickup_group_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:call_pickup_group_member:admin"]
        }
      },
      "post": {
        "tags": ["Group Call Pickup"],
        "summary": "Add members to a call pickup group",
        "description": "Use this API to add members to the specified [Group Call Pickup](https://support.zoom.us/hc/en-us/articles/360060107472-Setting-up-and-using-group-call-pickup) object. \n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:call_pickup_group_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addGCPMembers",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "SQv52YtkRLC2dwrDdYtGsA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "member_extension_ids": {
                    "maximum": 100,
                    "type": "array",
                    "items": {
                      "type": "string",
                      "description": "Extension ID of user/common areas.",
                      "example": "SQv52YtkRLC2dwrDdYtGsA"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \nMembers added successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n**Error Code:** `404` <br>\nGroup call pickup does not exist.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:call_pickup_group_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:call_pickup_group_member:admin"]
        }
      }
    },
    "/phone/group_call_pickup/{groupId}/members/{extensionId}": {
      "delete": {
        "tags": ["Group Call Pickup"],
        "summary": "Remove members from call pickup group",
        "description": "Use this API to remove member from the [Group Call Pickup](https://support.zoom.us/hc/en-us/articles/360060107472-Setting-up-and-using-group-call-pickup) object. \n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:call_pickup_group_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "removeGCPMembers",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "pl1XprjhTQK1CCMVKTqCFA" }
          },
          {
            "name": "extensionId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "lA68sMSVQ6GAUcGg_GH0nQ" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nMembers removed successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nGroup call pickup does not exist.<br>\nMember does not exist.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:call_pickup_group_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:call_pickup_group_member:admin"]
        }
      }
    },
    "/phone/groups/{groupId}/settings": {
      "get": {
        "tags": ["Groups"],
        "summary": "Get group phone settings",
        "description": "Returns group phone settings.\n\n**Prerequisites:**\n * Account must have a Pro or a higher plan with Zoom Phone license.\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:group_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getGroupPhoneSettings",
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "description": "The group ID. \n\nIt can be retrieved from the [List groups](https://developers.zoom.us/docs/api/rest/reference/zoom-api/methods/#operation/groups) API.",
            "required": true,
            "schema": { "type": "string", "example": "ga7oLPx7ScWqGoAUxIFeOg" }
          },
          {
            "name": "setting_types",
            "in": "query",
            "description": "This setting corresponds to the setting item you want to modify. \n\nIt is separated by a comma. \n\nAllowed values:\n `call_live_transcription`, `local_survivability_mode`, `select_outbound_caller_id`, `personal_audio_library`, `voicemail`, `voicemail_transcription`, `voicemail_notification_by_email`, `shared_voicemail_notification_by_email`, `restricted_call_hours`, `allowed_call_locations`, `check_voicemails_over_phone`, `connect_to_operator`, `auto_call_recording`, `ad_hoc_call_recording`, `outbound_calling`, `outbound_sms`, `international_calling`, `sms`, `zoom_phone_on_mobile`, `zoom_phone_on_pwa`, `sms_etiquette_tool`, `e2e_encryption`, `call_handling_forwarding`, `call_overflow`, `call_transferring`, `elevate_to_meeting`, `call_park`, `hand_off_to_room`, `mobile_switch_to_carrier`, `delegation`, `audio_intercom`, `block_list_for_inbound_calls_and_messaging`, `block_calls_without_caller_id`, `block_external_calls`, `peer_to_peer_media`, `advanced_encryption`, `display_call_feedback_survey`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "call_live_transcription,voicemail"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nGroup settings retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_live_transcription": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified.",
                          "example": true
                        },
                        "transcription_start_prompt": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "audio_id": {
                              "type": "string",
                              "description": "The audio prompt file ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                              "example": "yCT14TwySDGVUypVlKNEyA"
                            },
                            "audio_name": {
                              "type": "string",
                              "description": "The audio prompt file name.",
                              "example": "example.mp3"
                            }
                          },
                          "description": "Whether to play a prompt to call participants when the transcription has started."
                        }
                      },
                      "description": "Whether to let users turn on live transcriptions for a call."
                    },
                    "local_survivability_mode": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified.",
                          "example": true
                        }
                      },
                      "description": "Whether to allow user or extension to have core phone services in the event of an outage."
                    },
                    "select_outbound_caller_id": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow extensions to change outbound caller ID when placing calls.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified.",
                          "example": true
                        },
                        "allow_hide_outbound_caller_id": {
                          "type": "boolean",
                          "description": "Whether to allow the current extension to hide outbound caller id. Settings is only available with client version 5.13.5 or later.",
                          "example": true
                        }
                      }
                    },
                    "personal_audio_library": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow users to change their own audio library.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified.",
                          "example": true
                        },
                        "allow_music_on_hold_customization": {
                          "type": "boolean",
                          "description": "Whether to allow music on hold customization.",
                          "example": true
                        },
                        "allow_voicemail_and_message_greeting_customization": {
                          "type": "boolean",
                          "description": "Whether to allow voicemail and message greeting customization.",
                          "example": true
                        }
                      }
                    },
                    "voicemail": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow users to access, receive or share voicemail and video mail.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified.",
                          "example": true
                        },
                        "allow_delete": {
                          "type": "boolean",
                          "description": "Whether to allow users to delete their own voicemail.",
                          "example": true
                        },
                        "allow_download": {
                          "type": "boolean",
                          "description": "Whether to allow users to download their own voicemail.",
                          "example": false
                        },
                        "allow_videomail": {
                          "type": "boolean",
                          "description": "Whether to allow users to access, share, download or delete video mail.",
                          "example": true
                        },
                        "allow_share": {
                          "type": "boolean",
                          "description": "Whether to allow user to share their own voicemail.",
                          "example": false
                        },
                        "allow_virtual_background": {
                          "type": "boolean",
                          "description": "Whether to allow virtual background for videomail or video greeting.",
                          "example": false
                        }
                      }
                    },
                    "voicemail_transcription": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to enable voicemail or videomail transcription feature for user, auto receptionist, call queue, and shared line groups.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified.",
                          "example": true
                        }
                      }
                    },
                    "voicemail_notification_by_email": {
                      "type": "object",
                      "properties": {
                        "include_voicemail_file": {
                          "type": "boolean",
                          "description": "Whether to include the voicemail file.",
                          "example": true
                        },
                        "include_voicemail_transcription": {
                          "type": "boolean",
                          "description": "Whether to include the voicemail transcription.",
                          "example": false
                        },
                        "forward_voicemail_to_email": {
                          "type": "boolean",
                          "description": "Whether to forward the voicemail to email.",
                          "example": true
                        },
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      },
                      "description": "Once enabled, users receive email notifications when there is a new voicemail from users, call queues, auto receptionists, or shared line groups. Users who disabled the shared voicemail notification by email policy do not receive notifications."
                    },
                    "shared_voicemail_notification_by_email": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. \n\nIf modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      },
                      "description": "Once enabled, users receive email notification when there is a new shared voicemail or videomail. \n\nIf the extension that shares the voicemail or videomail has disabled the voicemail or videomail notification by email policy, then users do not receive notifications."
                    },
                    "restricted_call_hours": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to define when the user cannot make or accept calls and send SMS. In the restricted hours, calls will follow &quot;When a call is not answered&quot; settings. Outbound and inbound emergency calls will still be allowed.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits modifying the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        },
                        "time_zone": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The [time zone list](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists/#timezones) for supported time zones and their formats.",
                              "example": "America/Adak"
                            },
                            "name": {
                              "type": "string",
                              "description": "The time zone name. If time zone id is empty, it shows as `setByExtension`.",
                              "example": "(GMT-9:00) Adak"
                            }
                          },
                          "description": "Set either time zone `id` or `set_by_extension`."
                        },
                        "restricted_hours_applied": {
                          "type": "boolean",
                          "description": "Whether restricted hours has been applied.",
                          "example": false
                        },
                        "restricted_holiday_hours_applied": {
                          "type": "boolean",
                          "description": "Whether restricted holiday hours has been applied.",
                          "example": false
                        },
                        "allow_internal_calls": {
                          "type": "boolean",
                          "description": "Whether to allow internal calls/SMS during restricted hours.",
                          "example": true
                        }
                      }
                    },
                    "allowed_call_locations": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to define where the extension or user can make and accept calls, and send SMS. When the extension or user is outside of the allowed locations, calls will follow &quot;When a call is not answered&quot; settings. Outbound and inbound emergency calls and SMS will still be allowed. Note: SMS settings will only be available to users.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits modifying the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        },
                        "locations_applied": {
                          "type": "boolean",
                          "description": "Whether locations has been applied.",
                          "example": false
                        },
                        "allow_internal_calls": {
                          "type": "boolean",
                          "description": "Whether to allow internal calls when outside of allowed locations",
                          "example": true
                        }
                      }
                    },
                    "check_voicemails_over_phone": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      },
                      "description": "Once enabled, users can check voicemails over phone using a PIN code."
                    },
                    "auto_call_recording": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether automatic call recording is enabled.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "recording_calls": {
                          "type": "string",
                          "description": "The type of calls automatically recorded: \n* `inbound` \n* `outbound` \n* `both`",
                          "example": "inbound",
                          "enum": ["inbound", "outbound", "both"]
                        },
                        "recording_transcription": {
                          "type": "boolean",
                          "description": "Whether the call recording transcription is enabled.",
                          "example": true
                        },
                        "recording_start_prompt": {
                          "type": "boolean",
                          "description": "Whether a prompt plays to call participants when the recording has started.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` to operate inbound and outbound prompt separately.\n\n<b>Note:</b> \n* if customers who opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt` and `inbound_audio_notification.recording_start_prompt` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt` will be also updated.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent. when the field is updated, the `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` will be also updated.",
                          "example": true,
                          "deprecated": true
                        },
                        "recording_start_prompt_audio_id": {
                          "type": "string",
                          "description": "The audio that plays when the recording has started. You can use this audio ID to get the audio information using [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_start_prompt_audio_id` and `outbound_audio_notification.recording_start_prompt_audio_id` to operate inbound and outbound prompt separately.\n\n<b>Note:</b> \n* if customers who opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt_audio_id` and `inbound_audio_notification.recording_start_prompt_audio_id` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt_audio_id` will be also updated.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt_audio_id`, `inbound_audio_notification.recording_start_prompt_audio_id`, and `outbound_audio_notification.recording_start_prompt_audio_id` always remain consistent. when the field is updated, the `inbound_audio_notification.recording_start_prompt_audio_id`, and `outbound_audio_notification.recording_start_prompt_audio_id` will be also updated.",
                          "example": "ySMexBgBQsioV8KKCUybTA",
                          "deprecated": true
                        },
                        "recording_explicit_consent": {
                          "type": "boolean",
                          "description": "Whether the `Press 1 option that provides recording consent` is enabled.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` to operate inbound and outbound prompt separately.\n\n<b>Note:</b> \n* if customers who opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent` and `inbound_audio_notification.recording_explicit_consent` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_explicit_consent` will be also updated.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent. when the field is updated, the `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` will be also updated.",
                          "example": true,
                          "deprecated": true
                        },
                        "allow_stop_resume_recording": {
                          "type": "boolean",
                          "description": "Whether the stop and resume of automatic call recording is enabled.",
                          "example": true
                        },
                        "disconnect_on_recording_failure": {
                          "type": "boolean",
                          "description": "Whether a call disconnects when there is an issue with the automatic call recording and the call cannot reconnect after five seconds. This does **not** include emergency calls.",
                          "example": true
                        },
                        "play_recording_beep_tone": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to play a side tone beep for recorded users while recording. Only displayed when auto call recording policy uses the new framework.",
                              "example": true
                            },
                            "play_beep_volume": {
                              "type": "integer",
                              "description": "The volume of the side tone beep. It displays only when `enable` is set to `true`.",
                              "example": 60,
                              "enum": [0, 20, 40, 60, 80, 100]
                            },
                            "play_beep_time_interval": {
                              "type": "integer",
                              "description": "The beep time interval in seconds. It displays only when `enable` is true.",
                              "example": 15,
                              "enum": [5, 10, 15, 20, 25, 30, 60, 120]
                            },
                            "play_beep_member": {
                              "type": "string",
                              "description": "The beep sides. It displays only when `enable` is true.",
                              "example": "allMember",
                              "enum": ["allMember", "recordingSide"]
                            }
                          }
                        },
                        "inbound_audio_notification": {
                          "type": "object",
                          "properties": {
                            "recording_start_prompt": {
                              "type": "boolean",
                              "description": "Whether a prompt plays to call participants when the recording has started for inbound call is enabled.\n\n<b>Note:</b> \n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                              "example": true
                            },
                            "recording_start_prompt_audio_id": {
                              "type": "string",
                              "description": "The audio that plays when the recording has started for inbound call. You can use this audio ID to get the audio information using [Get an audio item](https://developer.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.\n\n<b>Note:</b> \n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt_audio_id`, `inbound_audio_notification.recording_start_prompt_audio_id`, and `outbound_audio_notification.recording_start_prompt_audio_id` always remain consistent.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt_audio_id` and `outbound_audio_notification.recording_start_prompt_audio_id` with the same value.",
                              "example": "ySMexBgBQsioV8KKCUybTA"
                            },
                            "recording_explicit_consent": {
                              "type": "boolean",
                              "description": "Whether the **Press 1** option that provides recording consent for inbound call is enabled.\n\n<b>Note:</b> \n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options, update both `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` with the same value.",
                              "example": true
                            }
                          }
                        },
                        "outbound_audio_notification": {
                          "type": "object",
                          "properties": {
                            "recording_start_prompt": {
                              "type": "boolean",
                              "description": "Whether a prompt plays to call participants when the recording has started for outbound call is enabled.\n\n<b>Note:</b> \n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, please update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                              "example": true
                            },
                            "recording_start_prompt_audio_id": {
                              "type": "string",
                              "description": "The audio that plays when the recording has started for outbound call. You can use this audio ID to get the audio information using [Get an audio item](https://developer.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.\n\n<b>Note:</b> \n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt_audio_id`, `inbound_audio_notification.recording_start_prompt_audio_id`, and `outbound_audio_notification.recording_start_prompt_audio_id` always remain consistent.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, please update both `inbound_audio_notification.recording_start_prompt_audio_id` and `outbound_audio_notification.recording_start_prompt_audio_id` with the same value.",
                              "example": "ySMexBgBQsioV8KKCUybTA"
                            },
                            "recording_explicit_consent": {
                              "type": "boolean",
                              "description": "Whether the **Press 1** option that provides recording consent for outbound call is enabled.\n\n<b>Note:</b> \n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` with the same value.",
                              "example": true
                            }
                          }
                        }
                      },
                      "description": "Whether to automatically record all inbound and outbound calls."
                    },
                    "ad_hoc_call_recording": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether the current extension can record and save calls to the cloud.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "account",
                          "enum": ["invalid", "account", "site"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        },
                        "recording_transcription": {
                          "type": "boolean",
                          "description": "Whether the call recording transcription is enabled.",
                          "example": true
                        },
                        "allow_download": {
                          "type": "boolean",
                          "description": "Whether to allow user to download their own ad-hoc recording.",
                          "example": true
                        },
                        "allow_delete": {
                          "type": "boolean",
                          "description": "Whether to allow user to delete their own ad-hoc recording.",
                          "example": true
                        },
                        "recording_start_prompt": {
                          "type": "boolean",
                          "description": "Whether a prompt plays to call participants when the recording has started.",
                          "example": true
                        },
                        "recording_explicit_consent": {
                          "type": "boolean",
                          "description": "Whether the Press 1 option that provides recording consent is enabled.",
                          "example": true
                        },
                        "play_recording_beep_tone": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to play the side tone beep for recorded users while recording. It displays only when ad hoc call recording policy uses the new framework.",
                              "example": true
                            },
                            "play_beep_volume": {
                              "type": "integer",
                              "description": "The side tone beep volume. It displays only when `enable` is set to `true`.",
                              "example": 60,
                              "enum": [0, 20, 40, 60, 80, 100]
                            },
                            "play_beep_time_interval": {
                              "type": "integer",
                              "description": "The beep time interval in seconds. It displays only when the `enable` is set to true.",
                              "example": 15,
                              "enum": [5, 10, 15, 20, 25, 30, 60, 120]
                            },
                            "play_beep_member": {
                              "type": "string",
                              "description": "The beep sides. It displays only when the `enable` is set to true.",
                              "example": "allMember",
                              "enum": ["allMember", "recordingSide"]
                            }
                          }
                        }
                      },
                      "description": "Whether to allow extensions to record and save calls in the cloud."
                    },
                    "zoom_phone_on_mobile": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "This field allows users to use Zoom Phone on mobile clients (iOS, iPad OS, and Android).",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        },
                        "allow_calling_sms_mms": {
                          "type": "boolean",
                          "description": "This field allows calling and SMS/MMS functions on mobile.",
                          "example": true
                        }
                      }
                    },
                    "zoom_phone_on_pwa": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      },
                      "description": "Whether to allow user to use Zoom Phone on Zoom Progressive Web App."
                    },
                    "sms_etiquette_tool": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        },
                        "sms_etiquette_policy": {
                          "type": "array",
                          "description": "The SMS etiquette policy. The maximum size is 50.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The SMS etiquette policy ID.",
                                "example": "PdPtFFDbQhKr05WepCHhWQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The SMS etiquette policy name.",
                                "example": "invalid symbol"
                              },
                              "description": {
                                "type": "string",
                                "description": "The SMS etiquette policy description.",
                                "example": "invalid symbol"
                              },
                              "rule": {
                                "type": "integer",
                                "description": "The SMS etiquette policy rule, `1` - Keywords, `2` - Regular Expression.",
                                "example": 1,
                                "enum": [1, 2]
                              },
                              "content": {
                                "type": "string",
                                "description": "The SMS etiquette policy content. For rule `1`, add keywords separated by comma, the following characters are supported A-Z, a-z, 0-9. For rule `2`, add regular expressions, back references and zero-width assertions area not supported.",
                                "example": "test"
                              },
                              "action": {
                                "type": "integer",
                                "description": "The actions taken when a policy is triggered, `1` - ask user to confirm sending of message, `2` - block the message.",
                                "example": 1,
                                "enum": [1, 2]
                              },
                              "active": {
                                "type": "boolean",
                                "description": "Whether active or not.",
                                "example": true
                              }
                            }
                          }
                        }
                      },
                      "description": "This field identifies defined keywords and text patterns over SMS and prevents users from sharing unwanted messages."
                    },
                    "outbound_calling": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to define calling rules to restrict user or extension from calling specific countries, cities, or numbers.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. \n\nIf modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      }
                    },
                    "outbound_sms": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow users to send and receive messages. \n\nYou will still need to assign a valid calling plan and phone number to each user for them to send and receive messages.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. \n\nIf modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      }
                    },
                    "international_calling": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits modifying the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified.",
                          "example": true
                        }
                      },
                      "description": "Whether the current extension can make international calls outside of their calling plan."
                    },
                    "sms": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow user to send and receive messages. \n\nYou will still need to assign a valid calling plan and phone number to the user in order to send and receive messages.",
                          "example": true
                        },
                        "international_sms": {
                          "type": "boolean",
                          "description": "Whether the user can send and receive international messages.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. \n\nIf modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      }
                    },
                    "e2e_encryption": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow users to switch their calls to end-to-end encryption. \n\nFor users who have Automatic Call Recording turned on, they will need the option **Allow user to stop and resume automatic call recording** to use end-to-end encryption.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      }
                    },
                    "call_handling_forwarding": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        },
                        "call_forwarding_type": {
                          "type": "integer",
                          "description": "`1` - Low restriction (external numbers not allowed)\n`2` - Medium restriction (external numbers and external contacts not allowed)\n `3` - High restriction (external numbers, external contacts and internal extensions without inbound automatic call recording not allowed)\n`4` - No restriction",
                          "example": 1,
                          "enum": [1, 2, 3, 4]
                        }
                      },
                      "description": "Whether to allow users to forward their calls to other numbers."
                    },
                    "call_overflow": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow users to forward their calls to other numbers.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        },
                        "call_overflow_type": {
                          "type": "integer",
                          "description": "`1` - Can forward to internal extensions and to external contacts.\n`2` - Can forward only to internal extensions.\n`3` - Can forward only to internal extensions that require inbound Automatic Call Recording.\n`4` - Can forward to internal extensions, external contacts, and external numbers.",
                          "example": 1,
                          "enum": [1, 2, 3, 4]
                        }
                      }
                    },
                    "call_transferring": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow user to warm or blind transfer their calls. This does not apply to warm transfer on IP Phones except for Yealink. Voicemail is transferable only to internal extensions.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        },
                        "call_transferring_type": {
                          "type": "integer",
                          "description": "1-No restriction.\n2-Medium restriction (external numbers and external contacts not allowed).\n3-High restriction (external numbers, unrecorded external contacts, and internal extensions without inbound automatic recording not allowed).\n4-Low restriction (external numbers not allowed).",
                          "example": 1,
                          "enum": [1, 2, 3, 4]
                        }
                      }
                    },
                    "elevate_to_meeting": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow users to elevate their phone calls to a meeting.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. \n\nIf modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      }
                    },
                    "call_park": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow calls placed on hold to be resumed from another location using a retrieval code.",
                          "example": true
                        },
                        "expiration_period": {
                          "type": "integer",
                          "description": "A time limit for parked calls in minutes. After the expiration period ends, the retrieval code is no longer valid and a new code will be generated.",
                          "example": 3,
                          "enum": [
                            1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30, 35,
                            40, 45, 50, 55, 60
                          ]
                        },
                        "call_not_picked_up_action": {
                          "type": "integer",
                          "description": "The action when a parked call is not picked up. \n `100` - Ring back to parker \n`0` - Forward to voicemail of the parker \n`9` - Disconnect \n `50` - Forward to another extension",
                          "example": 50
                        },
                        "forward_to": {
                          "type": "object",
                          "properties": {
                            "display_name": {
                              "type": "string",
                              "description": "The extension's name.",
                              "example": "ZOOM_API Test"
                            },
                            "extension_id": {
                              "type": "string",
                              "description": "The extension ID.",
                              "example": "TO586CYlQFC_WCUvPRXytA"
                            },
                            "extension_number": {
                              "type": "integer",
                              "description": "The extension number.",
                              "format": "int64",
                              "example": 100014
                            },
                            "extension_type": {
                              "type": "string",
                              "description": "The type of extension: \n* `user` \n* `zoomRoom` \n* `commonArea`\n* `ciscoRoom/polycomRoom` \n* `autoReceptionist` \n* `sharedLineGroup` \n* `callQueue`",
                              "example": "user",
                              "enum": [
                                "user",
                                "zoomRoom",
                                "commonArea",
                                "ciscoRoom/polycomRoom",
                                "autoReceptionist",
                                "callQueue",
                                "sharedLineGroup"
                              ]
                            },
                            "id": {
                              "type": "string",
                              "description": "The ID of the extension `user`, `zoomRoom`, `commonArea`, `ciscoRoom/polycomRoom`, `autoReceptionist`, `callQueue` or `sharedLineGroup`.",
                              "example": "oG_nYRFuTJiY1tu0Fur_4Q"
                            }
                          },
                          "description": "The extension's forwarding information."
                        },
                        "sequence": {
                          "type": "integer",
                          "description": "This field is only used in the new policy framework. Choose how parked calls are assigned to a BLF (Busy Lamp Field) key. Sequential assignment will park the call at the next available BLF key. Random assignment will park the call at a randomly selected BLF key. \n`0` - Random \n`1` - Sequential",
                          "example": 1,
                          "enum": [0, 1]
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": false
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      }
                    },
                    "hand_off_to_room": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow users to send a call to a Zoom Room.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. \n\nIf modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      }
                    },
                    "mobile_switch_to_carrier": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow the user to switch from a Zoom Phone to their native carrier.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      }
                    },
                    "delegation": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      },
                      "description": "Whether to allow users to use delegation."
                    },
                    "audio_intercom": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. \n\nIf modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      },
                      "description": "Whether to allow hands-free peer-to-peer conversations. When an intercom call is received, the phone will beep to notify the user of the incoming intercom call, and the user's phone will automatically answer the intercom call."
                    },
                    "block_list_for_inbound_calls_and_messaging": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allows users and administrators to block inbound calls and SMS/MMS from phone numbers or prefixes.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified.",
                          "example": true
                        }
                      }
                    },
                    "block_calls_without_caller_id": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      },
                      "description": "Whether calls without caller ID will be blocked."
                    },
                    "block_external_calls": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset(displayed when using old or new policy framework).",
                          "example": true
                        },
                        "block_business_hours": {
                          "type": "boolean",
                          "example": true
                        },
                        "block_closed_hours": {
                          "type": "boolean",
                          "example": true
                        },
                        "block_holiday_hours": {
                          "type": "boolean",
                          "example": true
                        },
                        "block_call_action": {
                          "type": "integer",
                          "description": "The action when a call is blocked. `9` - Disconnect, `0`- Forward to voicemail/videomail.",
                          "example": 0,
                          "enum": [0, 9]
                        }
                      },
                      "description": "This field allows you to set rules for blocking external calls during business, closed, and holiday hours. This feature is only available for User, Zoom Room and Common Area."
                    },
                    "peer_to_peer_media": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. \n\nIf modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      },
                      "description": "Whether to allow Zoom clients to send media directly to each other. \n\nUsers or devices that have certain features like recording or monitoring enabled might not be able to use Peer to Peer Media."
                    },
                    "advanced_encryption": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset(displayed when using old or new policy framework).",
                          "example": true
                        },
                        "disable_incoming_unencrypted_voicemail": {
                          "type": "boolean",
                          "description": "Whether to disable incoming unencrypted voicemail",
                          "example": true
                        }
                      },
                      "description": "Whether to allow voicemail to be encrypted with keys which are not accessible to Zoom servers. \n\nThese voicemails can be decrypted only by the intended user recipient. \n\nShared line appearance, shared line group, call queue, or auto receptionist voicemail will not be encrypted, but can still be played. \n\nEmail to voicemail, transcriptions, ability to check voicemails by dialing into the voicemail system, or web are not available when this feature is enabled. This policy requires a Power Pack license to be enabled. If the user does who inherits this policy does not have a Power Pack license, the policy will not be applied. Settings is only available with client version 5.12 or later."
                    },
                    "display_call_feedback_survey": {
                      "type": "object",
                      "properties": {
                        "enable": { "type": "boolean", "example": true },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits the modification of the current settings.",
                          "example": "user_group",
                          "enum": ["invalid", "account", "user_group"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        },
                        "feedback_type": {
                          "type": "integer",
                          "description": "This field allows you to display feedback survey, `1` - display for every call, `2` - display when call quality issues are detected. Default `1`, if set with value `2`, need to set `feed_back_mos` or `feedback_duration`.",
                          "example": 1,
                          "enum": [1, 2]
                        },
                        "feedback_mos": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "min": { "type": "string", "example": "1.1" },
                            "max": { "type": "string", "example": "3.0" }
                          },
                          "description": "The MOS score. Min: 1.0, Max: 3.0, format one decimal point."
                        },
                        "feedback_duration": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "min": { "type": "integer", "example": 0 },
                            "max": { "type": "integer", "example": 60 }
                          },
                          "description": "The call duration, in seconds, 0-60."
                        }
                      },
                      "description": "Whether to display a thumbs up or down survey at the end of each call. \n\nIf participants respond with thumbs down, they can provide additional information about what went wrong."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Group does not exist. <br>\nSetting type(s) supplied in query parameter setting_types is invalid. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:group_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:group_setting:admin"]
        }
      }
    },
    "/phone/auto_receptionists/{autoReceptionistId}/ivr": {
      "get": {
        "tags": ["IVR"],
        "summary": "Get auto receptionist IVR",
        "description": "Gets an [interactive voice response (IVR) system](https://support.zoom.us/hc/en-us/articles/360038601971) of the specified auto receptionist.\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:auto_receptionist_ivr:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getAutoReceptionistIVR",
        "parameters": [
          {
            "name": "autoReceptionistId",
            "in": "path",
            "description": "The unique identifier of the auto receptionist. It can be retrieved from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.",
            "required": true,
            "schema": { "type": "string", "example": "HpgmeAcmSVK-UY-0RxDcfg" }
          },
          {
            "name": "hours_type",
            "in": "query",
            "description": "The query hours type: `business_hours` or `closed_hours`, default `business_hours`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "business_hours",
              "default": "business_hours"
            }
          },
          {
            "name": "holiday_id",
            "in": "query",
            "description": "The auto receptionist holiday hours ID. If both `holiday_id` and `hours_type` are passed, `holiday_id` has a high priority and `hours_type` is invalid.",
            "required": false,
            "schema": { "type": "string", "example": "YpLBylKbQKe1vEB1iSGatQ" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n Get an interactive voice response (IVR) system of an auto receptionist.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "audio_prompt": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The audio prompt file ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                          "example": "yCT14TwySDGVUypVlKNEyA"
                        },
                        "name": {
                          "type": "string",
                          "description": "The audio prompt file name.",
                          "example": "example.mp3"
                        }
                      }
                    },
                    "caller_enters_no_action": {
                      "type": "object",
                      "properties": {
                        "action": {
                          "type": "integer",
                          "description": "The action if the caller enters no action after the prompt played.  \n \n`-1` Disconnect the call  \n \n`2` Forward to the user\n  \n `4` Forward to the common area\n  \n `5` Forward to Cisco/Polycom Room\n  \n `6` Forward to the auto receptionist\n  \n `7` Forward to the call queue\n  \n `8` Forward to the shared line group\n  \n `15` Forward to the Contact Center\n",
                          "example": 15
                        },
                        "audio_prompt_repeat": {
                          "type": "integer",
                          "description": "The number of times to repeat the audio prompt.",
                          "example": 3,
                          "enum": [1, 2, 3]
                        },
                        "forward_to": {
                          "type": "object",
                          "properties": {
                            "display_name": {
                              "type": "string",
                              "description": "The display name.",
                              "example": "ZOOM_API Test"
                            },
                            "extension_id": {
                              "type": "string",
                              "description": "The extension ID or contact center setting ID.",
                              "example": "z97zV9NsSoa846i-ag3uEw"
                            },
                            "extension_number": {
                              "type": "string",
                              "description": "The extension number.",
                              "example": "101021"
                            },
                            "id": {
                              "type": "string",
                              "description": "The user, common area, Zoom Room, Cisco/Polycom room, auto receptionist, call queue, or shared line group ID.",
                              "example": "EVqEKnrMRWyPr705Fk5h2w"
                            }
                          }
                        }
                      },
                      "description": "The action if caller enters no action after the prompt played."
                    },
                    "key_actions": {
                      "type": "array",
                      "description": "IVR routing options.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "integer",
                            "description": "The action after clicking the key.  \n \nFor key `0`-`9`  \n \n`100` Leave voicemail to the current extension  \n \n`200` Leave voicemail to the user  \n \n`300` Leave voicemail to the auto receptionist  \n \n`400` Leave voicemail to the  call queue  \n \n`500` Leave voicemail to the shared line group  \n \n`2` Forward to the user  \n \n`3` Forward to Zoom Room  \n \n`4` Forward to the common area  \n \n`5` Forward to Cisco/Polycom Room  \n \n`6` Forward to the auto receptionist  \n \n`7` Forward to the call queue  \n \n`8` Forward to the shared line group  \n \n`9` Forward to external contacts  \n \n`10` Forward to a phone number  \n \n`15` Forward to the contact center  \n \n`16` Forward to the meeting service  \n \n`17` Forward to the meeting service number  \n \n`-1` Disabled\n\nFor key * or #  \n \n`21` Repeat menu greeting  \n \n`22` Return to the root menu  \n \n`23` Return to the previous menu  \n \n`-1` Disabled",
                            "example": 200
                          },
                          "key": {
                            "type": "string",
                            "description": "The key. The following values are supported: numeric('0'-'9'), *, #.",
                            "example": "0"
                          },
                          "target": {
                            "type": "object",
                            "properties": {
                              "display_name": {
                                "type": "string",
                                "description": "The display name.",
                                "example": "ZOOM_API Test"
                              },
                              "extension_id": {
                                "type": "string",
                                "description": "The extension ID or contact center setting ID.",
                                "example": "TO586CYlQFC_WCUvPRXytA"
                              },
                              "extension_number": {
                                "type": "string",
                                "description": "The extension number.",
                                "example": "101002"
                              },
                              "id": {
                                "type": "string",
                                "description": "The user, common area, Zoom Room, Cisco/Polycom room, auto receptionist, call queue, or shared line group ID.",
                                "example": "oG_nYRFuTJiY1tu0Fur_4Q"
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "The phone number to forward to in E164 format.",
                                "example": "+12055437350"
                              }
                            },
                            "description": "The route to an extension, phone number, or a contact center."
                          },
                          "voicemail_greeting": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The voicemail greeting file ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                "example": "j2IsurWLRR-yWcbNGqPnaA"
                              },
                              "name": {
                                "type": "string",
                                "description": "The voicemail greeting file name.",
                                "example": "custom.wav"
                              }
                            },
                            "description": "The voicemail greeting."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nAuto Receptionist does not exist: {0}.\nHoliday hours handling does not exist: {0}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:auto_receptionist_ivr:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:auto_receptionist_ivr:admin"]
        }
      },
      "patch": {
        "tags": ["IVR"],
        "summary": "Update auto receptionist IVR",
        "description": "Updates the [interactive voice response (IVR) system](https://support.zoom.us/hc/en-us/articles/360038601971) of the specified auto receptionist.\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:auto_receptionist_ivr:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateAutoReceptionistIVR",
        "parameters": [
          {
            "name": "autoReceptionistId",
            "in": "path",
            "description": "The auto receptionist id.",
            "required": true,
            "schema": { "type": "string", "example": "HpgmeAcmSVK-UY-0RxDcfg" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "audio_prompt_id": {
                    "type": "string",
                    "description": "The audio prompt file ID.",
                    "example": "j2IsurWLRR-yWcbNGqPnaA"
                  },
                  "caller_enters_no_action": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "type": "integer",
                        "description": "The action if caller enters no action after the prompt played.\n-1 Disconnect the call\n2 Forward to the user\n4 Forward to the common area\n5 Forward to Cisco/Polycom Room\n6 Forward to the auto receptionist\n7 Forward to the call queue\n8 Forward to the shared line group\n15 Forward to the Contact Center\n",
                        "example": 200
                      },
                      "audio_prompt_repeat": {
                        "type": "integer",
                        "description": "The number of times to repeat the audio prompt.",
                        "example": 2,
                        "enum": [1, 2, 3]
                      },
                      "forward_to_extension_id": {
                        "type": "string",
                        "description": "The extension ID or contact center setting ID.",
                        "example": "z97zV9NsSoa846i-ag3uEw"
                      }
                    },
                    "description": "The action if caller enters no action after the prompt played."
                  },
                  "holiday_id": {
                    "type": "string",
                    "description": "The auto receptionist holiday hours ID. If both `holiday_id` and `hours_type` are passed, `holiday_id` has a high priority and `hours_type` is invalid.",
                    "example": "YpLBylKbQKe1vEB1iSGatQ"
                  },
                  "hours_type": {
                    "type": "string",
                    "description": "Hours type: `business_hours` (default) or `closed_hours`.",
                    "example": "closed_hours"
                  },
                  "key_action": {
                    "type": "object",
                    "properties": {
                      "action": {
                        "type": "integer",
                        "description": "The action after clicking the key.  \n \nFor key `0`-`9`\n100 Leave voicemail to the current extension\n200 Leave voicemail to the user\n300 Leave voicemail to the auto receptionist\n400 Leave voicemail to the  call queue\n500 Leave voicemail to the shared line group\n2 Forward to the user\n3 Forward to Zoom Room\n4 Forward to the common area\n5 Forward to Cisco/Polycom Room\n6 Forward to the auto receptionist\n7 Forward to the call queue\n8 Forward to the shared line group\n9 Forward to external contacts\n10 Forward to a phone number\n15 Forward to the contact center\n16 Forward to the meeting service\n17 Forward to the meeting service number\n-1 Disabled\n\nFor key * or #\n21 Repeat menu greeting\n22 Return to the root menu\n23 Return to the previous menu\n-1 Disabled",
                        "example": 200
                      },
                      "key": {
                        "type": "string",
                        "description": "The key. The following values are supported: numeric('0'-'9'), *, #.",
                        "example": "0"
                      },
                      "target": {
                        "type": "object",
                        "properties": {
                          "extension_id": {
                            "type": "string",
                            "description": "The extension ID or contact center setting ID.",
                            "example": "CQLPaj0oSCC0olJLmAfgwQ"
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number to forward.",
                            "example": "+12055437350"
                          }
                        }
                      },
                      "voicemail_greeting_id": {
                        "type": "string",
                        "description": "The voicemail greeting file ID.",
                        "example": "z97zV9NsSoa846i-ag3uEw"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nAuto Receptionist IVR updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nAuto Receptionist does not exist: {0}.\nHoliday hours handling does not exist: {0}.\n\n**Error Code:** `300` <br>\nThe number of times to repeat the audio prompt is required and can not be greater than 3.\nThe action value set for if caller enters no action after the prompt played is not correct.\nThe action value is not correct.\nThe id for noAction to forward to is not correct.\nVoicemail greeting file id is required.\nThe phone number to forward to is required.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:auto_receptionist_ivr:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:auto_receptionist_ivr:admin"]
        }
      }
    },
    "/phone/extension/{extensionId}/inbound_blocked/rules": {
      "get": {
        "tags": ["Inbound Blocked List"],
        "summary": "List an extension's inbound block rules",
        "description": "Returns a list of the given extension's block rule for inbound calls and messaging. \n\nit lists inbound block rule for the given Call Queue, Auto Receptionist, Shared Line Group, Common Area, Zoom Room, or User.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n\n**Scopes:** `phone:read:admin`,`phone:read`\n\n**Granular Scopes:** `phone:read:list_extension_inbound_block_rules:admin`,`phone:read:list_extension_inbound_block_rules`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "ListExtensionLevelInboundBlockRules",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "The extension ID for the inbound blocked rules to fetch.",
            "required": true,
            "schema": { "type": "string", "example": "WfsrPERXS8inWrpH1Hi_KQ" }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The partial string of a phone number.",
            "required": false,
            "schema": { "type": "string", "example": "11067" }
          },
          {
            "name": "match_type",
            "in": "query",
            "description": "The match type for the block rule:\n* `phoneNumber`: Only a specific phone number that is shown in the `blocked_number` field is blocked.\n* `prefix`: All numbers starting with the prefix that is shown in the `blocked_number` field are blocked.\n* `SMS-shortCodes`:  Only a specific SMS short code that is shown in the `blocked_number` field is blocked.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "phoneNumber",
              "enum": ["prefix", "phoneNumber", "SMS-shortCodes"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The block type for the block rule:\n* `block_for_other_reasons`\n* `block_as_threat`",
            "required": false,
            "schema": {
              "type": "string",
              "example": "block_for_other_reasons",
              "enum": ["block_for_other_reasons", "block_as_threat"]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records in a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nList inbound calls block rules successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "extension_blocked_rules": {
                      "type": "array",
                      "description": "The inbound blocked rules.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the block rule. ",
                            "example": "N9vmnIOHQMSWSL9mrz9jTw"
                          },
                          "match_type": {
                            "type": "string",
                            "description": "The match type for the block rule:\n* `phoneNumber`: Indicates that only a specific phone number that is shown in the `blocked_number` field is blocked.\n* `prefix`: Indicates that all numbers starting with the prefix that is shown in the `blocked_number` field are blocked.\n* `SMS-shortCodes`:  Indicates that only a specific sms short code that is shown in the `blocked_number` field is blocked.",
                            "example": "phoneNumber",
                            "enum": ["prefix", "phoneNumber", "SMS-shortCodes"]
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number of the block rule, the value is a combination of the `country` and `prefix_number` values.\n\n* when the value of the `match_type` is `phoneNumber`, the value of `phone_number` is displayed in E164 format.\n* when the value of the `match_type` is `prefix`, the value of `phone_number` is appended with the `country` code.",
                            "example": "+120665558945"
                          },
                          "type": {
                            "type": "string",
                            "description": "The block type for the block rule:\n* block_for_other_reasons\n* block_as_threat",
                            "example": "block_for_other_reasons",
                            "enum": [
                              "block_for_other_reasons",
                              "block_as_threat"
                            ]
                          },
                          "blocked_number": {
                            "type": "string",
                            "description": "The block rule phone number prefix, SMS short code, or pure phone number without the country code.",
                            "example": "20665558945"
                          },
                          "country": {
                            "type": "string",
                            "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).\n\nThis field is required when the value is as follows:\n* `match_type` is `phoneNumber` or `prefix`",
                            "example": "US"
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2"
                    },
                    "page_size": {
                      "maximum": 100,
                      "type": "integer",
                      "description": "The total number of records returned from a single API call.",
                      "example": 30,
                      "default": 30
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13600` <br>\n You do not enable the block list for inbound calls and messaging policy setting. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `404` <br>\n Extension does not exist: {extensionId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read",
              "phone:read:list_extension_inbound_block_rules:admin",
              "phone:read:list_extension_inbound_block_rules"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin", "phone:read"],
          "x-granular-scopes": [
            "phone:read:list_extension_inbound_block_rules:admin",
            "phone:read:list_extension_inbound_block_rules"
          ]
        }
      },
      "post": {
        "tags": ["Inbound Blocked List"],
        "summary": "Add an extension's inbound block rule",
        "description": "Adds the given extension's block rule for inbound calls and messaging. \n\nIt adds the inbound block rule for the given Call Queue, Auto Receptionist, Shared Line Group, Common Area, Zoom Room or User.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n\n**Scopes:** `phone:write:admin`,`phone:write`\n\n**Granular Scopes:** `phone:write:extension_inbound_block_rule:admin`,`phone:write:extension_inbound_block_rule`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "AddExtensiontLevelInboundBlockRules",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "The extension ID for the inbound blocked rules to fetch.",
            "required": true,
            "schema": { "type": "string", "example": "WfsrPERXS8inWrpH1Hi_KQ" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["blocked_number", "match_type", "type"],
                "type": "object",
                "properties": {
                  "match_type": {
                    "type": "string",
                    "description": "The match type for the block rule:\n* `phoneNumber`: Only a specific phone number that is shown in the `blocked_number` field is blocked.\n* `prefix`: All numbers starting with the prefix that is shown in the `blocked_number` field are blocked.\n* `SMS-shortCodes`:  Only a specific SMS short code that is shown in the `blocked_number` field is blocked.",
                    "example": "phoneNumber",
                    "enum": ["prefix", "phoneNumber", "SMS-shortCodes"]
                  },
                  "blocked_number": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The block rule phone number prefix, SMS short code, or pure phone number without the country code.\n* When the value of the `match_type` is `prefix`, enter the prefix of the phone number without the country code. \n* When the value of the `match_type` is `phoneNumber`, enter the phone number without the country code.\n* When the value of the `match_type` is `SMS-shortCodes`, enter the SMS short code.",
                    "example": "20665558945"
                  },
                  "type": {
                    "type": "string",
                    "description": "The block type for the block rule:\n* block_for_other_reasons\n* block_as_threat\n\n**Note**: the value of `block_as_threat` can be available if the `block_calls_as_threat` setting is enabled in [account setting API](https://developers.zoom.us/docs/zoom-phone/apis/#operation/listZoomPhoneAccountSettings).",
                    "example": "block_for_other_reasons",
                    "enum": ["block_for_other_reasons", "block_as_threat"]
                  },
                  "country": {
                    "type": "string",
                    "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).\n\nThis field is required when the value is the following:\n* `match_type` is `phoneNumber` or `prefix`",
                    "example": "US"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**   \nCreated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier of the blocked rule. ",
                      "example": "N9vmnIOHQMSWSL9mrz9jTw"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13600` <br>\n The block list for inbound calls and messaging policy setting is not enabled. <br>\n**Error Code:** `13601` <br>\n Blocked phone number already exists:{blocked_number}. <br>\n**Error Code:** `13605` <br>\n The block calls as threat policy setting is not enabled, it is not allowed selecting 'type' as 'block_as_threat. <br>\n**Error Code:** `400` <br>\n Invalid country. <br>\n**Error Code:** `13604` <br>\n Blocked number:{blocked_number} does not match the country:{country}. <br>\n**Error Code:** `7015` <br>\n The phone number {blocked_number} is invalid. <br>\n**Error Code:** `13606` <br>\n The match type:{match_type} does not support the type:{type} in extension level. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `404` <br>\n Extension does not exist: {extensionId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone:write:extension_inbound_block_rule:admin",
              "phone:write:extension_inbound_block_rule"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin", "phone:write"],
          "x-granular-scopes": [
            "phone:write:extension_inbound_block_rule:admin",
            "phone:write:extension_inbound_block_rule"
          ]
        }
      },
      "delete": {
        "tags": ["Inbound Blocked List"],
        "summary": "Delete an extension's inbound block rule",
        "description": "Deletes the given extension's blocked rule for inbound calls and messaging. \n\nUse this API to delete inbound blocked rule for the given Call Queue, Auto Receptionist, Shared Line Group, Common Area, Zoom Room or User.\n\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n\n**Scopes:** `phone:write:admin`,`phone:write`\n\n**Granular Scopes:** `phone:delete:extension_inbound_block_rule:admin`,`phone:delete:extension_inbound_block_rule`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "DeleteExtensiontLevelInboundBlockRules",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "The extension ID for the inbound blocked rules to fetch.",
            "required": true,
            "schema": { "type": "string", "example": "WfsrPERXS8inWrpH1Hi_KQ" }
          },
          {
            "name": "blocked_rule_id",
            "in": "query",
            "description": "The unique identifier of the blocked rule. ",
            "required": true,
            "schema": { "type": "string", "example": "N9vmnIOHQMSWSL9mrz9jTw" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content** \n\nThe blocked rule deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13600` <br>\n The block list for inbound calls and messaging policy setting is not enabled. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `404` <br>\n Blocked rule does not exist: {blocked_rule_id}. <br>\n**Error Code:** `404` <br>\n Extension does not exist: {extensionId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone:delete:extension_inbound_block_rule:admin",
              "phone:delete:extension_inbound_block_rule"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin", "phone:write"],
          "x-granular-scopes": [
            "phone:delete:extension_inbound_block_rule:admin",
            "phone:delete:extension_inbound_block_rule"
          ]
        }
      }
    },
    "/phone/inbound_blocked/extension_rules/statistics": {
      "get": {
        "tags": ["Inbound Blocked List"],
        "summary": "List an account's inbound blocked statistics",
        "description": "Returns the list of the statistics of the extensions blocked rule for inbound calls and messaging. (e.g. Call Queue, Auto Receptionist, Shared Line Group, Common Area, Zoom Room and User)\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_extension_inbound_block_rules_stat:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "ListAccountLevelInboundBlockedStatistics",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "The partial string of a phone number.",
            "required": false,
            "schema": { "type": "string", "example": "11067" }
          },
          {
            "name": "match_type",
            "in": "query",
            "description": "The match type for the block rule:\n* `phoneNumber`: Only a specific phone number that is shown in the `blocked_number` field is blocked.\n* `prefix`: All numbers starting with the prefix that is shown in the `blocked_number` field are blocked.\n* `SMS-shortCodes`:  Only a specific SMS short code that is shown in the `blocked_number` field is blocked.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "phoneNumber",
              "enum": ["prefix", "phoneNumber", "SMS-shortCodes"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The block type for the block rule:\n* block_for_other_reasons\n* block_as_threat",
            "required": false,
            "schema": { "type": "string", "example": "block_for_other_reasons" }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records in a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK** \n\nGet inbound blocked statistics successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "blocked_statistic": {
                      "type": "array",
                      "description": "The inbound blocked extension rule statistics.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the blocked statistic. ",
                            "example": "2Iq1GeCiR5WczhV9QgXwFA"
                          },
                          "match_type": {
                            "type": "string",
                            "description": "The match type for the block rule:\n* `phoneNumber`: Indicates that only a specific phone number that is shown in the `blocked_number` field is blocked.\n* `prefix`: Indicates that all numbers starting with the prefix that is shown in the `blocked_number` field are blocked.\n* `SMS-shortCodes`:  Indicates that only a specific sms short code that is shown in the `blocked_number` field is blocked.",
                            "example": "phoneNumber",
                            "enum": ["prefix", "phoneNumber", "SMS-shortCodes"]
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number of the block rule, the value is a combination of the `country` and `blocked_number` values.\n\n* when the value of the `match_type` is `phoneNumber`, the value of `phone_number` is displayed in E164 format.\n* when the value of the `match_type` is `prefix`, the value of `phone_number` is appended with the `country` code.",
                            "example": "+120665558945"
                          },
                          "type": {
                            "type": "string",
                            "description": "The block type for the block rule:\n* block_for_other_reasons\n* block_as_threat\n",
                            "example": "1",
                            "enum": [
                              "block_for_other_reasons",
                              "block_as_threat"
                            ]
                          },
                          "block_count": {
                            "type": "integer",
                            "description": "This field counts the number of extensions (phone users, Zoom rooms, common area phones, call queues, etc.) that have marked the `phone_number` as `type` = `block_for_other_reasons`.",
                            "example": 3
                          },
                          "threat_count": {
                            "type": "integer",
                            "description": "This field counts the number of extensions (phone users, Zoom rooms, common area phones, call queues, etc.) that have marked the `phone_number` as `type` = `block_as_threat`.",
                            "example": 2
                          },
                          "blocked_number": {
                            "type": "string",
                            "description": "The block rule phone number prefix, SMS short code, or pure phone number without the country code.",
                            "example": "20665558945"
                          },
                          "country": {
                            "type": "string",
                            "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).\n\nThis field is required when the value is as follows:\n* `match_type` is `phoneNumber` or `prefix`",
                            "example": "US"
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The total number of records returned from a single API call.",
                      "example": 30
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13600` <br>\n You do not enable the block list for inbound calls and messaging policy setting. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_extension_inbound_block_rules_stat:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": [
            "phone:read:list_extension_inbound_block_rules_stat:admin"
          ]
        }
      },
      "delete": {
        "tags": ["Inbound Blocked List"],
        "summary": "Delete an account's inbound blocked statistics",
        "description": "Deletes the statistic of extensions blocked rule for inbound calls and messaging. (e.g. Call Queue, Auto Receptionist, Shared Line Group, Common Area, Zoom Room and User)\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:extension_inbound_block_rule_stat:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "DeleteAccountLevelInboundBlockedStatistics",
        "parameters": [
          {
            "name": "blocked_statistic_id",
            "in": "query",
            "description": "The unique identifier of the blocked statistic.",
            "required": true,
            "schema": { "type": "string", "example": "2Iq1GeCiR5WczhV9QgXwFA" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**   \n\nThe blocked statistics deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13600` <br>\n The block list for inbound calls and messaging policy setting is not enabled. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `404` <br>\n Blocked statistic does not exist: {blocked_statistic_id}.  <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:extension_inbound_block_rule_stat:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": [
            "phone:delete:extension_inbound_block_rule_stat:admin"
          ]
        }
      }
    },
    "/phone/inbound_blocked/extension_rules/statistics/blocked_for_all": {
      "patch": {
        "tags": ["Inbound Blocked List"],
        "summary": "Mark a phone number as blocked for all extensions",
        "description": "Promotes and applies the phone number blocked from the extension level blocked rule to the account level blocked rule. This action is contingent on the statistics of extensions blocked rule. All extensions under the current account block this phone number.\n\n**Prerequisites:**\n* Pro or higher account plan with Zoom phone license\n* Account owner or admin permissions\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:inbound_blocked_for_all:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "MarkPhoneNumberAsBlockedForAllExtensions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["blocked_statistic_id"],
                "type": "object",
                "properties": {
                  "blocked_statistic_id": {
                    "type": "string",
                    "description": "The unique identifier of the blocked statistic.",
                    "example": "2Iq1GeCiR5WczhV9QgXwFA"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**   \nBlocked for all extensions successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13600` <br>\n The block list for inbound calls and messaging policy setting is not enabled. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `404` <br>\n Blocked statistic does not exist: {blocked_statistic_id}.  <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:inbound_blocked_for_all:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:inbound_blocked_for_all:admin"]
        }
      }
    },
    "/phone/inbound_blocked/rules": {
      "get": {
        "tags": ["Inbound Blocked List"],
        "summary": "List an account's inbound block rules",
        "description": "Returns a list of account level inbound block rule for inbound calls and messaging.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_inbound_block_rules:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "ListAccountLevelInboundBlockRules",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "The partial string of a phone number.",
            "required": false,
            "schema": { "type": "string", "example": "11067" }
          },
          {
            "name": "match_type",
            "in": "query",
            "description": "The match type for the block rule:\n* `phoneNumber`: Indicates that only a specific phone number that is shown in the `blocked_number` field is blocked.\n* `prefix`: Indicates that all numbers starting with the prefix that is shown in the `blocked_number` field are blocked.\n* `SMS-shortCodes`:  Indicates that only a specific SMS short code that is shown in the `blocked_number` field is blocked.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "phoneNumber",
              "enum": ["prefix", "phoneNumber", "SMS-shortCodes"]
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The block type for the block rule:\n* block_for_other_reasons\n* block_as_threat",
            "required": false,
            "schema": {
              "type": "string",
              "example": "block_for_other_reasons",
              "enum": ["block_for_other_reasons", "block_as_threat"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Whether the block rule is active or inactive.\n* `active`: The block rule is active.\n* `inactive`: The block rule is inactive.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "active",
              "enum": ["active", "inactive"]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records in a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nList inbound calls block rules successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "account_blocked_rules": {
                      "type": "array",
                      "description": "The inbound blocked rules.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the block rule. ",
                            "example": "N9vmnIOHQMSWSL9mrz9jTw"
                          },
                          "match_type": {
                            "type": "string",
                            "description": "The match type for the block rule:\n* `phoneNumber`: Indicates that only a specific phone number that is shown in the `blocked_number` field is blocked.\n* `prefix`: Indicates that all numbers starting with the prefix that is shown in the `blocked_number` field are blocked.\n* `SMS-shortCodes`:  Indicates that only a specific sms short code that is shown in the `blocked_number` field is blocked.",
                            "example": "phoneNumber",
                            "enum": ["prefix", "phoneNumber", "SMS-shortCodes"]
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number of the block rule, the value is a combination of the `country` and `blocked_number` values.\n\n* when the value of the `match_type` is `phoneNumber`, the value of `phone_number` is displayed in E164 format.\n* when the value of the `match_type` is `prefix`, the value of `phone_number` is appended with the `country` code.",
                            "example": "+120665558945"
                          },
                          "type": {
                            "type": "string",
                            "description": "The block type for the block rule:\n* block_for_other_reasons\n* block_as_threat",
                            "example": "block_for_other_reasons",
                            "enum": [
                              "block_for_other_reasons",
                              "block_as_threat"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "description": "Whether the block rule is active or inactive.\n* `active`: The block rule is active.\n* `inactive`: The block rule is inactive.",
                            "example": "active",
                            "enum": ["active", "inactive"]
                          },
                          "comment": {
                            "type": "string",
                            "description": "The comment of the block rule. Enter a comment to help you identify the blocked number or prefix.",
                            "example": "test inbound block comment."
                          },
                          "blocked_number": {
                            "type": "string",
                            "description": "The block rule phone number prefix or sms short code or pure phone number without the country code.",
                            "example": "20665558945"
                          },
                          "country": {
                            "type": "string",
                            "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).\n\nThis field is required when the value is as follows:\n* `match_type` is `phoneNumber` or `prefix`",
                            "example": "US"
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2"
                    },
                    "page_size": {
                      "maximum": 100,
                      "type": "integer",
                      "description": "The total number of records returned from a single API call.",
                      "example": 30,
                      "default": 30
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13600` <br>\n You do not enable the block list for inbound calls and messaging policy setting. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_inbound_block_rules:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_inbound_block_rules:admin"]
        }
      },
      "post": {
        "tags": ["Inbound Blocked List"],
        "summary": "Add an account's inbound block rule",
        "description": "Adds an account level block rule for inbound calls and messaging from a phone number. As a result, all extensions block calls and messages to the phone number.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:inbound_block_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "AddAccountLevelInboundBlockRules",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["blocked_number", "match_type", "status", "type"],
                "type": "object",
                "properties": {
                  "match_type": {
                    "type": "string",
                    "description": "The match type for the block rule:\n* `phoneNumber`: Only a specific phone number that is shown in the `blocked_number` field is blocked.\n* `prefix`: All numbers starting with the prefix that is shown in the `blocked_number` field are blocked.\n* `SMS-shortCodes`:  Only a specific SMS short code that is shown in the `blocked_number` field is blocked.",
                    "example": "phoneNumber",
                    "enum": ["prefix", "phoneNumber", "SMS-shortCodes"]
                  },
                  "blocked_number": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The block rule phone number prefix or SMS short code or pure phone number without the country code.\n* When the value of the `match_type` is `prefix`, enter the prefix of the phone number without the country code.\n* When the value of the `match_type` is `phoneNumber`, enter the phone number without the country code.\n* When the value of the `match_type` is `SMS-shortCodes`, enter the SMS short code.",
                    "example": "20665558945"
                  },
                  "type": {
                    "type": "string",
                    "description": "The block type for the block rule:\n* `block_for_other_reasons`\n* `block_as_threat`\n\n**Note**: The value of `block_as_threat` can be available if the `block_calls_as_threat` setting is enabled in [account setting API](https://developers.zoom.us/docs/zoom-phone/apis/#operation/listZoomPhoneAccountSettings).",
                    "example": "block_for_other_reasons",
                    "enum": ["block_for_other_reasons", "block_as_threat"]
                  },
                  "comment": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "The comment of the block rule. \nEnter a comment to help you identify the blocked number, prefix, or SMS short codes.",
                    "example": "test inbound block comment."
                  },
                  "status": {
                    "type": "string",
                    "description": "Whether the block rule is active or inactive.\n* `active`: The block rule is active.\n* `inactive`: The block rule is inactive.",
                    "example": "active",
                    "enum": ["active", "inactive"]
                  },
                  "country": {
                    "type": "string",
                    "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).\n\nThis field is required when the value is the following:\n* `match_type` is `phoneNumber` or `prefix`",
                    "example": "US"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**   \nCreated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The unique identifier of the blocked rule. ",
                      "example": "N9vmnIOHQMSWSL9mrz9jTw"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13600` <br>\n The block list for inbound calls and messaging policy setting is not enabled. <br>\n**Error Code:** `13601` <br>\n Blocked phone number already exists:{blocked_number}. <br>\n**Error Code:** `13605` <br>\n The block calls as threat policy setting is not enabled. It is not allowed selecting 'type' as 'block_as_threat. <br>\n**Error Code:** `400` <br>\n Invalid country. <br>\n**Error Code:** `7015` <br>\n The phone number {blocked_number} is invalid. <br>\n**Error Code:** `13604` <br>\n Blocked number:{blocked_number} does not match the country:{country}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:inbound_block_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:inbound_block_rule:admin"]
        }
      },
      "delete": {
        "tags": ["Inbound Blocked List"],
        "summary": "Delete an account's inbound block rule",
        "description": "Deletes the account level blocked rule for inbound calls and messaging.\n\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:inbound_block_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "DeleteAccountLevelInboundBlockRules",
        "parameters": [
          {
            "name": "blocked_rule_id",
            "in": "query",
            "description": "The unique identifier of the blocked rule. ",
            "required": true,
            "schema": { "type": "string", "example": "N9vmnIOHQMSWSL9mrz9jTw" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content** \n\nThe blocked rule deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13600` <br>\n You do not enable the block list for inbound calls and messaging policy setting. <br>\n**Error Code:** `13602` <br>\n You can't delete or change the number, because it is marked as Blocked Number more than the 'Automatic Blocking Threshold'. <br>\n**Error Code:** `13603` <br>\n You can't delete or change the number, because it is marked as Threat Number more than the 'Automatic Threat Blocking Threshold'. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `404` <br>\n Blocked rule does not exist: {blocked_rule_id}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:inbound_block_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:inbound_block_rule:admin"]
        }
      }
    },
    "/phone/inbound_blocked/rules/{blockedRuleId}": {
      "patch": {
        "tags": ["Inbound Blocked List"],
        "summary": "Update an account's inbound block rule",
        "description": "Updates the account level block rule for inbound calls and messaging.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:inbound_block_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateAccountLevelInboundBlockRule",
        "parameters": [
          {
            "name": "blockedRuleId",
            "in": "path",
            "description": "The unique identifier of the blocked rule.",
            "required": true,
            "schema": { "type": "string", "example": "N9vmnIOHQMSWSL9mrz9jTw" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["blocked_number", "match_type", "type"],
                "type": "object",
                "properties": {
                  "match_type": {
                    "type": "string",
                    "description": "The match type for the block rule:\n* `phoneNumber`: Indicates that only a specific phone number that is shown in the `blocked_number` field is blocked.\n* `prefix`: Indicates that all numbers starting with the prefix that is shown in the `blocked_number` field are blocked.\n* `SMS-shortCodes`:  Indicates that only a specific SMS short code that is shown in the `blocked_number` field is blocked.",
                    "example": "phoneNumber",
                    "enum": ["prefix", "phoneNumber", "SMS-shortCodes"]
                  },
                  "blocked_number": {
                    "type": "string",
                    "description": "The block rule phone number prefix or SMS short code or pure phone number without the country code.",
                    "example": "20665558945"
                  },
                  "type": {
                    "type": "string",
                    "description": "The block type for the block rule:\n* block_for_other_reasons\n* block_as_threat\n\n**Note**: The value of `block_as_threat` can be available if the `block_calls_as_threat` setting is enabled in [account setting API](https://developers.zoom.us/docs/zoom-phone/apis/#operation/listZoomPhoneAccountSettings).",
                    "example": "block_for_other_reasons",
                    "enum": ["block_for_other_reasons", "block_as_threat"]
                  },
                  "comment": {
                    "type": "string",
                    "description": "The comment of the block rule. \nEnter a comment to help you identify the blocked number or prefix.",
                    "example": "test update inbound block comment."
                  },
                  "status": {
                    "type": "string",
                    "description": "Whether the block rule is active or inactive.\n* `active`: The block rule is active.\n* `inactive`: The block rule is inactive.",
                    "example": "active",
                    "enum": ["active", "inactive"]
                  },
                  "country": {
                    "type": "string",
                    "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).\n\nThis field is required when the value is as follows:\n* `match_type` is `phoneNumber` or `prefix`",
                    "example": "US"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   **No Content**\n\nThe blocked rule updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13600` <br>\n The block list for inbound calls and messaging policy setting is not enabled. <br>\n**Error Code:** `13601` <br>\n Blocked phone number already exists:{blocked_number}. <br>\n**Error Code:** `13602` <br>\n You can't delete or change the number, because it is marked as Blocked Number more than the 'Automatic Blocking Threshold'. <br>\n**Error Code:** `13603` <br>\n You can't delete or change the number, because it is marked as Threat Number more than the 'Automatic Threat Blocking Threshold'. <br>\n**Error Code:** `400` <br>\n Invalid country. <br>\n**Error Code:** `7015` <br>\n The phone number {blocked_number} is invalid. <br>\n**Error Code:** `13604` <br>\n Blocked number:{blocked_number} does not match the country:{country}. <br>\n**Error Code:** `13605` <br>\n The block calls as threat policy setting is not enabled, it is not allowed selecting 'type' as 'block_as_threat. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `404` <br>\n Blocked rule does not exist: {blocked_rule_id}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:inbound_block_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:inbound_block_rule:admin"]
        }
      }
    },
    "/phone/extension/{extensionId}/line_keys": {
      "get": {
        "tags": ["Line Keys"],
        "summary": "Get line key position and settings information",
        "description": "Use this API to get the Zoom Phone [line key settings](https://support.zoom.us/hc/en-us/articles/360040587552) information.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:read:admin`,`phone:read`\n\n**Granular Scopes:** `phone:read:line_keys`,`phone:read:line_keys:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "listLineKeySetting",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "The extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "52OdSKGSSS-EOyJwQncFvA" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nLine key and position setting object returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "line_keys": {
                      "type": "array",
                      "description": "The line key position.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "alias": {
                            "type": "string",
                            "description": "The user-defined display name for each line key of the device. The alias can be up to 32 characters in length.",
                            "example": "Line1"
                          },
                          "index": {
                            "type": "integer",
                            "description": "The order of the line key on the phone.",
                            "example": 1
                          },
                          "key_assignment": {
                            "type": "object",
                            "properties": {
                              "display_name": {
                                "type": "string",
                                "description": "The display name of the line assigned to the line key.",
                                "example": "Test 123"
                              },
                              "extension_id": {
                                "type": "string",
                                "description": "The extension ID of the line assigned to the line key.",
                                "example": "TO586CYlQFC_WCUvPRXytA"
                              },
                              "extension_number": {
                                "type": "string",
                                "description": "The extension number of the line assigned to the line key.",
                                "example": "1000001004"
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "The phone number of the line assigned to the line key.",
                                "example": "+12058945795"
                              },
                              "retrieval_code": {
                                "type": "string",
                                "description": "The call park retrieval code for `call_park` line key type.",
                                "example": "*801"
                              },
                              "speed_dial_number": {
                                "type": "string",
                                "description": "The speed dial number used for `speed_dial_number` line key type.",
                                "example": "123456"
                              }
                            },
                            "description": "The line key assignment information."
                          },
                          "line_key_id": {
                            "type": "string",
                            "description": "The line key ID.",
                            "example": "BH9SHc4YTnWqQ9u0LC3kkg"
                          },
                          "outbound_caller_id": {
                            "type": "string",
                            "description": "The outbound caller number for the line.",
                            "example": "+18108001001"
                          },
                          "type": {
                            "type": "string",
                            "description": "The line key type. \n `line`: Line/Shared line access/ Shared line group.\n `blf`: Busy lamp field.\n `speed_dial`: Speed-dial a phone number.\n `zoom_meeting`: Desk phone companion mode.\n `call_park`: Call park. Users don't need to dial the retrieval codes with this setting.\n `group_call_pickup`: Pick up inbound calls for call pickup groups.",
                            "example": "line",
                            "enum": [
                              "line",
                              "blf",
                              "speed_dial",
                              "zoom_meeting",
                              "call_park",
                              "group_call_pickup"
                            ]
                          }
                        }
                      }
                    }
                  },
                  "description": "The line key setting."
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read",
              "phone:read:line_keys",
              "phone:read:line_keys:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin", "phone:read"],
          "x-granular-scopes": [
            "phone:read:line_keys",
            "phone:read:line_keys:admin"
          ]
        }
      },
      "patch": {
        "tags": ["Line Keys"],
        "summary": "Batch update line key position and settings information",
        "description": "Use this API to batch update the Zoom Phone [line key settings](https://support.zoom.us/hc/en-us/articles/360040587552) information.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`,`phone:write`\n\n**Granular Scopes:** `phone:update:line_keys`,`phone:update:line_keys:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "BatchUpdateLineKeySetting",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "The extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "52OdSKGSSS-EOyJwQncFvA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "line_keys": {
                    "type": "array",
                    "description": "The line key position.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "line_key_id": {
                          "type": "string",
                          "description": "The line key ID.",
                          "example": "BH9SHc4YTnWqQ9u0LC3kkg"
                        },
                        "index": {
                          "type": "integer",
                          "description": "The order of the line key on the phone.",
                          "example": 1
                        },
                        "type": {
                          "type": "string",
                          "description": "The line key type. \n `line`: Line/Shared line access/Shared line group.\n `blf`: Busy lamp field.\n `speed_dial`: Speed-dial a phone number.\n `zoom_meeting`: Desk phone companion mode.\n `call_park`: Call park. Users don't need to dial the retrieval codes with this setting.\n `group_call_pickup`: Pick up inbound calls for call pickup groups.",
                          "example": "line",
                          "enum": [
                            "line",
                            "blf",
                            "speed_dial",
                            "zoom_meeting",
                            "call_park",
                            "group_call_pickup"
                          ]
                        },
                        "key_assignment": {
                          "type": "object",
                          "properties": {
                            "extension_id": {
                              "type": "string",
                              "description": "The extension ID of the line assigned to the line key.",
                              "example": "TO586CYlQFC_WCUvPRXytA"
                            },
                            "speed_dial_number": {
                              "type": "string",
                              "description": "The speed dial number used for `speed_dial_number` line key type.",
                              "example": "123456"
                            },
                            "retrieval_code": {
                              "type": "string",
                              "description": "The call park retrieval code for `call_park` line key type.",
                              "example": "*802"
                            }
                          },
                          "description": "The line key assignment information."
                        },
                        "alias": {
                          "type": "string",
                          "description": "The user-defined display name for each line key of the device. The alias can be up to 32 characters in length.",
                          "example": "Line 1"
                        },
                        "outbound_caller_id": {
                          "type": "string",
                          "description": "The mapping ID of the parameter `outbound_caller_number`. Hides the caller ID if set to `anonymous`.",
                          "example": "+18108001001"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n  **No Content**  \n \nLine keys and positions updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nLine key ID does not exist: {0}. <br>\nLine key type is invalid: {0}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone:update:line_keys",
              "phone:update:line_keys:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin", "phone:write"],
          "x-granular-scopes": [
            "phone:update:line_keys",
            "phone:update:line_keys:admin"
          ]
        }
      }
    },
    "/phone/extension/{extensionId}/line_keys/{lineKeyId}": {
      "delete": {
        "tags": ["Line Keys"],
        "summary": "Delete a line key setting.",
        "description": "Use this API to delete the Zoom Phone [line key settings](https://support.zoom.us/hc/en-us/articles/360040587552) information.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`,`phone:write`\n\n**Granular Scopes:** `phone:delete:line_keys`,`phone:delete:line_keys:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "DeleteLineKey",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "The extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "52OdSKGSSS-EOyJwQncFvA" }
          },
          {
            "name": "lineKeyId",
            "in": "path",
            "description": "Line key ID.",
            "required": true,
            "schema": { "type": "string", "example": "BH9SHc4YTnWqQ9u0LC3kkg" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n  **No Content**  \n \nThe line key has been deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nLine key ID does not exist: {0}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone:delete:line_keys",
              "phone:delete:line_keys:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin", "phone:write"],
          "x-granular-scopes": [
            "phone:delete:line_keys",
            "phone:delete:line_keys:admin"
          ]
        }
      }
    },
    "/phone/monitoring_groups": {
      "get": {
        "tags": ["Monitoring Groups"],
        "summary": "Get a list of monitoring groups on an account",
        "description": "Returns an account's [monitoring group](https://support.zoom.us/hc/en-us/articles/360044804711) list.\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_monitoring_groups:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listMonitoringGroup",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "The monitoring group's type.",
            "required": false,
            "schema": { "type": "integer", "example": 1, "enum": [1, 2, 3, 4] }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The unique identifier of the monitoring group's site.",
            "required": false,
            "schema": { "type": "string", "example": "8f71O6rWT8KFUGQmJIFAdQ" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The size of the page.",
            "required": false,
            "schema": { "type": "integer", "example": 30 }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The current page number of returned records.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ICF5K4lVmGG4kyIyGxSfBU2LH4QQG95cn32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n Account monitoring groups list returned. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "monitoring_groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The monitoring group ID.",
                            "example": "oDmRjKVTRymXGMtgtBK2Sg"
                          },
                          "monitor_members_count": {
                            "type": "integer",
                            "description": "The number of monitors.",
                            "example": 1
                          },
                          "monitored_members_count": {
                            "type": "integer",
                            "description": "The number of monitored users.",
                            "example": 1
                          },
                          "monitoring_privileges": {
                            "type": "array",
                            "description": "This field sets the group's monitoring privileges.",
                            "items": {
                              "type": "string",
                              "example": "listen",
                              "enum": [
                                "listen",
                                "whisper",
                                "barge",
                                "take_over"
                              ]
                            }
                          },
                          "name": {
                            "type": "string",
                            "description": "The monitoring instance name.",
                            "example": "pbx_api_test_uacap"
                          },
                          "prompt": {
                            "type": "boolean",
                            "description": "Whether to play a disclaimer prompt to the call participants",
                            "example": true
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The site ID.",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The site name.",
                                "example": "Main Site"
                              }
                            },
                            "description": "The site of the monitoring group."
                          },
                          "type": {
                            "type": "integer",
                            "description": "The monitoring type.\n* `1` &mdash; Users &amp; Common Areas.\n* `2` &mdash; Call Queues.\n* `3` &mdash; Shared Line Group.\n* `4` &mdash; Shared Line Appearance.",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The current page number of returned records.",
                      "example": "ICF5K4lVmGG4kyIyGxSfBU2LH4QQG95cn32"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The size of the page.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records available across all pages.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n The next page token is invalid or expired. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_monitoring_groups:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_monitoring_groups:admin"]
        }
      },
      "post": {
        "tags": ["Monitoring Groups"],
        "summary": "Create a monitoring group",
        "description": "Creates a [monitoring group](https://support.zoom.us/hc/en-us/articles/360044804711).\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:monitoring_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createMonitoringGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "monitoring_privileges": {
                    "type": "array",
                    "description": "This field sets monitoring group's privileges.",
                    "items": {
                      "type": "string",
                      "example": "listen",
                      "enum": ["listen", "whisper", "barge", "take_over"]
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "The monitoring group's name.",
                    "example": "pbx_api_test_uacap"
                  },
                  "prompt": {
                    "type": "boolean",
                    "description": "Whether to play a disclaimer prompt to the call participants.",
                    "example": true
                  },
                  "site_id": {
                    "type": "string",
                    "description": "The unique identifier of the monitoring group's site.",
                    "example": "8f71O6rWT8KFUGQmJIFAdQ"
                  },
                  "type": {
                    "type": "integer",
                    "description": "The monitoring type.\n* `1` &mdash; Users &amp; Common Areas.\n* `2` &mdash; Call Queues.\n* `3` &mdash; Shared Line Group.\n* `4` &mdash; Shared Line Appearance.",
                    "example": 1,
                    "enum": [1, 2, 3, 4]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \n \nMonitoring created.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The monitoring group ID.",
                      "example": "oDmRjKVTRymXGMtgtBK2Sg"
                    },
                    "name": {
                      "type": "string",
                      "description": "The monitoring group's name.",
                      "example": "pbx_api_test_uacap"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Name is required.\nType is required\nSite ID is required.\nThe privilege does not exist.\nType should be `1`, `2`, or `3`. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:monitoring_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:monitoring_group:admin"]
        }
      }
    },
    "/phone/monitoring_groups/{monitoringGroupId}": {
      "get": {
        "tags": ["Monitoring Groups"],
        "summary": "Get monitoring group by ID",
        "description": "Returns a [monitoring group](https://support.zoom.us/hc/en-us/articles/360044804711) for the specified ID.\n\n**Prerequisites:** \n* A Business or Enterprise account\n * A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:monitoring_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getMonitoringGroupById",
        "parameters": [
          {
            "name": "monitoringGroupId",
            "in": "path",
            "description": "The monitoring group ID.",
            "required": true,
            "schema": { "type": "string", "example": "oDmRjKVTRymXGMtgtBK2Sg" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n Monitoring returned. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The monitoring group ID.",
                      "example": "oDmRjKVTRymXGMtgtBK2Sg"
                    },
                    "monitor_members_count": {
                      "type": "integer",
                      "description": "The number of monitors.",
                      "example": 1
                    },
                    "monitored_members_count": {
                      "type": "integer",
                      "description": "The number of monitored users.",
                      "example": 1
                    },
                    "monitoring_privileges": {
                      "type": "array",
                      "description": "This field sets the group's monitoring privileges.",
                      "items": {
                        "type": "string",
                        "example": "listen",
                        "enum": ["listen", "whisper", "barge", "take_over"]
                      }
                    },
                    "name": {
                      "type": "string",
                      "description": "The monitoring group's name.",
                      "example": "pbx_api_test_uacap"
                    },
                    "prompt": {
                      "type": "boolean",
                      "description": "Whether to play a disclaimer prompt to the call participants.",
                      "example": true
                    },
                    "site": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The site ID.",
                          "example": "8f71O6rWT8KFUGQmJIFAdQ"
                        },
                        "name": {
                          "type": "string",
                          "description": "The site name.",
                          "example": "Main Site"
                        }
                      },
                      "description": "The site of monitoring group."
                    },
                    "type": {
                      "type": "integer",
                      "description": "The monitoring type.\n* `1` &mdash; Users &amp; Common Areas.\n* `2` &mdash; Call Queues.\n* `3` &mdash; Shared Line Group.\n* `4` &mdash; Shared Line Appearance.",
                      "example": 1,
                      "enum": [1, 2, 3, 4]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `404` <br>\n The group does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:monitoring_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:monitoring_group:admin"]
        }
      },
      "delete": {
        "tags": ["Monitoring Groups"],
        "summary": "Delete a monitoring group",
        "description": "Use this API to delete a [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711).\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:monitoring_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteMonitoringGroup",
        "parameters": [
          {
            "name": "monitoringGroupId",
            "in": "path",
            "description": "Monitoring group ID.",
            "required": true,
            "schema": { "type": "string", "example": "oDmRjKVTRymXGMtgtBK2Sg" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nMonitoring group deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nThe group does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:monitoring_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:monitoring_group:admin"]
        }
      },
      "patch": {
        "tags": ["Monitoring Groups"],
        "summary": "Update a monitoring group",
        "description": "Use this API to update a [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711).\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:monitoring_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateMonitoringGroup",
        "parameters": [
          {
            "name": "monitoringGroupId",
            "in": "path",
            "description": "Monitoring group ID.",
            "required": true,
            "schema": { "type": "string", "example": "oDmRjKVTRymXGMtgtBK2Sg" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "monitoring_privileges": {
                    "type": "array",
                    "description": "Set of monitoring group's privileges.",
                    "items": {
                      "type": "string",
                      "example": "take_over",
                      "enum": ["listen", "whisper", "barge", "take_over"]
                    }
                  },
                  "name": {
                    "type": "string",
                    "description": "Monitoring group's name.",
                    "example": "testUpdateName"
                  },
                  "prompt": {
                    "type": "boolean",
                    "description": "Whether Play a disclaimer prompt to the call participants",
                    "example": false
                  },
                  "site_id": {
                    "type": "string",
                    "description": "Unique identifier of the monitoring group's site.",
                    "example": "NjHmTu16Qfe8yOiNJuekXA"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nMonitoring group updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nThe privilege does not exist.\n\n**Error Code:** `404` <br>\nThe group does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:monitoring_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:monitoring_group:admin"]
        }
      }
    },
    "/phone/monitoring_groups/{monitoringGroupId}/monitor_members": {
      "get": {
        "tags": ["Monitoring Groups"],
        "summary": "Get members of a monitoring group",
        "description": "Use this API to return members list of a [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711).\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_monitoring_group_members:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listMembers",
        "parameters": [
          {
            "name": "monitoringGroupId",
            "in": "path",
            "description": "Monitoring group ID.",
            "required": true,
            "schema": { "type": "string", "example": "oDmRjKVTRymXGMtgtBK2Sg" }
          },
          {
            "name": "member_type",
            "in": "query",
            "description": "Member type",
            "required": true,
            "schema": {
              "type": "string",
              "example": "monitor",
              "enum": ["monitor", "monitored"]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The size of the page.",
            "required": false,
            "schema": { "type": "integer", "example": 1 }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The current page number of returned records.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ICF5K4lVmGG4kyIyGxSfBU2LH4QQG95cn32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n Members in a monitoring group returned. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "display_name": {
                            "type": "string",
                            "description": "Member name.",
                            "example": "testUser"
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "Extension ID.",
                            "example": "JpjPXizWTz-l35tFRUK3Gg"
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "Extension number.",
                            "format": "int64",
                            "example": 10010
                          },
                          "extension_type": {
                            "type": "string",
                            "description": "Extension type",
                            "example": "user",
                            "enum": [
                              "user",
                              "call_queue",
                              "shared_line_group",
                              "common_area_phone"
                            ]
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The current page number of returned records.",
                      "example": "ICF5K4lVmGG4kyIyGxSfBU2LH4QQG95cn32"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The number of records",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nMissing 'member_type'.\nThe next page token is invalid or expired.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_monitoring_group_members:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": [
            "phone:read:list_monitoring_group_members:admin"
          ]
        }
      },
      "post": {
        "tags": ["Monitoring Groups"],
        "summary": "Add members to a monitoring group",
        "description": "Use this API to add members to a [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711).\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:monitoring_group_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addMembers",
        "parameters": [
          {
            "name": "monitoringGroupId",
            "in": "path",
            "description": "Monitoring group ID.",
            "required": true,
            "schema": { "type": "string", "example": "CLdSxmPsSZuo4umbSsO1aw" }
          },
          {
            "name": "member_type",
            "in": "query",
            "description": "Member type",
            "required": true,
            "schema": {
              "type": "string",
              "example": "monitor",
              "enum": ["monitor", "monitored"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "string",
                  "description": "Monitor's extension ID",
                  "example": "JpjPXizWTz-l35tFRUK3Gg"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n Add members to a monitoring group.",
            "content": { "application/json": { "schema": {} } }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nThe maximum number of monitors is 100.\nThe maximum number of monitored is 100.\nThe group does not exist.\n\n**Error Code:** `409` <br>\nCannot create group. 'member_type' member(s) already exist(s) in current monitoring group.\nCannot create group. 'member_type' member(s) already exist(s) in other monitoring group.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:monitoring_group_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:monitoring_group_member:admin"]
        }
      },
      "delete": {
        "tags": ["Monitoring Groups"],
        "summary": "Remove all monitors or monitored members from a monitoring group",
        "description": "Use this API to remove all monitor or monitored members from a [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711).\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:monitoring_group_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "removeMembers",
        "parameters": [
          {
            "name": "monitoringGroupId",
            "in": "path",
            "description": "Monitoring group ID.",
            "required": true,
            "schema": { "type": "string", "example": "oDmRjKVTRymXGMtgtBK2Sg" }
          },
          {
            "name": "member_type",
            "in": "query",
            "description": "Member type",
            "required": true,
            "schema": {
              "type": "string",
              "example": "monitor",
              "enum": ["monitor", "monitored"]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nRemove all monitor or monitored members from a monitoring group."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nThe group does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:monitoring_group_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:monitoring_group_member:admin"]
        }
      }
    },
    "/phone/monitoring_groups/{monitoringGroupId}/monitor_members/{memberExtensionId}": {
      "delete": {
        "tags": ["Monitoring Groups"],
        "summary": "Remove a member from a monitoring group",
        "description": "Use this API to remove a member from a [Monitoring Group](https://support.zoom.us/hc/en-us/articles/360044804711).\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:monitoring_group_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "removeMember",
        "parameters": [
          {
            "name": "monitoringGroupId",
            "in": "path",
            "description": "Monitoring group ID.",
            "required": true,
            "schema": { "type": "string", "example": "CLdSxmPsSZuo4umbSsO1aw" }
          },
          {
            "name": "memberExtensionId",
            "in": "path",
            "description": "Member's extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "JpjPXizWTz-l35tFRUK3Gg" }
          },
          {
            "name": "member_type",
            "in": "query",
            "description": "Member type",
            "required": false,
            "schema": {
              "type": "string",
              "example": "monitor",
              "enum": ["monitor", "monitored"]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nRemove a member from a monitoring group."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nThe group does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:monitoring_group_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:monitoring_group_member:admin"]
        }
      }
    },
    "/phone/common_areas/{commonAreaId}/outbound_calling/countries_regions": {
      "get": {
        "tags": ["Outbound Calling"],
        "summary": "Get common area level outbound calling countries and regions",
        "description": "Returns the common area level outbound calling countries and regions.\n\n**Prerequisites:**\n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:common_area_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "GetCommonAreaOutboundCallingCountriesAndRegions",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "description": "The ID of the common area.",
            "required": true,
            "schema": { "type": "string", "example": "TAjiGweoTLeK72SaeocBZg" }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records in a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   Outbound calling country regions returned. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "countries_regions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The country name.",
                            "example": "United States"
                          },
                          "code": {
                            "type": "integer",
                            "description": "The country code.",
                            "example": 1
                          },
                          "iso_code": {
                            "type": "string",
                            "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                            "example": "US"
                          },
                          "rule": {
                            "type": "integer",
                            "description": "The default outbound calling rule. \n\n`1` Allowed\n`2` Blocked \n`3` Requires local number, caller ID, or plan\n`4` Requires the extension number and PIN code",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          },
                          "enabled_carrier": {
                            "type": "array",
                            "description": "The enabled carrier, which could be \"ZOOM\" or \"BYOC\".",
                            "items": { "type": "string", "example": "ZOOM" }
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The total number of records from a single API call.",
                      "example": 30,
                      "default": 30
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The common area does not exist: {commonAreaId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:common_area_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": [
            "phone:read:common_area_outbound_calling_rule:admin"
          ]
        }
      },
      "patch": {
        "tags": ["Outbound Calling"],
        "summary": "Update common area level outbound calling countries or regions",
        "description": "Updates the common area level outbound calling policy country or region.\n\n**Prerequisite:**\n* Account must have a Pro or a higher plan with a Zoom Phone license.\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:common_area_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateCommonAreaOutboundCallingCountriesOrRegions",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "description": "The ID of the common area.",
            "required": true,
            "schema": { "type": "string", "example": "SJD6tIJpQHeTU4RDde-NVA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country_regions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "iso_code": {
                          "type": "string",
                          "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                          "example": "US"
                        },
                        "rule": {
                          "type": "integer",
                          "description": "The default outbound calling rule. \n\n`1` - Allowed\n`2` - Blocked\n`3` - Requires local number, caller ID, or plan\n`4` - Requires the extension number and PIN code",
                          "example": 1,
                          "enum": [1, 2, 3, 4]
                        },
                        "delete_existing_exception_rules": {
                          "type": "boolean",
                          "description": "Whether to delete existing exception rules. This field only appears when the default outbound calling rule is changed. The default value is `false`.",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content  \n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The common area does not exist: {commonAreaId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:common_area_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": [
            "phone:update:common_area_outbound_calling_rule:admin"
          ]
        }
      }
    },
    "/phone/common_areas/{commonAreaId}/outbound_calling/exception_rules": {
      "get": {
        "tags": ["Outbound Calling"],
        "summary": "List common area level outbound calling exception rules",
        "description": "Lists the common area level outbound calling policy exception rules.\n\n**Prerequisite:**\n* Pro or higher account plan with Zoom phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:common_area_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listCommonAreaOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "description": "The ID of the common area.",
            "required": true,
            "schema": { "type": "string", "example": "TAjiGweoTLeK72SaeocBZg" }
          },
          {
            "name": "country",
            "in": "query",
            "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
            "required": false,
            "schema": { "type": "string", "example": "US" }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The partial string of a phone number.",
            "required": false,
            "schema": { "type": "string", "example": "11067" }
          },
          {
            "name": "match_type",
            "in": "query",
            "description": "The match type of an exception rule.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "prefix",
              "enum": ["phoneNumber", "prefix"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of an exception rule.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "active",
              "enum": ["active", "inactive"]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records in a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nList outbound calling exception rules successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exception_rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The exception rule ID.",
                            "example": "2ypsHHwTTFK-fzZJkudYwA"
                          },
                          "match_type": {
                            "type": "string",
                            "description": "The match type for the exception rule:\n\n`phoneNumber`and `prefix`.",
                            "example": "prefix",
                            "enum": ["phoneNumber", "prefix"]
                          },
                          "prefix_number": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The exception rule phone number prefix or the phone number without country code.",
                            "example": "20665558945"
                          },
                          "rule": {
                            "type": "integer",
                            "description": "The exception rule type `1` - allowed, `2` - blocked, `3` - require local number, caller ID or plan, `4` - require to enter the extension number and PIN code.",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          },
                          "comment": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "A comment to help identify the exception rule number or prefix.",
                            "example": "test"
                          },
                          "status": {
                            "type": "string",
                            "description": "Whether the exception rule is active or inactive. \n`active`: The exception rule is active.\n`inactive`: The exception rule is inactive.",
                            "example": "active",
                            "enum": ["active", "inactive"]
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The total number of records in a single API call.",
                      "example": 30,
                      "default": 30
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13000` <br>\n The common area does not exist: {commonAreaId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:common_area_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": [
            "phone:read:common_area_outbound_calling_rule:admin"
          ]
        }
      },
      "post": {
        "tags": ["Outbound Calling"],
        "summary": "Add common area level outbound calling exception rule",
        "description": "Adds the common area level outbound calling policy exception rule for the country region.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:common_area_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "AddCommonAreaOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "description": "The ID of the common area.",
            "required": true,
            "schema": { "type": "string", "example": "SJD6tIJpQHeTU4RDde-NVA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exception_rule": {
                    "required": [
                      "country",
                      "match_type",
                      "prefix_number",
                      "status"
                    ],
                    "type": "object",
                    "properties": {
                      "match_type": {
                        "type": "string",
                        "description": "The match type for the exception rule:\n\n`phoneNumber`\n `prefix`",
                        "example": "prefix",
                        "enum": ["phoneNumber", "prefix"]
                      },
                      "prefix_number": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The exception rule for the phone number prefix or the phone number without the country code.",
                        "example": "20665558945"
                      },
                      "comment": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "A comment that identifies the exception rule number or the prefix.",
                        "example": "test"
                      },
                      "status": {
                        "type": "string",
                        "description": "Whether the exception rule is active or inactive. \n\n`active`: The exception rule is active.\n`inactive`: The exception rule is inactive.",
                        "example": "active",
                        "enum": ["active", "inactive"]
                      },
                      "country": {
                        "type": "string",
                        "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                        "example": "US"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \n\nCreated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exception_rule_id": {
                      "type": "string",
                      "description": "The IDs of the exception rules.",
                      "example": "jE1rtyf0Tx6N86L4pBYV4Q"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The common area does not exist: {commonAreaId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:common_area_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": [
            "phone:write:common_area_outbound_calling_rule:admin"
          ]
        }
      }
    },
    "/phone/common_areas/{commonAreaId}/outbound_calling/exception_rules/{exceptionRuleId}": {
      "delete": {
        "tags": ["Outbound Calling"],
        "summary": "Delete common area level outbound calling exception rule",
        "description": "Deletes the common area level outbound calling exception rule.\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:common_area_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteCommonAreaOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "description": "The ID of the common area.",
            "required": true,
            "schema": { "type": "string", "example": "TAjiGweoTLeK72SaeocBZg" }
          },
          {
            "name": "exceptionRuleId",
            "in": "path",
            "description": "The exception rule ID.",
            "required": true,
            "schema": { "type": "string", "example": "2ypsHHwTTFK-fzZJkudYwA" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n**Error Code:** `13508` <br>\n The exception rule ID has one more record in the DB: {exceptionRuleId}. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The common area does not exist: {commonAreaId}. <br>\n**Error Code:** `13507` <br>\n The exception rule does not exist: {exceptionRuleId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:common_area_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": [
            "phone:delete:common_area_outbound_calling_rule:admin"
          ]
        }
      },
      "patch": {
        "tags": ["Outbound Calling"],
        "summary": "Update common area level outbound calling exception rule",
        "description": "Updates the common area level outbound calling policy for the country region exception rule.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:common_area_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateCommonAreaOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "commonAreaId",
            "in": "path",
            "description": "The ID of the common area.",
            "required": true,
            "schema": { "type": "string", "example": "TAjiGweoTLeK72SaeocBZg" }
          },
          {
            "name": "exceptionRuleId",
            "in": "path",
            "description": "The exception rule ID.",
            "required": true,
            "schema": { "type": "string", "example": "2ypsHHwTTFK-fzZJkudYwA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exception_rule": {
                    "required": [
                      "country",
                      "match_type",
                      "prefix_number",
                      "status"
                    ],
                    "type": "object",
                    "properties": {
                      "match_type": {
                        "type": "string",
                        "description": "The match type for the exception rule. The values are `phoneNumber` or `prefix`.\n",
                        "example": "prefix",
                        "enum": ["phoneNumber", "prefix"]
                      },
                      "prefix_number": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The exception rule phone number prefix or the phone number without the country code.",
                        "example": "20665558945"
                      },
                      "comment": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "A comment to identify the exception rule number or prefix.",
                        "example": "test"
                      },
                      "status": {
                        "type": "string",
                        "description": "Whether the exception rule is active or inactive. \n`active`: The exception rule is active.\n`inactive`: The exception rule is inactive.",
                        "example": "active",
                        "enum": ["active", "inactive"]
                      },
                      "country": {
                        "type": "string",
                        "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                        "example": "US"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content  \n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The common area does not exist: {commonAreaId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:common_area_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": [
            "phone:update:common_area_outbound_calling_rule:admin"
          ]
        }
      }
    },
    "/phone/outbound_calling/countries_regions": {
      "get": {
        "tags": ["Outbound Calling"],
        "summary": "Get account level outbound calling countries and regions",
        "description": "Returns the account level outbound calling countries and regions.\n\n**Prerequisites:**\n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_outbound_calling_rules:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "GetAccountOutboundCallingCountriesAndRegions",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records in a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`    Outbound calling country regions returned. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "countries_regions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The country name.",
                            "example": "United States"
                          },
                          "code": {
                            "type": "integer",
                            "description": "The country code.",
                            "example": 1
                          },
                          "iso_code": {
                            "type": "string",
                            "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                            "example": "US"
                          },
                          "rule": {
                            "type": "integer",
                            "description": "The default outbound calling rule. \n\n`1` Allowed\n`2` Blocked \n`3` Requires local number, caller ID, or plan\n`4` Requires the extension number and PIN code",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          },
                          "enabled_carrier": {
                            "type": "array",
                            "description": "The enabled carrier, which could be \"ZOOM\" or \"BYOC\".",
                            "items": { "type": "string", "example": "ZOOM" }
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The total number of records in a single API call.",
                      "example": 30,
                      "default": 30
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_outbound_calling_rules:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_outbound_calling_rules:admin"]
        }
      },
      "patch": {
        "tags": ["Outbound Calling"],
        "summary": "Update account level outbound calling countries or regions",
        "description": "Updates the account level outbound calling policy country or region.\n\n**Prerequisite:**\n* Account must have a Pro or a higher plan with a Zoom Phone license.\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateAccountOutboundCallingCountriesOrRegions",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country_regions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "iso_code": {
                          "type": "string",
                          "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                          "example": "US"
                        },
                        "rule": {
                          "type": "integer",
                          "description": "The default outbound calling rule. \n\n`1` - Allowed\n`2` - Blocked\n`3` - Requires local number, caller ID, or plan\n`4` - Requires the extension number and PIN code",
                          "example": 1,
                          "enum": [1, 2, 3, 4]
                        },
                        "delete_existing_exception_rules": {
                          "type": "boolean",
                          "description": "Whether to delete existing exception rules. This field only appears when the default outbound calling rule is changed. The default value is `false`.",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content  \n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:outbound_calling_rule:admin"]
        }
      }
    },
    "/phone/outbound_calling/exception_rules": {
      "get": {
        "tags": ["Outbound Calling"],
        "summary": "List account level outbound calling exception rules",
        "description": "Lists the account level outbound calling policy exception rules.\n\n**Prerequisite:**\n* Pro or higher account plan with Zoom phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_outbound_calling_rules:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listAccountOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "country",
            "in": "query",
            "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
            "required": false,
            "schema": { "type": "string", "example": "US" }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The partial string of a phone number.",
            "required": false,
            "schema": { "type": "string", "example": "11067" }
          },
          {
            "name": "match_type",
            "in": "query",
            "description": "The match type of an exception rule.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "prefix",
              "enum": ["phoneNumber", "prefix"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of an exception rule.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "active",
              "enum": ["active", "inactive"]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records in a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nList outbound calling exception rules successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exception_rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The exception rule ID.",
                            "example": "2ypsHHwTTFK-fzZJkudYwA"
                          },
                          "match_type": {
                            "type": "string",
                            "description": "The match type for the exception rule. The values are `phoneNumber`or `prefix`.",
                            "example": "prefix",
                            "enum": ["phoneNumber", "prefix"]
                          },
                          "prefix_number": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The exception rule phone number prefix or the phone number without the country code.",
                            "example": "20665558945"
                          },
                          "rule": {
                            "type": "integer",
                            "description": "The exception rule type.\n`1` - Allowed \n`2` - Blocked \n`3` - Requires local number, caller ID, or plan \n`4` - Requires the extension number and PIN code",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          },
                          "comment": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "A comment to identify the exception rule number or the prefix.",
                            "example": "test"
                          },
                          "status": {
                            "type": "string",
                            "description": "Whether the exception rule is active or inactive. \n`active`: The exception rule is active.\n`inactive`: The exception rule is inactive.",
                            "example": "active",
                            "enum": ["active", "inactive"]
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The total number of records in a single API call.",
                      "example": 30,
                      "default": 30
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_outbound_calling_rules:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_outbound_calling_rules:admin"]
        }
      },
      "post": {
        "tags": ["Outbound Calling"],
        "summary": "Add account level outbound calling exception rule",
        "description": "Adds the account level outbound calling policy exception rule for country region.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "AddAccountOutboundCallingExceptionRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exception_rule": {
                    "required": [
                      "country",
                      "match_type",
                      "prefix_number",
                      "status"
                    ],
                    "type": "object",
                    "properties": {
                      "match_type": {
                        "type": "string",
                        "description": "The match type for the exception rule:\n\n`phoneNumber`\n `prefix`",
                        "example": "prefix",
                        "enum": ["phoneNumber", "prefix"]
                      },
                      "prefix_number": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The exception rule phone number prefix or phone number without the country code.",
                        "example": "20665558945"
                      },
                      "comment": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "A comment that identifies the exception rule number or prefix.",
                        "example": "test"
                      },
                      "status": {
                        "type": "string",
                        "description": "Whether the exception rule is active or inactive. \n`active`: The exception rule is active.\n`inactive`: The exception rule is inactive.",
                        "example": "active",
                        "enum": ["active", "inactive"]
                      },
                      "country": {
                        "type": "string",
                        "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                        "example": "US"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \n\nCreated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exception_rule_id": {
                      "type": "string",
                      "description": "The IDs of the exception rules.",
                      "example": "jE1rtyf0Tx6N86L4pBYV4Q"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized \n\n **Error Code:** `124` <br>\n  Requires an access token. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:outbound_calling_rule:admin"]
        }
      }
    },
    "/phone/outbound_calling/exception_rules/{exceptionRuleId}": {
      "delete": {
        "tags": ["Outbound Calling"],
        "summary": "Delete account level outbound calling exception rule",
        "description": "Deletes the account level outbound calling exception rule.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteAccountOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "exceptionRuleId",
            "in": "path",
            "description": "The exception rule ID.",
            "required": true,
            "schema": { "type": "string", "example": "2ypsHHwTTFK-fzZJkudYwA" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n**Error Code:** `13508` <br>\n The exception rule ID has one more record in the DB: {exceptionRuleId}. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13507` <br>\n The exception rule does not exist: {exceptionRuleId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:outbound_calling_rule:admin"]
        }
      },
      "patch": {
        "tags": ["Outbound Calling"],
        "summary": "Update account level outbound calling exception rule",
        "description": "Updates the account level outbound calling policy for the country region exception rule.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateAccountOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "exceptionRuleId",
            "in": "path",
            "description": "The exception rule ID.",
            "required": true,
            "schema": { "type": "string", "example": "2ypsHHwTTFK-fzZJkudYwA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exception_rule": {
                    "required": [
                      "country",
                      "match_type",
                      "prefix_number",
                      "status"
                    ],
                    "type": "object",
                    "properties": {
                      "match_type": {
                        "type": "string",
                        "description": "The match type for the exception rule, The values are `phoneNumber` or `prefix`.\n",
                        "example": "prefix",
                        "enum": ["phoneNumber", "prefix"]
                      },
                      "prefix_number": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The exception rule phone number prefix or the phone number without country code.",
                        "example": "20665558945"
                      },
                      "comment": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "A comment to identify the exception rule number or prefix.",
                        "example": "test"
                      },
                      "status": {
                        "type": "string",
                        "description": "Whether the exception rule is active or inactive. \n`active`: The exception rule is active.\n`inactive`: The exception rule is inactive.",
                        "example": "active",
                        "enum": ["active", "inactive"]
                      },
                      "country": {
                        "type": "string",
                        "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                        "example": "US"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content  \n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:outbound_calling_rule:admin"]
        }
      }
    },
    "/phone/sites/{siteId}/outbound_calling/countries_regions": {
      "get": {
        "tags": ["Outbound Calling"],
        "summary": "Get site level outbound calling countries and regions",
        "description": "Returns the site level outbound calling countries and regions.\n\n**Prerequisites:**\n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:site_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "GetSiteOutboundCallingCountriesAndRegions",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "schema": { "type": "string", "example": "TAjiGweoTLeK72SaeocBZg" }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records in a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`    Outbound calling country regions returned. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "countries_regions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The country name.",
                            "example": "United States"
                          },
                          "code": {
                            "type": "integer",
                            "description": "The country code.",
                            "example": 1
                          },
                          "iso_code": {
                            "type": "string",
                            "description": "The country ISO code.",
                            "example": "US"
                          },
                          "rule": {
                            "type": "integer",
                            "description": "The default outbound calling rule. \n\n`1` Allowed\n`2` Blocked \n`3` Requires local number, caller ID, or plan\n`4` Requires the extension number and PIN code",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          },
                          "enabled_carrier": {
                            "type": "array",
                            "description": "The enabled carrier, which could be \"ZOOM\" or \"BYOC\".",
                            "items": { "type": "string", "example": "ZOOM" }
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The total number of records in a single API call.",
                      "example": 30,
                      "default": 30
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n  Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The site does not exist: {siteId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:site_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:site_outbound_calling_rule:admin"]
        }
      },
      "patch": {
        "tags": ["Outbound Calling"],
        "summary": "Update site level outbound calling countries or regions",
        "description": "Updates the site level outbound calling policy country or region.\n\n**Prerequisites:**\n* Account must have a Pro or a higher plan with a Zoom Phone license.\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:site_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateSiteOutboundCallingCountriesOrRegions",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "schema": { "type": "string", "example": "TAjiGweoTLeK72SaeocBZg" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country_regions": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "iso_code": {
                          "type": "string",
                          "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                          "example": "US"
                        },
                        "rule": {
                          "type": "integer",
                          "description": "The default outbound calling rule. \n\n`1` - Allowed\n`2` - Blocked\n`3` - Requires local number, caller ID, or plan\n`4` - Requires the extension number and PIN code",
                          "example": 1,
                          "enum": [1, 2, 3, 4]
                        },
                        "delete_existing_exception_rules": {
                          "type": "boolean",
                          "description": "Whether to delete existing exception rules. This field only appears when the default outbound calling rule is changed. The default value is `false`.",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content  \n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The site does not exist: {siteId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:site_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:site_outbound_calling_rule:admin"]
        }
      }
    },
    "/phone/sites/{siteId}/outbound_calling/exception_rules": {
      "get": {
        "tags": ["Outbound Calling"],
        "summary": "List site level outbound calling exception rules",
        "description": "Returns a list of site level outbound calling policy exception rules.\n\n**Prerequisite:**\n* Pro or higher account plan with Zoom phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:site_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listSiteOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "schema": { "type": "string", "example": "TAjiGweoTLeK72SaeocBZg" }
          },
          {
            "name": "country",
            "in": "query",
            "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
            "required": false,
            "schema": { "type": "string", "example": "US" }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The partial string of a phone number.",
            "required": false,
            "schema": { "type": "string", "example": "11067" }
          },
          {
            "name": "match_type",
            "in": "query",
            "description": "The match type of an exception rule.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "prefix",
              "enum": ["phoneNumber", "prefix"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of an exception rule.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "active",
              "enum": ["active", "inactive"]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records in a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nList outbound calling exception rules successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exception_rules": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The exception rule ID.",
                            "example": "2ypsHHwTTFK-fzZJkudYwA"
                          },
                          "match_type": {
                            "type": "string",
                            "description": "The match type for the exception rule:\n\n`phoneNumber`and `prefix`.",
                            "example": "prefix",
                            "enum": ["phoneNumber", "prefix"]
                          },
                          "prefix_number": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The exception rule phone number prefix or phone number without country code.",
                            "example": "20665558945"
                          },
                          "rule": {
                            "type": "integer",
                            "description": "The exception rule type `1` - allowed, `2` - blocked, `3` - require local number, caller ID or plan, `4` - require to enter the extension number and PIN code.",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          },
                          "comment": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "A comment to help you identify the exception rule number or prefix.",
                            "example": "test"
                          },
                          "status": {
                            "type": "string",
                            "description": "Whether the exception rule is active or inactive. \n`active`: The exception rule is active.\n`inactive`: The exception rule is inactive.",
                            "example": "active",
                            "enum": ["active", "inactive"]
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The total number of records in single API call.",
                      "example": 30,
                      "default": 30
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13000` <br>\n The site does not exist: {siteId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:site_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:site_outbound_calling_rule:admin"]
        }
      },
      "post": {
        "tags": ["Outbound Calling"],
        "summary": "Add site level outbound calling exception rule",
        "description": "Adds the site level outbound calling policy exception rule for the country region.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:site_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "AddSiteOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "schema": { "type": "string", "example": "TAjiGweoTLeK72SaeocBZg" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exception_rule": {
                    "required": [
                      "country",
                      "match_type",
                      "prefix_number",
                      "status"
                    ],
                    "type": "object",
                    "properties": {
                      "match_type": {
                        "type": "string",
                        "description": "The match type for the exception rule.\n`phoneNumber`\n `prefix`",
                        "example": "prefix",
                        "enum": ["phoneNumber", "prefix"]
                      },
                      "prefix_number": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The exception rule phone number prefix or the phone number without country code.",
                        "example": "20665558945"
                      },
                      "comment": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "A comment that identifies the exception rule number or the prefix.",
                        "example": "test"
                      },
                      "status": {
                        "type": "string",
                        "description": "Whether the exception rule is active or inactive. \n`active`: The exception rule is active.\n`inactive`: The exception rule is inactive.",
                        "example": "active",
                        "enum": ["active", "inactive"]
                      },
                      "country": {
                        "type": "string",
                        "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                        "example": "US"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \n\nCreated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exception_rule_id": {
                      "type": "string",
                      "description": "The IDs of the exception rules.",
                      "example": "jE1rtyf0Tx6N86L4pBYV4Q"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The site does not exist: {siteId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:site_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:site_outbound_calling_rule:admin"]
        }
      }
    },
    "/phone/sites/{siteId}/outbound_calling/exception_rules/{exceptionRuleId}": {
      "delete": {
        "tags": ["Outbound Calling"],
        "summary": "Delete site level outbound calling exception rule",
        "description": "Deletes the site level outbound calling exception rule.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:site_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteSiteOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "schema": { "type": "string", "example": "TAjiGweoTLeK72SaeocBZg" }
          },
          {
            "name": "exceptionRuleId",
            "in": "path",
            "description": "The exception rule ID.",
            "required": true,
            "schema": { "type": "string", "example": "2ypsHHwTTFK-fzZJkudYwA" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n**Error Code:** `13508` <br>\n The exception rule ID has one more record in the DB: {exceptionRuleId}. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The site does not exist: {siteId}. <br>\n**Error Code:** `13507` <br>\n The exception rule does not exist: {exceptionRuleId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:site_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:site_outbound_calling_rule:admin"]
        }
      },
      "patch": {
        "tags": ["Outbound Calling"],
        "summary": "Update site level outbound calling exception rule",
        "description": "Updates the site level outbound calling policy for the country region exception rule.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:site_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateSiteOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The ID of the site.",
            "required": true,
            "schema": { "type": "string", "example": "TAjiGweoTLeK72SaeocBZg" }
          },
          {
            "name": "exceptionRuleId",
            "in": "path",
            "description": "The exception rule ID.",
            "required": true,
            "schema": { "type": "string", "example": "2ypsHHwTTFK-fzZJkudYwA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exception_rule": {
                    "required": [
                      "country",
                      "match_type",
                      "prefix_number",
                      "status"
                    ],
                    "type": "object",
                    "properties": {
                      "match_type": {
                        "type": "string",
                        "description": "The match type for the exception rule. The values are `phoneNumber` or `prefix`.\n",
                        "example": "prefix",
                        "enum": ["phoneNumber", "prefix"]
                      },
                      "prefix_number": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The exception rule phone number prefix or the phone number without the country code.",
                        "example": "20665558945"
                      },
                      "comment": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "A comment to identify the exception rule number or prefix.",
                        "example": "test"
                      },
                      "status": {
                        "type": "string",
                        "description": "Whether the exception rule is active or inactive. \n`active`: The exception rule is active.\n`inactive`: The exception rule is inactive.",
                        "example": "active",
                        "enum": ["active", "inactive"]
                      },
                      "country": {
                        "type": "string",
                        "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                        "example": "US"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content  \n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n  Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The site does not exist: {siteId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:site_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:site_outbound_calling_rule:admin"]
        }
      }
    },
    "/phone/users/{userId}/outbound_calling/countries_regions": {
      "get": {
        "tags": ["Outbound Calling"],
        "summary": "Get user level outbound calling countries and regions",
        "description": "Returns the user level outbound calling countries and regions.\n\n**Prerequisites:**\n* A Business or Enterprise account\n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:user_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "GetUserOutboundCallingCountriesAndRegions",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The ID of the user.",
            "required": true,
            "schema": { "type": "string", "example": "SJD6tIJpQHeTU4RDde-NVA" }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records in a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n Outbound calling country regions returned. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "countries_regions": {
                      "maxItems": 100,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "The country name.",
                            "example": "United States"
                          },
                          "code": {
                            "type": "integer",
                            "description": "The country code.",
                            "example": 1
                          },
                          "iso_code": {
                            "type": "string",
                            "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                            "example": "US"
                          },
                          "rule": {
                            "type": "integer",
                            "description": "The default outbound calling rule. \n\n`1` Allowed\n`2` Blocked \n`3` Requires local number, caller ID, or plan\n`4` Requires the extension number and PIN code",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          },
                          "enabled_carrier": {
                            "maxItems": 10,
                            "type": "array",
                            "description": "The enabled carrier, which could be \"ZOOM\" or \"BYOC\".",
                            "items": { "type": "string", "example": "ZOOM" }
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through large set of results. The next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The total number of records in a single API call.",
                      "example": 30,
                      "default": 30
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The user does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:user_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:user_outbound_calling_rule:admin"]
        }
      },
      "patch": {
        "tags": ["Outbound Calling"],
        "summary": "Update user level outbound calling countries or regions",
        "description": "Updates the user level outbound calling policy country or region.\n\n**Prerequisite:**\n* Account must have a Pro or a higher plan with a Zoom Phone license.\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:user_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateUserOutboundCallingCountriesOrRegions",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The ID of the user.",
            "required": true,
            "schema": { "type": "string", "example": "TAjiGweoTLeK72SaeocBZg" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "country_regions": {
                    "maxItems": 300,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "iso_code": {
                          "type": "string",
                          "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                          "example": "US"
                        },
                        "rule": {
                          "type": "integer",
                          "description": "The default outbound calling rule. \n\n`1` - Allowed\n`2` - Blocked\n`3` - Requires local number, caller ID, or plan\n`4` - Requires the extension number and PIN code",
                          "example": 1,
                          "enum": [1, 2, 3, 4]
                        },
                        "delete_existing_exception_rules": {
                          "type": "boolean",
                          "description": "Whether to delete existing exception rules. This field only appears when the default outbound calling rule is changed. The default value is `false`.",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content  \n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n  Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The user does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:user_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:user_outbound_calling_rule:admin"]
        }
      }
    },
    "/phone/users/{userId}/outbound_calling/exception_rules": {
      "get": {
        "tags": ["Outbound Calling"],
        "summary": "List user level outbound calling exception rules",
        "description": "Returns a list of the user level outbound calling policy exception rules.\n\n**Prerequisite:**\n* Pro or higher account plan with Zoom phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:user_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listUserOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The ID of the user.",
            "required": true,
            "schema": { "type": "string", "example": "SJD6tIJpQHeTU4RDde-NVA" }
          },
          {
            "name": "country",
            "in": "query",
            "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
            "required": false,
            "schema": { "type": "string", "example": "US" }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The partial string of a phone number.",
            "required": false,
            "schema": { "type": "string", "example": "11067" }
          },
          {
            "name": "match_type",
            "in": "query",
            "description": "The match type of an exception rule.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "prefix",
              "enum": ["phoneNumber", "prefix"]
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of an exception rule.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "active",
              "enum": ["active", "inactive"]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records in a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nList outbound calling exception rules successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exception_rules": {
                      "maxItems": 100,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The exception rule ID.",
                            "example": "2ypsHHwTTFK-fzZJkudYwA"
                          },
                          "match_type": {
                            "type": "string",
                            "description": "The match type for the exception rule:\n\n`phoneNumber`and `prefix`.",
                            "example": "prefix",
                            "enum": ["phoneNumber", "prefix"]
                          },
                          "prefix_number": {
                            "maxLength": 50,
                            "type": "string",
                            "description": "The exception rule phone number prefix or phone number without country code.",
                            "example": "20665558945"
                          },
                          "rule": {
                            "type": "integer",
                            "description": "The exception rule type `1` - allowed, `2` - blocked, `3` - require local number, caller ID or plan, `4` - require to enter the extension number and PIN code.",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          },
                          "comment": {
                            "maxLength": 255,
                            "type": "string",
                            "description": "A comment to identify the exception rule number or prefix.",
                            "example": "test"
                          },
                          "status": {
                            "type": "string",
                            "description": "Whether the exception rule is active or inactive. \n`active`: The exception rule is active.\n`inactive`: The exception rule is inactive.",
                            "example": "active",
                            "enum": ["active", "inactive"]
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The total number of records returned from a single API call.",
                      "example": 30,
                      "default": 30
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13000` <br>\n The user does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:user_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:user_outbound_calling_rule:admin"]
        }
      },
      "post": {
        "tags": ["Outbound Calling"],
        "summary": "Add user level outbound calling exception rule",
        "description": "Adds an user level outbound calling policy exception rule for the country region.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:user_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "AddUserOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The ID of the user",
            "required": true,
            "schema": { "type": "string", "example": "SJD6tIJpQHeTU4RDde-NVA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exception_rule": {
                    "required": [
                      "country",
                      "match_type",
                      "prefix_number",
                      "status"
                    ],
                    "type": "object",
                    "properties": {
                      "match_type": {
                        "type": "string",
                        "description": "The match type for the exception rule.\n`phoneNumber`\n `prefix`",
                        "example": "prefix",
                        "enum": ["phoneNumber", "prefix"]
                      },
                      "prefix_number": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The exception rule phone number prefix or the phone number without country code.",
                        "example": "20665558945"
                      },
                      "comment": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "A comment that identifies the exception rule number or the prefix.",
                        "example": "test"
                      },
                      "status": {
                        "type": "string",
                        "description": "Whether the exception rule is active or inactive. \n`active`: The exception rule is active.\n`inactive`: The exception rule is inactive.",
                        "example": "active",
                        "enum": ["active", "inactive"]
                      },
                      "country": {
                        "type": "string",
                        "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                        "example": "US"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \n\nCreated successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "exception_rule_id": {
                      "type": "string",
                      "description": "The IDs of the exception rules.",
                      "example": "jE1rtyf0Tx6N86L4pBYV4Q"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The user does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:user_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:user_outbound_calling_rule:admin"]
        }
      }
    },
    "/phone/users/{userId}/outbound_calling/exception_rules/{exceptionRuleId}": {
      "delete": {
        "tags": ["Outbound Calling"],
        "summary": "Delete user level outbound calling exception rule",
        "description": "Deletes the user level outbound calling exception rule.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:user_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteUserOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The ID of the user.",
            "required": true,
            "schema": { "type": "string", "example": "TAjiGweoTLeK72SaeocBZg" }
          },
          {
            "name": "exceptionRuleId",
            "in": "path",
            "description": "The exception rule ID.",
            "required": true,
            "schema": { "type": "string", "example": "2ypsHHwTTFK-fzZJkudYwA" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n**Error Code:** `13508` <br>\n The exception rule ID has one more record in the DB: {exceptionRuleId}. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The user does not exist: {userId}. <br>\n**Error Code:** `13507` <br>\n The exception rule does not exist: {exceptionRuleId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:user_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:user_outbound_calling_rule:admin"]
        }
      },
      "patch": {
        "tags": ["Outbound Calling"],
        "summary": "Update user level outbound calling exception rule",
        "description": "Updates the user level outbound calling policy for the country region exception rule.\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license.\n* Account owner or admin permissions.\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:user_outbound_calling_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateUserOutboundCallingExceptionRule",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The ID of the user.",
            "required": true,
            "schema": { "type": "string", "example": "TAjiGweoTLeK72SaeocBZg" }
          },
          {
            "name": "exceptionRuleId",
            "in": "path",
            "description": "The exception rule ID.",
            "required": true,
            "schema": { "type": "string", "example": "2ypsHHwTTFK-fzZJkudYwA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "exception_rule": {
                    "required": [
                      "country",
                      "match_type",
                      "prefix_number",
                      "status"
                    ],
                    "type": "object",
                    "properties": {
                      "match_type": {
                        "type": "string",
                        "description": "The match type for the exception rule, The values are `phoneNumber` or `prefix`.\n",
                        "example": "prefix",
                        "enum": ["phoneNumber", "prefix"]
                      },
                      "prefix_number": {
                        "maxLength": 50,
                        "type": "string",
                        "description": "The exception rule phone number prefix or the phone number without country code.",
                        "example": "20665558945"
                      },
                      "comment": {
                        "maxLength": 255,
                        "type": "string",
                        "description": "A comment to identify the exception rule number or prefix.",
                        "example": "test"
                      },
                      "status": {
                        "type": "string",
                        "description": "Whether the exception rule is active or inactive. \n`active`: The exception rule is active.\n`inactive`: The exception rule is inactive.",
                        "example": "active",
                        "enum": ["active", "inactive"]
                      },
                      "country": {
                        "type": "string",
                        "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                        "example": "US"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content  \n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13504` <br>\n You do not enable the outbound calling policy setting. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Requires an access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `13500` <br>\n The user does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:user_outbound_calling_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:user_outbound_calling_rule:admin"]
        }
      }
    },
    "/phone/devices": {
      "get": {
        "tags": ["Phone Devices"],
        "summary": "List devices",
        "description": "Lists all the [desk phone devices](https://support.zoom.us/hc/en-us/articles/360021119092) that are configured with Zoom Phone on an account.\n\n**Prerequisites:**  \n \n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_devices:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listPhoneDevices",
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "description": "The device status: `assigned` or `unassigned` to list device status in Zoom account.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "assigned",
              "enum": ["assigned", "unassigned"]
            }
          },
          {
            "name": "assignee_type",
            "in": "query",
            "description": "The type of the assignee. It's available if `type = assigned`. It's unavailable if the account has not enabled the common area feature. It also returns devices of the specified `assignee_type`. If unspecified, it returns all assigned devices.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user",
              "enum": ["user", "commonArea"]
            }
          },
          {
            "name": "device_source",
            "in": "query",
            "description": "The device source. `hotDesking` is only available when `type = assigned`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "haas",
              "enum": ["haas", "hotDesking"]
            }
          },
          {
            "name": "location_status",
            "in": "query",
            "description": "The status of device location. It's available if `type = assigned`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "unknownAddress",
              "enum": ["unknownAddress"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The site of the assignee.",
            "required": false,
            "schema": { "type": "string", "example": "lA68sMSVQ6GAUcGg_GH0nQ" }
          },
          {
            "name": "device_type",
            "in": "query",
            "description": "The manufacturer name or device type.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "audioCodes",
              "enum": [
                "algo",
                "audioCodes",
                "cisco",
                "cyberData",
                "grandstream",
                "poly",
                "yealink",
                "other"
              ]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The user, extension, MAC address, or IP address to filter the results.",
            "required": false,
            "schema": { "type": "string", "example": "80-5e-c0-ce-ef-2f" }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nDevices listed successfully. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "devices": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assignee": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "integer",
                                "description": "The extension number of the Zoom Phone the `user` or `commonArea`uses.",
                                "format": "int64",
                                "example": 123
                              },
                              "id": {
                                "type": "string",
                                "description": "The ID of the user or commonArea to whom the device has been assigned.",
                                "example": "-tDdYIstSumpA0L13GztIQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name.",
                                "example": "Pooja"
                              },
                              "extension_type": {
                                "type": "string",
                                "description": "The type of the assignee. It's available only if the device is assigned.",
                                "example": "user",
                                "enum": ["user", "commonArea"]
                              }
                            }
                          },
                          "assignees": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "extension_number": {
                                  "type": "integer",
                                  "description": "The extension number of the Zoom Phone the `user` or `commonArea`uses.",
                                  "format": "int64",
                                  "example": 123
                                },
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the user or commonArea to whom the device has been assigned.",
                                  "example": "-tDdYIstSumpA0L13GztIQ"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "Name.",
                                  "example": "Pooja"
                                },
                                "extension_type": {
                                  "type": "string",
                                  "description": "The type of the assignee. It's available only if the device is assigned.",
                                  "example": "user",
                                  "enum": ["user", "commonArea"]
                                },
                                "extension_id": {
                                  "type": "string",
                                  "description": "The extension ID of the `user` or `common area`.",
                                  "example": "MjGXQfCxShapaxJDka7"
                                }
                              }
                            }
                          },
                          "device_type": {
                            "type": "string",
                            "description": "This field provides the manufacturer name and the model name.",
                            "example": "AudioCodes405"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "Display name of the device.",
                            "example": "Pooja's Phone"
                          },
                          "id": {
                            "type": "string",
                            "description": "The device ID.",
                            "example": "-tDdYIstSumpA0L13GztIQ"
                          },
                          "mac_address": {
                            "type": "string",
                            "description": "The MAC address or serial number of the device.",
                            "example": "203a07240534"
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user.",
                                "example": "NjHmTu16Qfe8yOiNJuekXA"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672).",
                                "example": "HQ site"
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the device. The value is either `online` or `offline`.",
                            "example": "online",
                            "enum": ["online", "offline"]
                          },
                          "provision_template_id": {
                            "type": "string",
                            "description": "The provision template ID. It's supported only by some devices. An empty string represents 'No value set'",
                            "example": "Ke5Ghevvoo001hr"
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "uBTK3NzNksdkuCUAQaFVFd86kyOr59zg4U2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records found for the query across all pages.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_devices:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_devices:admin"]
        }
      },
      "post": {
        "tags": ["Phone Devices"],
        "summary": "Add a device",
        "description": "[Adda a desk phone and assigns it](https://support.zoom.us/hc/en-us/articles/360021119092#h_5ca07504-68a8-4c3d-ad0e-c1d3594436da) to a user, if a desk phone is required.\n\nBy default, all Zoom Phone users can make and receive calls using the Zoom desktop and mobile applications. \n\n**Prerequisites:**  \n \n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n* [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)  \n \n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:device:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "addPhoneDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "assignee_extension_ids",
                  "display_name",
                  "mac_address",
                  "type"
                ],
                "type": "object",
                "properties": {
                  "assigned_to": {
                    "type": "string",
                    "description": "User ID or email address of the user to whom this device is to be assigned.",
                    "example": "-tDdYIstSumpA0L13GztIQ"
                  },
                  "assignee_extension_ids": {
                    "type": "array",
                    "description": "Available only for the account that has enabled the common area feature. \n Extension ID of the [`user`](https://marketplace.zoom.us/docs/api-reference/phone/methods/#operation/phoneUser) or [`common area` ID](https://marketplace.zoom.us/docs/api-reference/phone/methods/#operation/listCommonAreas).",
                    "items": {
                      "type": "string",
                      "example": "dsH7FaYRHy9gV4Qb8ecku"
                    }
                  },
                  "display_name": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "Display name of the desk phone.",
                    "example": "Desk Phone"
                  },
                  "mac_address": {
                    "pattern": "^([0-9A-Fa-f]{2}[:-]?){5}([0-9A-Fa-f]{2})$",
                    "type": "string",
                    "description": "The MAC address of the desk phone.  \n  \nNote: If you're using a wireless phone, enter the wired MAC address, not the wireless MAC address.",
                    "example": "543968a78ee7"
                  },
                  "model": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Model name of the device.",
                    "example": "testModel"
                  },
                  "type": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Manufacturer (brand) name of the device.",
                    "example": "DeviceBrand"
                  },
                  "provision_template_id": {
                    "type": "string",
                    "description": "Provision template id. Supported only by some devices. Empty string represents 'No value set'",
                    "example": "Ke5Ghevvoo001hr"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \nDevice added successfully.  ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the desk phone.",
                      "example": "Q3ECfhVES-uS4mew-161rg"
                    },
                    "display_name": {
                      "type": "string",
                      "description": "Display name of the desk phone.",
                      "example": "Desk Phone"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n  <br>\n**Error Code:** `400` <br>\n The MAC Address is invalid.<br>\nThe MAC Address already exists in the system.<br>\nEach user can be assigned up to three desk phones.<br> <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `1001` <br>\n User not found: {userId} <br>\nUser extension Id or common area extension Id not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:write:admin", "phone:write:device:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:device:admin"]
        }
      }
    },
    "/phone/devices/sync": {
      "post": {
        "tags": ["Phone Devices"],
        "summary": "Sync deskphones",
        "description": "Use this API to resync all online zero-touch or assisted-provisioning devices in an account or a site. Only allows sending one request every 15 minutes.\n\n**Prerequisites:**\n\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:sync_device:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "syncPhoneDevice",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["level"],
                "type": "object",
                "properties": {
                  "level": {
                    "maximum": 2,
                    "minimum": 1,
                    "type": "integer",
                    "description": "Deskphone sync level: 1 - account level, 2 - site level.",
                    "example": 2
                  },
                  "site_id": {
                    "maxLength": 50,
                    "type": "string",
                    "description": "Site ID.",
                    "example": "NjHmTu16Qfe8yOiNJuekXA"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content** Device resync command issued."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n**Error Code:** `429` <br>\nToo many concurrent requests. A request has already been made.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:sync_device:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:sync_device:admin"]
        }
      }
    },
    "/phone/devices/{deviceId}": {
      "get": {
        "tags": ["Phone Devices"],
        "summary": "Get device details",
        "description": "Returns detailed information about a specific [desk phone device](https://support.zoom.us/hc/en-us/articles/360021119092).\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:device:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getADevice",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The unique Identifier of the device.",
            "required": true,
            "schema": { "type": "string", "example": "-tDdYIstSumpA0L13GztIQ" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nDevice information retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "assignee": {
                      "type": "object",
                      "properties": {
                        "extension_number": {
                          "type": "integer",
                          "description": "The extension number of the Zoom Phone the `user` or `commonArea` uses.",
                          "format": "int64",
                          "example": 123
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of the user or common area to whom the device has been assigned.",
                          "example": "i242djsgrg"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name.",
                          "example": "Pooja"
                        },
                        "extension_type": {
                          "type": "string",
                          "description": "The type of the assignee. It's available only if the device is assigned.",
                          "example": "user",
                          "enum": ["user", "commonArea"]
                        }
                      },
                      "description": "The user to whom the device has been assigned."
                    },
                    "assignees": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "extension_number": {
                            "type": "integer",
                            "description": "The extension number of the Zoom Phone the `user` or `commonArea` uses.",
                            "format": "int64",
                            "example": 123
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID of the user or common area to whom the device has been assigned.",
                            "example": "i242djsgrg"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name.",
                            "example": "Pooja"
                          },
                          "extension_type": {
                            "type": "string",
                            "description": "The type of the assignee. It's available only if the device is assigned.",
                            "example": "user",
                            "enum": ["user", "commonArea"]
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "The extension ID of the `user` or `common area`.",
                            "example": "bdkfdler"
                          }
                        }
                      }
                    },
                    "device_type": {
                      "type": "string",
                      "description": "This field includes the manufacturer name and the model name.",
                      "example": "Ribbon EdgeMarc302"
                    },
                    "display_name": {
                      "type": "string",
                      "description": "The display name of the device.",
                      "example": "Pooja's Phone"
                    },
                    "id": {
                      "type": "string",
                      "description": "The unique identifier of the device.",
                      "example": "1234324"
                    },
                    "mac_address": {
                      "type": "string",
                      "description": "The MAC address or serial number of the device.",
                      "example": "203a07240534"
                    },
                    "provision": {
                      "type": "object",
                      "properties": {
                        "sip_accounts": {
                          "type": "array",
                          "description": "The SIP Account details registered during the device provisioning process. This object will only be returned if manual provisioning was used for the device.  ",
                          "items": {
                            "type": "object",
                            "properties": {
                              "authorization_id": {
                                "type": "string",
                                "description": "The authorization ID of the SIP account provided in the provisioning process.",
                                "example": "123123"
                              },
                              "outbound_proxy": {
                                "type": "string",
                                "description": "The outbound proxy provided in the provisioning process.",
                                "example": "123123"
                              },
                              "password": {
                                "type": "string",
                                "description": "The password entered during the provisioning process. ",
                                "example": "1123"
                              },
                              "secondary_outbound_proxy": {
                                "type": "string",
                                "description": "The secondary outbound proxy provided in the provisioning process.",
                                "example": "proxy.example.com:5555"
                              },
                              "shared_line": {
                                "type": "object",
                                "properties": {
                                  "alias": {
                                    "type": "string",
                                    "description": "The alias.",
                                    "example": "additional information"
                                  },
                                  "line_subscription": {
                                    "type": "object",
                                    "properties": {
                                      "display_name": {
                                        "type": "string",
                                        "description": "The display name.",
                                        "example": "Pooja"
                                      },
                                      "extension_number": {
                                        "type": "integer",
                                        "description": "The extension number.",
                                        "format": "int64",
                                        "example": 123123
                                      },
                                      "phone_number": {
                                        "type": "string",
                                        "description": "The phone number.",
                                        "example": "12059535689"
                                      }
                                    },
                                    "description": "Line subscription."
                                  },
                                  "outbound_caller_id": {
                                    "type": "string",
                                    "description": "The outbound caller ID.",
                                    "example": "+123123123"
                                  }
                                },
                                "description": "This field returns additional provisioning information with generic device SIP credentials."
                              },
                              "sip_domain": {
                                "type": "string",
                                "description": "The SIP domain provided in the provisioning process.  \n  \n ",
                                "example": "123.zoom.us"
                              },
                              "user_name": {
                                "type": "string",
                                "description": "The user name of the SIP account provided in the provisioning process.",
                                "example": "123123"
                              }
                            }
                          }
                        },
                        "type": {
                          "type": "string",
                          "description": "The [provisioning type](https://support.zoom.us/hc/en-us/articles/360033223411). The value can be one of the following:\n\n* `ztp` : Zero touch provisioning.\n* `assisted`: Assisted provisioning.\n* `manual`: Manual provisioning. \n\n",
                          "example": "manual",
                          "enum": ["assisted", "ztp", "manual"]
                        },
                        "url": {
                          "type": "string",
                          "description": "The provisioning URL. This field will only be returned for devices that were provisioned via `assisted` provisioning type.",
                          "example": "wwww.example.com"
                        }
                      },
                      "description": "The provisioning information of a device."
                    },
                    "site": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The [site](https://support.zoom.us/hc/en-us/articles/360020809672) of the phone user.",
                          "example": "123123"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the [site](https://support.zoom.us/hc/en-us/articles/360020809672).",
                          "example": "Main Site"
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the device. The value is either `online` or `offline`.",
                      "example": "offline",
                      "enum": ["online", "offline"]
                    },
                    "provision_template_id": {
                      "type": "string",
                      "description": "The provision template ID. Supported only by some devices. Empty string represents 'No value set'",
                      "example": "Ke5Ghevvoo001hr"
                    },
                    "private_ip": {
                      "type": "string",
                      "description": "The private IP of the registered device",
                      "example": "192.168.10.13"
                    },
                    "public_ip": {
                      "type": "string",
                      "description": "The public IP of the registered device",
                      "example": "220.148.231.126"
                    },
                    "policy": {
                      "type": "object",
                      "properties": {
                        "call_control": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "This field enables the call control feature to the current device. It configures the desk phone devices to enable call control, which allows users to perform desk phone's call control actions from the Zoom desktop client, including making and accepting calls. \nOptions include: \n* `unsupported` \n* `on` \n* `off`",
                              "example": "off",
                              "enum": ["unsupported", "on", "off"]
                            }
                          }
                        },
                        "hot_desking": {
                          "type": "object",
                          "properties": {
                            "status": {
                              "type": "string",
                              "description": "This field enables the hot desking feature to the current device. It lets the guest user sign in to the desk phone. You can't use the desk phone until the guest user signs out. \nOptions include:\n* `unsupported` \n* `on` \n* `off`",
                              "example": "off",
                              "enum": ["unsupported", "on", "off"]
                            }
                          }
                        }
                      },
                      "description": "The device policy."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Device does not exist in the system. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:read:admin", "phone:read:device:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:device:admin"]
        }
      },
      "delete": {
        "tags": ["Phone Devices"],
        "summary": "Delete a device",
        "description": "Remove a [desk phone device or ATA (Analog Telephone Adapter)](https://support.zoom.us/hc/en-us/articles/360021119092) from the Zoom Phone System Management.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n* Device must not have been assigned to a user.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:device:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteADevice",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Unique identifier of the device.",
            "required": true,
            "schema": { "type": "string", "example": "-tDdYIstSumpA0L13GztIQ" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nDevice deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:write:admin", "phone:delete:device:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:device:admin"]
        }
      },
      "patch": {
        "tags": ["Phone Devices"],
        "summary": "Update a device",
        "description": "Updates the information of a [desk phone device](https://support.zoom.us/hc/en-us/articles/360021119092).\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license* Account owner or admin permissions\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:device:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateADevice",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The unique identifier of the device.",
            "required": true,
            "schema": { "type": "string", "example": "-tDdYIstSumpA0L13GztIQ" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assigned_to": {
                    "type": "string",
                    "description": "The user ID or email address of the user assigned to this device. To retrieve the user ID and the email of the user, use the [List Users](https://marketplace.zoom.us/docs/api-reference/zoom-api/methods#operation/users) API.",
                    "example": "DnEopNmXQEGU2uvvzjgojw"
                  },
                  "display_name": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "The display name of the desk phone.",
                    "example": "testUser"
                  },
                  "mac_address": {
                    "pattern": "^([0-9A-Fa-f]{2}[:-]?){5}([0-9A-Fa-f]{2})$",
                    "type": "string",
                    "description": "<b>Deprecated:</b> This field will be removed in June, 2025. Please refrain from updating the MAC address.\n\nThe MAC address of the desk phone.\n \n**Note**: If you're using a wireless phone, enter the wired MAC address, not the wireless MAC address.",
                    "example": "543968a78ee7",
                    "deprecated": true
                  },
                  "provision_template_id": {
                    "type": "string",
                    "description": "The provision template ID. It's supported only by some devices. An empty string represents 'No value set'",
                    "example": "Ke5Ghevvoo001hr"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nDevice updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation failed. Device does not exist in the system. Invalid userId. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User not found: {userId}\n\nThe user extension does not exist, extensionId: {extensionId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:write:admin", "phone:update:device:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:device:admin"]
        }
      }
    },
    "/phone/devices/{deviceId}/extensions": {
      "post": {
        "tags": ["Phone Devices"],
        "summary": "Assign an entity to a device",
        "description": "By default, all Zoom Phone users can make and receive calls using the Zoom desktop and mobile applications. Additionally, if a desk phone is required, use this API to [add a desk phone and assign it to a user](https://support.zoom.us/hc/en-us/articles/360021119092#h_5ca07504-68a8-4c3d-ad0e-c1d3594436da).\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n* [Supported device](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices)\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:device_extension:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addExtensionsToADevice",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Unique identifier of the device.",
            "required": true,
            "schema": { "type": "string", "example": "Mekx3i2f0kVh" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["assignee_extension_ids"],
                "type": "object",
                "properties": {
                  "assignee_extension_ids": {
                    "type": "array",
                    "description": "Available only for the account that has enabled the common area feature. \n Extension ID of the [`user`](https://marketplace.zoom.us/docs/api-reference/phone/methods/#operation/phoneUser) or [`common area` ID](https://marketplace.zoom.us/docs/api-reference/phone/methods/#operation/listCommonAreas).",
                    "items": {
                      "type": "string",
                      "example": "dsH7FaYRHy9gV4Qb8ecku"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \nAssignees assigned successfully. ",
            "content": { "application/json": { "schema": {} } }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser extension ID or common area extension ID not found.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:device_extension:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:device_extension:admin"]
        }
      }
    },
    "/phone/devices/{deviceId}/extensions/{extensionId}": {
      "delete": {
        "tags": ["Phone Devices"],
        "summary": "Unassign an entity from the device",
        "description": "Use this API to unassign a specific assignee from the device.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions. \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:device_extension:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteExtensionFromADevice",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Unique identifier of the device from which to unassign an assignee.",
            "required": true,
            "schema": { "type": "string", "example": "Mekx3i2f0kVh" }
          },
          {
            "name": "extensionId",
            "in": "path",
            "description": "Extension ID of the assignee (`user` or `common area`)",
            "required": true,
            "schema": { "type": "string", "example": "Pre4voa9HH" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \n\nAssignee unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:device_extension:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:device_extension:admin"]
        }
      }
    },
    "/phone/devices/{deviceId}/provision_templates": {
      "put": {
        "tags": ["Phone Devices"],
        "summary": "Update provision template of a device",
        "description": "Use this API to [assign a provision template to a device](https://support.zoom.us/hc/en-us/articles/360035817952#h_6b52ef26-d070-40ed-a3fa-520571944afc) or [remove a provision template from the device](https://support.zoom.us/hc/en-us/articles/360035817952#h_7b34cd1d-5ae6-4a23-bd04-454a6ad8cb3e) by leaving `templateId` empty.\n\n**Prerequisites:**  \n \n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n* [Supported device](https://support.zoom.us/hc/en-us/articles/360029698771#note)  \n \n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:device_provision_template:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateProvisionTemplateToDevice",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "The device ID.",
            "required": true,
            "schema": { "type": "string", "example": "Mekx3i2f0kVh" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "provision_template_id": {
                    "type": "string",
                    "description": "The provision template ID. The provision template will be removed when this field is left empty.",
                    "example": "AbSORcqsSnqqrMD3jmZ8yw"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nProvision template updated successfully. "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n**Error Code:** `404` <br>\nProvision template does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:device_provision_template:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:device_provision_template:admin"]
        }
      }
    },
    "/phone/devices/{deviceId}/reboot": {
      "post": {
        "tags": ["Phone Devices"],
        "summary": "Reboot a desk phone",
        "description": "Use this API to reboot an online zero-touch or assisted-provisioning device. You can only send one request every second.\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions. \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:reboot_device:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Heavy`",
        "operationId": "rebootPhoneDevice",
        "parameters": [
          {
            "name": "deviceId",
            "in": "path",
            "description": "Unique identifier of the device.",
            "required": true,
            "schema": { "type": "string", "example": "-tDdYIstSumpA0L13GztIQ" }
          }
        ],
        "responses": {
          "202": {
            "description": "**HTTP Status Code:** `202` **Accepted**  \n \nDevice reboot command issued."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nThe given device type does not support this action<br>\n*The given device is offline<br>\nOperation is too frequent. Please try again in a few minutes.<br><br>\n\n**Error Code:** `404` <br>\nDevice does not exist: {accountId}.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:reboot_device:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:reboot_device:admin"]
        }
      }
    },
    "/phone/byoc_numbers": {
      "post": {
        "tags": ["Phone Numbers"],
        "summary": "Add BYOC phone numbers",
        "description": "Use this API to add BYOC (Bring Your Own Carrier) phone numbers to Zoom Phone.\n\n**Prerequisites:** \n* A Business or Enterprise plan \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:byo_carrier_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addBYOCNumber",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["carrier", "phone_numbers"],
                "type": "object",
                "properties": {
                  "carrier": {
                    "type": "string",
                    "description": "Name of the carrier.",
                    "example": "Bandwidth"
                  },
                  "phone_numbers": {
                    "type": "array",
                    "description": "Phone number(s) to be added to Zoom. The value should be in e164 format.",
                    "items": { "type": "string", "example": "+8618251885564" }
                  },
                  "sip_group_id": {
                    "type": "string",
                    "description": "Sip group id.",
                    "example": "GgyGPoRESCKAD8JpGXjJ8w"
                  },
                  "site_id": {
                    "type": "string",
                    "description": "Unique identifier of the site. This field is only required if you have enabled multiple sites in the account. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) or [Adding a site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15) for details.",
                    "example": "8f71O6rWT8KFUGQmJIFAdQ"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phone_numbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the phone number.",
                            "example": "LzPlp8GwR6iytydAq2luIg"
                          },
                          "number": {
                            "type": "string",
                            "description": "Phone number in e164 format.",
                            "example": "8618251885565"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized\n\n**Error Code:** `124` <br>\nAccount does not exist: {accountId}.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:byo_carrier_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:byo_carrier_number:admin"]
        }
      }
    },
    "/phone/numbers": {
      "get": {
        "tags": ["Phone Numbers"],
        "summary": "List phone numbers",
        "description": "Returns a list all Zoom Phone numbers in a Zoom account.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_numbers:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listAccountPhoneNumbers",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "type",
            "in": "query",
            "description": "The query response by number assignment. The value can be one of the following:\n  \n \n`assigned`: The number has been assigned to either a user, a call queue, an auto-receptionist, or a common area in an account.   \n `unassigned`: The number is not assigned to anyone.  \n \n`all`: Include both assigned and unassigned numbers in the response.  \n \n`byoc`: Include Bring Your Own Carrier (BYOC) numbers only in the response.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "all",
              "enum": ["assigned", "unassigned", "byoc", "all"]
            }
          },
          {
            "name": "extension_type",
            "in": "query",
            "description": "The type of assignee to whom the number is assigned. The parameter can be set only if `type` parameter is set as `assigned`. The value can be one of the following:  \n \n`user`  \n  `callQueue`  \n  `autoReceptionist`  \n `commonArea`  \n `emergencyNumberPool`  \n `companyLocation`  \n `meetingService`",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user",
              "enum": [
                "user",
                "callQueue",
                "autoReceptionist",
                "commonArea",
                "emergencyNumberPool",
                "companyLocation",
                "meetingService"
              ]
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "number_type",
            "in": "query",
            "description": "The type of phone number. The value can be either `toll` or `tollfree`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "toll",
              "enum": ["toll", "tollfree"]
            }
          },
          {
            "name": "pending_numbers",
            "in": "query",
            "description": "This field includes or excludes pending numbers in the response. The value can be either `true` or `false`.",
            "required": false,
            "schema": { "type": "boolean", "example": false }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The unique identifier of the site. Use this query parameter if you have enabled multiple sites and would like to filter the response of this API call by a specific phone site. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) or [Adding a site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15) for details.",
            "required": false,
            "schema": { "type": "string", "example": "8f71O6rWT8KFUGQmJIFAdQ" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nPhone numbers listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.)",
                      "example": "bkOcmnm6mn6ioYAi10BcgRiEL38WzAo6jP2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30
                    },
                    "phone_numbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assignee": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "integer",
                                "description": "The extension number of the phone.",
                                "format": "int64",
                                "example": 1000001101
                              },
                              "id": {
                                "type": "string",
                                "description": "The unique identifier of the user to whom the number has been assigned.",
                                "example": "Y40mS72DRamFgGh0V1Ul_Q"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the user to whom the number has been assigned.",
                                "example": "User Name"
                              },
                              "type": {
                                "type": "string",
                                "description": "This field indicates to whom the phone number belongs.  \n \n`user`: Number has been assigned to an existing phone user that allows them to receive calls through their extension number or direct phone number.  \n  `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).  \n `autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).  \n `commonArea`: Phone number has been assigned to a [common area](https://support.zoom.us/hc/en-us/articles/4481136653709-May-2022-New-Common-Area-Experience).  \n  `emergencyNumberPool` `companyLocation` `meetingService`",
                                "example": "user",
                                "enum": [
                                  "user",
                                  "callQueue",
                                  "autoReceptionist",
                                  "commonArea",
                                  "emergencyNumberPool",
                                  "companyLocation",
                                  "meetingService"
                                ]
                              }
                            }
                          },
                          "capability": {
                            "type": "array",
                            "description": "The capability for the phone number, whether it can take incoming calls, make outgoing calls, or both. Values include `incoming`, `outgoing`, or both values.",
                            "items": { "type": "string", "example": "incoming" }
                          },
                          "carrier": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "integer",
                                "description": "The carrier code.",
                                "example": 1
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the carrier to which the phone number is assigned.",
                                "example": "Bandwidth"
                              }
                            },
                            "description": "This field displays when the `type` request parameter is `byoc`."
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The display name for the phone number.",
                            "example": "abc"
                          },
                          "emergency_address": {
                            "type": "object",
                            "properties": {
                              "address_line1": {
                                "type": "string",
                                "description": "The address Line 1 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that consists of the house number and street name.",
                                "example": "55 ALMADEN BLVD"
                              },
                              "address_line2": {
                                "type": "string",
                                "description": "Address Line 2 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that consists of building number, floor number, unit and so on.",
                                "example": "test 7"
                              },
                              "city": {
                                "type": "string",
                                "description": "The city of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                                "example": "SAN JOSE"
                              },
                              "country": {
                                "maxLength": 2,
                                "minLength": 2,
                                "type": "string",
                                "description": "The two-lettered country code (Aplha-2 code in ISO-3166 format) standard of the site's [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                                "example": "US"
                              },
                              "state_code": {
                                "type": "string",
                                "description": "The state code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                                "example": "CA"
                              },
                              "zip": {
                                "type": "string",
                                "description": "The zip code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                                "example": "95113"
                              }
                            },
                            "description": "This field displays when the `type` request parameter is `byoc`."
                          },
                          "emergency_address_status": {
                            "type": "integer",
                            "description": "This field displays when the `type` request parameter is `byoc`. The emergency address status: `1`-carrier update required, `2`-confirmed",
                            "example": 1,
                            "enum": [1, 2]
                          },
                          "emergency_address_update_time": {
                            "type": "string",
                            "description": "This field displays when the `type` request parameter is `byoc`. The time of emergency address information update (format: 'yyyy-MM-ddThh:dd:ssZ').",
                            "example": "2022-02-18T07:20:19Z"
                          },
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the phone number.",
                            "example": "aMy7P9DMS9iNRkpwXNfRbw"
                          },
                          "location": {
                            "type": "string",
                            "description": "The location (city, state and country) where the phone number is assigned.",
                            "example": "United States"
                          },
                          "number": {
                            "type": "string",
                            "description": "The phone number in E164 format.",
                            "example": "+12008001005"
                          },
                          "number_type": {
                            "type": "string",
                            "description": "The type of number. Values can be one of the following:  \n \n`toll`, `tollfree`",
                            "example": "toll",
                            "enum": ["toll", "tollfree"]
                          },
                          "sip_group": {
                            "type": "object",
                            "properties": {
                              "display_name": {
                                "type": "string",
                                "description": "The name of the SIP group.",
                                "example": "RRRR"
                              },
                              "id": {
                                "type": "string",
                                "description": "The ID of the SIP group. See the **Creating SIP groups** section in [Creating a shared directory of external contacts](https://support.zoom.us/hc/en-us/articles/360037050092-Creating-a-shared-directory-of-external-contacts) for details.",
                                "example": "8MhK7ea4Q4ihIQ4TD_g0kw"
                              }
                            },
                            "description": "This field displays when the `type` request parameter is `byoc`."
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) in which the phone number was assigned. Sites allow you to organize the phone users in your organization. For example, you sites could be created based on different office locations.",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the site where the phone number is assigned.",
                                "example": "Main Site"
                              }
                            }
                          },
                          "source": {
                            "type": "string",
                            "description": "The source of the phone number.",
                            "example": "external",
                            "enum": ["internal", "external"]
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the number.",
                            "example": "available",
                            "enum": ["pending", "available"]
                          }
                        }
                      }
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 50
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_numbers:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_numbers:admin"]
        }
      },
      "delete": {
        "tags": ["Phone Numbers"],
        "summary": "Delete unassigned phone numbers",
        "description": "Deletes unassigned [phone numbers](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers#h_38ba8b01-26e3-4b1b-a9b5-0717c00a7ca6). Up to 20 phone numbers can be removed in a single request.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license \n* The user must have been previously assigned a Zoom Phone number\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "deleteUnassignedPhoneNumbers",
        "parameters": [
          {
            "name": "phone_numbers",
            "in": "query",
            "description": "Comma seperated list of unassigned phone numbers in E164 format or phone number IDs.",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "type": "string", "example": "8_RkKw9OQ42oYsXqJJjs4A" }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`\nThe Phone numbers successfully removed."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:write:admin", "phone:delete:number:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:number:admin"]
        }
      }
    },
    "/phone/numbers/sites/{siteId}": {
      "patch": {
        "tags": ["Phone Numbers"],
        "summary": "Update a site's unassigned phone numbers",
        "description": "Updates a site's unassigned [phone numbers](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers#h_38ba8b01-26e3-4b1b-a9b5-0717c00a7ca6). Up to 20 phone numbers can be updated in a single request. \n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:site_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "updateSiteForUnassignedPhoneNumbers",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "Unique identifier of the site",
            "required": true,
            "schema": { "type": "string", "example": "8f71O6rWT8KFUGQmJIFAdQ" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone_numbers": {
                    "maxItems": 20,
                    "type": "array",
                    "description": "The phone number ID or a phone number in E164 format.",
                    "items": {
                      "type": "string",
                      "example": "8_RkKw9OQ42oYsXqJJjs4A"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\n\nSite successfully updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:site_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:site_number:admin"]
        }
      }
    },
    "/phone/numbers/{phoneNumberId}": {
      "get": {
        "tags": ["Phone Numbers"],
        "summary": "Get a phone number",
        "description": "Returns information about an account's Zoom Phone number.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:numbers:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getPhoneNumberDetails",
        "parameters": [
          {
            "name": "phoneNumberId",
            "in": "path",
            "description": "The unique identifier of the phone number retrieved from the List phone numbers API.",
            "required": true,
            "schema": { "type": "string", "example": "iHE1MQAET2iV85MbfaQmwg" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nPhone number details retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "assignee": {
                      "type": "object",
                      "properties": {
                        "audio_prompt_language": {
                          "type": "string",
                          "example": "en-GB"
                        },
                        "display_number": {
                          "type": "string",
                          "description": "This field indicates the meeting service, defines the format, and displays the number in meeting invitations and emails.",
                          "example": "display_name_123"
                        },
                        "extension_number": {
                          "type": "integer",
                          "description": "The extension number of the phone.",
                          "format": "int64",
                          "example": 1000001101
                        },
                        "greeting": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The audio prompt file ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in the [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                              "example": "4CRwFZtVTa67JcfO37iQqA"
                            },
                            "name": {
                              "type": "string",
                              "description": "The audio prompt file name.",
                              "example": "TestName"
                            }
                          },
                          "description": "This field indicates the meeting service. You can only upload one audio file. The accepted format is .wav (also 8k, mono, ULAW or ALAW). If no audio file uploads, Zoom uses the &quot;Telephone welcome message&quot; setting in account settings."
                        },
                        "id": {
                          "type": "string",
                          "description": "The ID of the user. The following are assigned: emergency number pool (if the account has multiple sites enabled, the ID is `siteId`, else `accountId`), and company location. ",
                          "example": "rYgfsrduSXWCxr94poMN5g"
                        },
                        "label": {
                          "type": "string",
                          "description": "Optional. This field indicates the meeting service. This label will be appended to the number in parentheses, and will appear in meeting invitations and the zoom client. Formatting rules:\nMaximum 32 characters\nDo not use digits\nDo not use characters &quot;(&quot; &quot;)&quot; &quot;,&quot; &quot;;&quot; or &quot;:&quot;",
                          "example": "abcd"
                        },
                        "meeting_id": {
                          "type": "string",
                          "description": "The meeting ID for the meeting service.",
                          "example": "abcd"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the user to whom the number, emergency number pool, and company location are assigned.",
                          "example": "Test name"
                        },
                        "on_hold_music": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The audio prompt file ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can use this audio ID to get the audio information in the [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                              "example": "4CRwFZtVTa67JcfO37iQqA"
                            },
                            "name": {
                              "type": "string",
                              "description": "The audio prompt file name.",
                              "example": "Audio1"
                            }
                          },
                          "description": "This field indicates the meeting service. You can only upload one audio file. The accepted format is .wav (also 8k, mono, ULAW or ALAW). If no audio file uploads, Zoom uses the &quot;Telephone on-hold music&quot; setting in account settings."
                        },
                        "type": {
                          "type": "string",
                          "description": "This field indicates to whom the phone number belongs.  \n \n`user`: Number has been assigned to an existing phone user and allows them to receive calls through their extension number or direct phone number.  \n  `callQueue`: Phone number has been assigned to a [call queue](https://support.zoom.us/hc/en-us/articles/360021524831-Managing-Call-Queues).  \n \n`autoReceptionist`: Phone number has been assigned to an [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-).  \n \n`commonArea`: Phone number has been assigned to a common area(https://support.zoom.us/hc/en-us/articles/4481136653709-May-2022-New-Common-Area-Experience).  \n  `emergencyNumberPool` `companyLocation` `meetingService`",
                          "example": "user",
                          "enum": [
                            "user",
                            "callQueue",
                            "autoReceptionist",
                            "commonArea",
                            "emergencyNumberPool",
                            "companyLocation",
                            "meetingService"
                          ]
                        }
                      }
                    },
                    "capability": {
                      "type": "array",
                      "description": "The capability of the phone number to receive incoming calls, make outgoing calls, or both. \n\nValues are `incoming`, `outgoing`, or both values.",
                      "items": { "type": "string", "example": "incoming" }
                    },
                    "carrier": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "integer",
                          "description": "The  carrier code.",
                          "example": 2
                        },
                        "name": {
                          "type": "string",
                          "description": "The carrier name.",
                          "example": "Inteliquent"
                        }
                      }
                    },
                    "display_name": {
                      "type": "string",
                      "description": "The display name of the phone number.",
                      "example": "Display name"
                    },
                    "emergency_address": {
                      "type": "object",
                      "properties": {
                        "address_line1": {
                          "type": "string",
                          "description": "The address Line 1 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that consists of the house number and street name.",
                          "example": "55 ALMADEN BLVD"
                        },
                        "address_line2": {
                          "type": "string",
                          "description": "The address Line 2 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that consists of the building number, floor number, unit, and so on.",
                          "example": "test 7"
                        },
                        "city": {
                          "type": "string",
                          "description": "The city of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "example": "SAN JOSE"
                        },
                        "country": {
                          "maxLength": 2,
                          "minLength": 2,
                          "type": "string",
                          "description": "The two-lettered country code (Alpha-2 code in ISO-3166 format) standard of the site's [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "example": "US"
                        },
                        "state_code": {
                          "type": "string",
                          "description": "The state code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "example": "CA"
                        },
                        "zip": {
                          "type": "string",
                          "description": "The zip Code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "example": "95113"
                        }
                      },
                      "description": "This field displays when the number is a `byoc` number. "
                    },
                    "emergency_address_status": {
                      "type": "integer",
                      "description": "This field displays when the number is a `byoc` number. \n\nThe emergency address status: 1-carrier update required, 2-confirmed",
                      "example": 1,
                      "enum": [1, 2]
                    },
                    "emergency_address_update_time": {
                      "type": "string",
                      "description": "Thia fieild displays when the number is a `byoc` number. \n\nThe emergency address information update time(format: 'yyyy-MM-ddThh:dd:ssZ').",
                      "example": "2022-02-18T07:20:19Z"
                    },
                    "id": {
                      "type": "string",
                      "description": "The unique identifier of the phone number.",
                      "example": "iHE1MQAET2iV85MbfaQmwg"
                    },
                    "location": {
                      "type": "string",
                      "description": "The assigned location (city, state and country) of the phone number.",
                      "example": "Mz83e03MT1efcUvxdKlq3w"
                    },
                    "number": {
                      "type": "string",
                      "description": "The phone number in E164 format.",
                      "example": "+18886510412"
                    },
                    "number_type": {
                      "type": "string",
                      "description": "The type of number. \n\nThe values can be one of the following:  \n \n`toll`, `tollfree`",
                      "example": "toll",
                      "enum": ["toll", "tollfree"]
                    },
                    "sip_group": {
                      "type": "object",
                      "properties": {
                        "display_name": {
                          "type": "string",
                          "description": "The SIP group display name.",
                          "example": "RRRR"
                        },
                        "id": {
                          "type": "string",
                          "description": "The SIP group ID.",
                          "example": "8MhK7ea4Q4ihIQ4TD_g0kw"
                        }
                      }
                    },
                    "site": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The target [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) assigned to the phone number. \n\nSites allow you to organize phone users in your organization. For example, your sites could be created based on different office locations.",
                          "example": "8f71O6rWT8KFUGQmJIFAdQ"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the site where the phone number is assigned.",
                          "example": "Main Site"
                        }
                      }
                    },
                    "source": {
                      "type": "string",
                      "description": "The source of phone number.",
                      "example": "external",
                      "enum": ["internal", "external"]
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the number.",
                      "example": "available",
                      "enum": ["pending", "available"]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `400` <br>\n Phone number does not exist, phonenumberId:{phoneNumberId} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:read:admin", "phone:read:numbers:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:numbers:admin"]
        }
      },
      "patch": {
        "tags": ["Phone Numbers"],
        "summary": "Update a phone number",
        "description": "Updates a Zoom Phone number's information.\n\n**Prerequisites:** \n* A Paid account\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updatePhoneNumberDetails",
        "parameters": [
          {
            "name": "phoneNumberId",
            "in": "path",
            "description": "The unique identifier of the phone number.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "capability": {
                    "type": "array",
                    "description": "THe phone number's capability. Values: `outgoing` or `incoming`. Add one or both.",
                    "items": { "type": "string", "example": "incoming" }
                  },
                  "display_name": {
                    "type": "string",
                    "description": "The phone number display name.",
                    "example": "Display Name"
                  },
                  "emergency_address_status": {
                    "type": "integer",
                    "description": "This field confirms BYOC phone number's emergency address status. 2-confirmed",
                    "example": 1
                  },
                  "sip_group_id": {
                    "type": "string",
                    "description": "The SIP group ID, only used for BYOC phone number update.",
                    "example": "8MhK7ea4Q4ihIQ4TD_g0kw"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n The value of capability is invalid. Provide a valid capability and try again.\nYou cannot update it to a non-BYOC trunk group, because some BYOC numbers are using the SIP Group.\nThe phone number is not in binding.\nThe phone number is not BYOC phone number. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:write:admin", "phone:update:number:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:number:admin"]
        }
      }
    },
    "/phone/users/{userId}/phone_numbers": {
      "post": {
        "tags": ["Phone Numbers"],
        "summary": "Assign a phone number to a user",
        "description": "Assigns a [phone number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers) to a user who has already enabled Zoom Phone.**Prerequisites:** * A Business or Enterprise account * A Zoom Phone license\n\n**Scopes:** `phone:write`,`phone:write:admin`\n\n**Granular Scopes:** `phone:write:user_number`,`phone:write:user_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "assignPhoneNumber",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "IqoQmDRqS-aIoXqV_FZ88w" }
          }
        ],
        "requestBody": {
          "description": "Provide either the ID or phone number in the request body.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone_numbers": {
                    "maxItems": 10,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID for phone number",
                          "example": "iHE1MQAET2iV85MbfaQmwg"
                        },
                        "number": {
                          "type": "string",
                          "description": "Phone number in E164 format.",
                          "example": "+18887193005"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nPhone number assigned successfully. \n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phone_numbers": {
                      "maxItems": 10,
                      "type": "array",
                      "description": "Assigned phone number",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID of the phone number",
                            "example": "iHE1MQAET2iV85MbfaQmwg"
                          },
                          "number": {
                            "type": "string",
                            "description": "The phone number that is assigned to the user.",
                            "example": "+18887193005"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n This user does not exist: {userId}. <br>\n**Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write",
              "phone:write:admin",
              "phone:write:user_number",
              "phone:write:user_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write", "phone:write:admin"],
          "x-granular-scopes": [
            "phone:write:user_number",
            "phone:write:user_number:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "tags": ["Phone Numbers"],
        "summary": "Unassign a phone number",
        "description": "Unassigns Zoom Phone user's [phone number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers#h_38ba8b01-26e3-4b1b-a9b5-0717c00a7ca6).\n\nAfter assigning a phone number, you can remove it if you do not want it to be assigned to anyone.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license \n* The user must have been previously assigned a Zoom Phone number\n\n**Scopes:** `phone:write`,`phone:write:admin`\n\n**Granular Scopes:** `phone:delete:user_number`,`phone:delete:user_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UnassignPhoneNumber",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "This field provides either the user ID or email address of the user.",
            "required": true,
            "schema": { "type": "string", "example": "IqoQmDRqS-aIoXqV_FZ88w" }
          },
          {
            "name": "phoneNumberId",
            "in": "path",
            "description": "This field provides either the phone number or phone number ID of the user. ",
            "required": true,
            "schema": { "type": "string", "example": "iHE1MQAET2iV85MbfaQmwg" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`\nThe phone number has been unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist. <br>\n**Error Code:** `2001` <br>\n Account does not exist. <br>\n**Error Code:** `400` <br>\n Invalid query parameter \"phone_number\". <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write",
              "phone:write:admin",
              "phone:delete:user_number",
              "phone:delete:user_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write", "phone:write:admin"],
          "x-granular-scopes": [
            "phone:delete:user_number",
            "phone:delete:user_number:admin"
          ]
        }
      }
    },
    "/phone/calling_plans": {
      "get": {
        "tags": ["Phone Plans"],
        "summary": "List calling plans",
        "description": "Returns all of an account's Zoom Phone [calling plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).\n\n**Prerequisites:** \n* A Pro or a higher account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_calling_plans:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listCallingPlans",
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nCalling plans listed successfully.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "calling_plans": {
                      "maxItems": 200,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assigned": {
                            "type": "integer",
                            "description": "The total number of plan used.",
                            "example": 28
                          },
                          "available": {
                            "type": "integer",
                            "description": "The remaining number of calling plans that can be assigned.",
                            "example": 72
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the plan.",
                            "example": "US/CA Metered Calling Plan"
                          },
                          "subscribed": {
                            "type": "integer",
                            "description": "The total number of plan subscriptions bought.",
                            "example": 100
                          },
                          "type": {
                            "type": "integer",
                            "description": "The type of plan. Refer to the Plan Number section [here](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).",
                            "example": 100
                          },
                          "billing_account_id": {
                            "type": "string",
                            "description": "The billing account ID. It displays when the account is an Indian account.",
                            "example": "3WWAEiEjTj2IQuyDiKMd_A"
                          },
                          "billing_account_name": {
                            "type": "string",
                            "description": "The billing account name. It displays when the account is an Indian account.",
                            "example": "Delhi billing"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_calling_plans:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_calling_plans:admin"]
        }
      }
    },
    "/phone/plans": {
      "get": {
        "tags": ["Phone Plans"],
        "summary": "List plan information",
        "description": "Use this API to return all of an account's Zoom Phone [plan package](https://marketplace.zoom.us/docs/api-reference/other-references/plans#additional-zoom-phone-plans-and-codes), phone number usage and availability.\n\n**Prerequisites:** \n* A Pro or a higher account \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_calling_plans:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listPhonePlans",
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nPhone plans listed successfully.\n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "calling_plans": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assigned": {
                            "type": "integer",
                            "description": "Total number of plans used.",
                            "example": 28
                          },
                          "available": {
                            "type": "integer",
                            "description": "Remaining number of calling plans that can be assigned.",
                            "example": 72
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the plan.",
                            "example": "US/CA Metered Calling Plan"
                          },
                          "subscribed": {
                            "type": "integer",
                            "description": "Total number of plan subscriptions bought.",
                            "example": 100
                          },
                          "type": {
                            "type": "integer",
                            "description": "Plan type. Refer to the phone plan code in the [Zoom Phone calling plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).",
                            "example": 100
                          }
                        }
                      }
                    },
                    "phone_numbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assigned": {
                            "type": "integer",
                            "description": "Total number of phone number plans used.",
                            "example": 28
                          },
                          "available": {
                            "type": "integer",
                            "description": "Remaining number of phone number plans that can be assigned.",
                            "example": 72
                          },
                          "name": {
                            "type": "string",
                            "description": "Name of the phone number plan.",
                            "example": "US/CA Included Phone Numbers"
                          },
                          "subscribed": {
                            "type": "integer",
                            "description": "Total number of phone number plan subscriptions bought.",
                            "example": 100
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_calling_plans:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_calling_plans:admin"]
        }
      }
    },
    "/phone/roles": {
      "get": {
        "tags": ["Phone Roles"],
        "summary": "List phone roles",
        "description": "Returns the phone roles.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_roles:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "ListPhoneRoles",
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nSuccessfully listed phone roles.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "roles": {
                      "maxItems": 250,
                      "type": "array",
                      "description": "The phone role list.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the [role](https://support.zoom.us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.",
                            "example": "MRNStlOVS02fJ6pOAzrh0A"
                          },
                          "name": {
                            "type": "string",
                            "description": "The user's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) name.",
                            "example": "Phone Super Admin"
                          },
                          "description": {
                            "type": "string",
                            "description": "The role description.",
                            "example": "Admin has full privileges to access and manage the Zoom Phone (default)."
                          },
                          "total_members": {
                            "type": "integer",
                            "description": "The total members assigned to the role.",
                            "example": 1
                          },
                          "is_default": {
                            "type": "boolean",
                            "description": "Whether the role is default or not.",
                            "example": true
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `401` <br>\n Invalid access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_roles:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_roles:admin"]
        }
      },
      "post": {
        "tags": ["Phone Roles"],
        "summary": "Duplicate a phone role",
        "description": "Use this API to duplicate a phone role.\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:role:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "DuplicatePhoneRole",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["role_id"],
                "type": "object",
                "properties": {
                  "role_id": {
                    "type": "string",
                    "description": "Unique identifier of the source [role](https://support.zoom.us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.",
                    "example": "MRNStlOVS02fJ6pOAzrh0B"
                  },
                  "name": {
                    "type": "string",
                    "description": "User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) name.",
                    "example": "Phone Super Admin"
                  },
                  "description": {
                    "type": "string",
                    "description": "Role description.",
                    "example": "Admin has full privileges to access and manage the Zoom Phone (default)."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**\n\n\nSuccessfully duplicated a phone role.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Unique identifier of the newly duplicated [role](https://support.zoom.us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.",
                      "example": "MRNStlOVS02fJ6pOAzrh0A"
                    },
                    "name": {
                      "type": "string",
                      "description": "User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) name.",
                      "example": "Compliance Admin (Copy)"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:write:admin", "phone:write:role:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:role:admin"]
        }
      }
    },
    "/phone/roles/{roleId}": {
      "get": {
        "tags": ["Phone Roles"],
        "summary": "Get role information",
        "description": "Use this API to get information on a phone [role](https://support.zoom.us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management).\n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:role:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "getRoleInformation",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "The role ID.",
            "required": true,
            "schema": { "type": "string", "example": "cw2r21Vh21" }
          }
        ],
        "responses": {
          "200": {
            "description": "**Status Code:** `200`  \n \nInformation about a specific role returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "Description of the role.",
                      "example": "Admin has full privileges to access and manage the Zoom Phone (default)."
                    },
                    "id": {
                      "type": "string",
                      "description": "The role ID.",
                      "example": "MRNStlOVS02fJ6pOAzrh0A"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the role.",
                      "example": "Phone Super Admin"
                    },
                    "total_members": {
                      "type": "integer",
                      "description": "Total members assigned to that role.",
                      "example": 1
                    },
                    "is_default": {
                      "type": "boolean",
                      "description": "Indicates whether it is a default role.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:read:admin", "phone:read:role:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:role:admin"]
        }
      },
      "delete": {
        "tags": ["Phone Roles"],
        "summary": "Delete a phone role",
        "description": "Use this API to delete a phone [role](https://support.zoom.us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management).\n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:role:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "DeletePhoneRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "Unique identifier of the [role](https://support.zoom.us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.",
            "required": true,
            "schema": { "type": "string", "example": "MRNStlOVS02fJ6pOAzrh0A" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\n\nSuccessfully deleted a phone role."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:write:admin", "phone:delete:role:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:role:admin"]
        }
      },
      "patch": {
        "tags": ["Phone Roles"],
        "summary": "Update a phone role",
        "description": "Use this API to update a role.\n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:role:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "UpdatePhoneRole",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "Unique identifier of the [role](https://support.zoom.us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.",
            "required": true,
            "schema": { "type": "string", "example": "MRNStlOVS02fJ6pOAzrh0A" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's [role](https://support.zoom.us/hc/en-us/articles/115001078646-Role-Based-Access-Control) name. Name length can be up to 128 characters",
                    "example": "Phone Super Admin"
                  },
                  "description": {
                    "type": "string",
                    "description": "Role description. Description length can be up to 255 characters",
                    "example": "Admin has full privileges to access and manage the Zoom Phone (default)."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nSuccessfully updated a role."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:write:admin", "phone:update:role:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:role:admin"]
        }
      }
    },
    "/phone/roles/{roleId}/members": {
      "get": {
        "tags": ["Phone Roles"],
        "summary": "List members in a role",
        "description": "Use this API to get members (not) in a [role](https://support.zoom.us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management).\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:role_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "ListRoleMembers",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "Unique identifier of the [role](https://support.zoom.us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.",
            "required": true,
            "schema": { "type": "string", "example": "MRNStlOVS02fJ6pOAzrh0A" }
          },
          {
            "name": "in_role",
            "in": "query",
            "description": "Whether the user belongs to the role: default is `false`.",
            "required": false,
            "schema": { "type": "boolean", "example": false, "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nSuccessfully listed members (not) in the role.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "members": {
                      "type": "array",
                      "description": "Member list.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "user_id": {
                            "type": "string",
                            "description": "The user ID.",
                            "example": "1PXbl7s6Q52nbePrUxUZTg"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "Display name.",
                            "example": "ZOOM_API Test"
                          },
                          "email": {
                            "type": "string",
                            "description": "Email.",
                            "example": "2020042400000003@qq.com"
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "Extension number.",
                            "format": "int64",
                            "example": 1000123460
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the site.",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "Site name.",
                                "example": "Main Site"
                              }
                            },
                            "description": "Site."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `2001` <br>\nAccount does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:role_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:role_member:admin"]
        }
      },
      "post": {
        "tags": ["Phone Roles"],
        "summary": "Add members to roles",
        "description": "Use this API to add members to [roles](https://support.zoom.us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management#h_01EFHY1R4QWAYTA6Z661NM9Q27).\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:role_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "AddRoleMembers",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "Unique identifier of the [role](https://support.zoom.us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.",
            "required": true,
            "schema": { "type": "string", "example": "MRNStlOVS02fJ6pOAzrh0A" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "role_id": {
                    "type": "string",
                    "description": "Unique identifier of the existing [role](https://support.zoom.us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user: used when copying members' role.",
                    "example": "Ft0H7NYlSX6EeO-rwaZW-Q"
                  },
                  "copy_targets": {
                    "type": "boolean",
                    "description": "Whether to copy the target: used when copying members' role.",
                    "example": true,
                    "default": false
                  },
                  "copy_all_members": {
                    "type": "boolean",
                    "description": "Whether to copy all members with the role: used when copying members' role.",
                    "example": true,
                    "default": false
                  },
                  "user_ids": {
                    "type": "array",
                    "description": "The user IDs or email addresses of the user",
                    "items": {
                      "type": "string",
                      "example": "1PXbl7s6Q52nbePrUxUZTg"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **No Content**\n\n\nSuccessfully added members to a role."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n**Error Code:** `400` <br>\nThere are invalid emails:{0}\n\nThere are invalid user ids:{0}\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:role_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:role_member:admin"]
        }
      },
      "delete": {
        "tags": ["Phone Roles"],
        "summary": "Delete members in a role",
        "description": "Use this API to delete member(s) in a [role](https://support.zoom.us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management).\n\n**Prerequisites:**\n* Business or Education account\n* Zoom Phone license \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:role_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "DelRoleMembers",
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "Unique identifier of the [role](https://support.zoom.us/hc/en-us/articles/360042099012-Using-Zoom-Phone-role-management) assigned to the user.",
            "required": true,
            "schema": { "type": "string", "example": "MRNStlOVS02fJ6pOAzrh0A" }
          },
          {
            "name": "user_ids",
            "in": "query",
            "description": "The user IDs or email addresses of the user",
            "required": true,
            "schema": {
              "type": "array",
              "items": { "type": "string", "example": "tw9GZQNlQVW9vGq8sm0n_Q" }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\n\nSuccessfully deleted members in a role."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nThere are invalid emails:{0}\n\nThere are invalid user ids:{0}\n\n**Error Code:** `300` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:role_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:role_member:admin"]
        }
      }
    },
    "/phone/private_directory/members": {
      "get": {
        "tags": ["Private Directory"],
        "summary": "List private directory members",
        "description": "Returns the member list of a [private directory](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0063992).\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_private_directory_members:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listPrivateDirectoryMembers",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "ICF5K4lVmGG4kyIyGxSfBU2LH4QQG95cn32"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "minimum": 1,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The partial string of the private directory's member number. It only supports suffix fuzzy matching for the extension number.",
            "required": false,
            "schema": { "type": "string", "example": "800" }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) that you would like to use for the private directory. This field is required only if the multiple sites option has been enabled for the account.",
            "required": false,
            "schema": { "type": "string", "example": "vkBoHKaRTxeBiTLRsdEwTQ" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` \n\nPrivate direcotry member list returned. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through large set of results.",
                      "example": "ICF5K4lVmGG4kyIyGxSfBU2LH4QQG95cn32"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records available across all pages.",
                      "example": 1
                    },
                    "private_directory_members": {
                      "type": "array",
                      "items": {
                        "required": [
                          "extension_display_name",
                          "extension_id",
                          "extension_number",
                          "extension_type",
                          "searchable_on_web_portal"
                        ],
                        "type": "object",
                        "properties": {
                          "extension_id": {
                            "type": "string",
                            "description": "The member's extension ID.",
                            "example": "JpjPXizWTz-l35tFRUK3Gg"
                          },
                          "extension_type": {
                            "type": "string",
                            "description": "The member extension's type. The valid value is:\n* user\n* zoom_room\n* common_area\n* auto_receptionist\n* call_queue\n* shared_line_group",
                            "example": "user",
                            "enum": [
                              "user",
                              "zoom_room",
                              "common_area",
                              "auto_receptionist",
                              "call_queue",
                              "shared_line_group"
                            ]
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "The member's extension number.",
                            "example": 800
                          },
                          "extension_display_name": {
                            "type": "string",
                            "description": "The member's display name.",
                            "example": "sample extension"
                          },
                          "extension_email": {
                            "type": "string",
                            "description": "The member's email address, this field should be returned when \"extension_type\" is user.",
                            "example": "sample@zooom.us"
                          },
                          "searchable_on_web_portal": {
                            "type": "string",
                            "description": "The value indicates who is allowed to access to this member, valid value is:\n* everybody\n* admins_only\n* nobody",
                            "example": "everybody",
                            "enum": ["everybody", "admins_only", "nobody"]
                          },
                          "site_id": {
                            "type": "string",
                            "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) that you would like to use for the push to talk channel. You will only be able to add members that belong to this site to the push to talk channel. This field is required only if the [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) option has been enabled for the account.",
                            "example": "vkBoHKaRTxeBiTLRsdEwTQ"
                          },
                          "site_name": {
                            "type": "string",
                            "description": "The name of the site to which the private directory belongs. This field is required only if the [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) option has been enabled for the account.",
                            "example": "sample site"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n**Error Code:** `8001` <br>\n Site does not exist: {siteId} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_private_directory_members:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": [
            "phone:read:list_private_directory_members:admin"
          ]
        }
      },
      "post": {
        "tags": ["Private Directory"],
        "summary": "Add members to a private directory",
        "description": "Adds members to a [private directory](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0063992).\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:private_directory_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "addMembersToAPrivateDirectory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["members"],
                "type": "object",
                "properties": {
                  "site_id": {
                    "type": "string",
                    "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) that you would like to use for the private directory. You will only be able to add members that belong to this site to the private directory. This field is required only if the [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) option has been enabled for the account.",
                    "example": "vkBoHKaRTxeBiTLRsdEwTQ"
                  },
                  "members": {
                    "type": "array",
                    "items": {
                      "required": ["extension_id", "searchable_on_web_portal"],
                      "type": "object",
                      "properties": {
                        "extension_id": {
                          "type": "string",
                          "description": "The member's extension ID.",
                          "example": "JpjPXizWTz-l35tFRUK3Gg"
                        },
                        "searchable_on_web_portal": {
                          "type": "string",
                          "description": "The value indicates who can have access to this member. The valid value is: * everybody * admins_only * nobody",
                          "example": "everybody",
                          "enum": ["everybody", "admins_only", "nobody"]
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created** \n\nMembers added successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n**Error Code:** `8001` <br>\n Site does not exist: {siteId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:private_directory_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:private_directory_member:admin"]
        }
      }
    },
    "/phone/private_directory/members/{extensionId}": {
      "delete": {
        "tags": ["Private Directory"],
        "summary": "Remove a member from a private directory",
        "description": "Removes a member from a [private directory](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0063992).\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:private_directory_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "removeAMemberFromAPrivateDirectory",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "The member's extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "JpjPXizWTz-l35tFRUK3Gg" }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) that you would like to use for the private directory. This field is required only if the multiple sites option has been enabled for the account.",
            "required": false,
            "schema": { "type": "string", "example": "vkBoHKaRTxeBiTLRsdEwTQ" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nA member was removed successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n**Error Code:** `8001` <br>\n Site does not exist: {siteId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Extension does not exist: {extensionId} <br>\n**Error Code:** `404` <br>\n Extension does not exist in the private directory: {extensionId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:private_directory_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:private_directory_member:admin"]
        }
      },
      "patch": {
        "tags": ["Private Directory"],
        "summary": "Update a private directory member",
        "description": "Updates a member of a [private directory](https://support.zoom.com/hc/en/article?id=zm_kb&sysparm_article=KB0063992).\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:private_directory_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateAPrivateDirectoryMember",
        "parameters": [
          {
            "name": "extensionId",
            "in": "path",
            "description": "The member's extension ID.",
            "required": true,
            "schema": { "type": "string", "example": "JpjPXizWTz-l35tFRUK3Gg" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["searchable_on_web_portal"],
                "type": "object",
                "properties": {
                  "site_id": {
                    "type": "string",
                    "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) that you would like to use for the private directory. This field is required only if the multiple sites option has been enabled for the account.",
                    "example": "vkBoHKaRTxeBiTLRsdEwTQ"
                  },
                  "searchable_on_web_portal": {
                    "type": "string",
                    "description": "The value indicates who can access this member. The valid value is:\n* everybody\n* admins_only\n* nobody",
                    "example": "everybody",
                    "enum": ["everybody", "admins_only", "nobody"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content** \n\nMembers updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n**Error Code:** `8001` <br>\n Site does not exist: {siteId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Extension does not exist: {extensionId} <br>\n**Error Code:** `404` <br>\n Extension does not exist in the private directory: {extensionId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:private_directory_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:private_directory_member:admin"]
        }
      }
    },
    "/phone/carrier_peering/numbers": {
      "get": {
        "tags": ["Provider Exchange"],
        "summary": "List carrier peering phone numbers.",
        "description": "Returns phone numbers that the carrier pushed to different customers.\nTo become a peering provider/ carrier, submit your [request](https://docs.google.com/forms/d/e/1FAIpQLSewkY6ixVyKVNkWC-vgmejC16gigxsJWXji3dWzE3XlWtjsgg/viewform).\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`,`phone_peering:read:admin`\n\n**Granular Scopes:** `phone:read:list_peering_numbers:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "listCarrierPeeringPhoneNumbers",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The total number of records returned from a single API call.",
            "required": false,
            "schema": {
              "maximum": 200,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "phone_number",
            "in": "query",
            "description": "This field filters results by the given phone number.",
            "required": false,
            "schema": { "type": "string", "example": "18108001001" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n Carrier peering numbers successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "8X8xSdRVKHsabD6Im4tIPODq6GzDOvV5fO1"
                    },
                    "numbers": {
                      "maxItems": 200,
                      "type": "array",
                      "description": "The information about the phone numbers pushed by the carrier to different customers.",
                      "items": {
                        "required": [
                          "assigned",
                          "phone_number",
                          "sip_trunk_name",
                          "status"
                        ],
                        "type": "object",
                        "properties": {
                          "customer_account_name": {
                            "type": "string",
                            "description": "The customer's account name.",
                            "example": "Some customer's account name"
                          },
                          "customer_account_number": {
                            "type": "string",
                            "description": "The customer's account number.",
                            "example": "Some customer's account number"
                          },
                          "assigned": {
                            "type": "integer",
                            "description": "Whether the phone number is assigned:\n* `0` &mdash; Unassigned.\n* `1` &mdash; Assigned.",
                            "example": 1
                          },
                          "billing_reference_id": {
                            "type": "string",
                            "description": "The carrier's billing reference ID.",
                            "example": "Some billing referenceId"
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
                            "example": "+18108001001"
                          },
                          "service_info": {
                            "type": "string",
                            "description": "The carrier's service information.",
                            "example": "Some service info"
                          },
                          "sip_trunk_name": {
                            "type": "string",
                            "description": "The phone number's [SIP trunk](https://en.wikipedia.org/wiki/SIP_trunking).",
                            "example": "test-carrier-sip-trunk"
                          },
                          "status": {
                            "type": "integer",
                            "description": "The phone number's status:\n* `0` &mdash; Inactive.\n* `1` &mdash; Active.",
                            "example": 0
                          }
                        }
                      }
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned for this API call.",
                      "example": 20
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone_peering:read:admin",
              "phone:read:list_peering_numbers:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin", "phone_peering:read:admin"],
          "x-granular-scopes": ["phone:read:list_peering_numbers:admin"]
        }
      }
    },
    "/phone/peering/numbers": {
      "get": {
        "tags": ["Provider Exchange"],
        "summary": "List peering phone numbers",
        "description": "Returns phone numbers to Zoom through the Provider Exchange.\n\n**Note**: Phone peering API and events are for partners who have completed the MoU to peer with Zoom. To become a peering provider/ carrier, submit your [request](https://docs.google.com/forms/d/e/1FAIpQLSewkY6ixVyKVNkWC-vgmejC16gigxsJWXji3dWzE3XlWtjsgg/viewform).\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`,`phone_peering:read:admin`\n\n**Granular Scopes:** `phone:read:list_peering_numbers:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "listPeeringPhoneNumbers",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The total number of records returned from a single API call.",
            "required": false,
            "schema": {
              "maximum": 200,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "phone_number",
            "in": "query",
            "description": "The sender's or receiver's phone number that limits the list of SMS sessions.",
            "required": false,
            "schema": { "type": "string", "example": "18108001001" }
          },
          {
            "name": "carrier_code",
            "in": "query",
            "description": "The carrier's code. The `clientId` that maps to a carrier peered with Zoom.\n\nThis parameter is required if you do **not** use an OAuth token or the OAuth token does not contain the `clientId`.",
            "required": false,
            "schema": { "type": "integer", "example": 8801 }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n Carrier peering numbers successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "8X8xSdRVKHsabD6Im4tIPODq6GzDOvV5fO1"
                    },
                    "numbers": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "The information about the carrier's phone numbers.",
                      "items": {
                        "required": [
                          "assigned",
                          "phone_number",
                          "sip_trunk_name",
                          "status"
                        ],
                        "type": "object",
                        "properties": {
                          "assigned": {
                            "type": "integer",
                            "description": "Whether the phone number is assigned:\n* `0` &mdash; Unassigned.\n* `1` &mdash; Assigned.",
                            "example": 1
                          },
                          "billing_reference_id": {
                            "type": "string",
                            "description": "The carrier's billing reference ID.",
                            "example": "Some billing referenceId"
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
                            "example": "+18108001001"
                          },
                          "service_info": {
                            "type": "string",
                            "description": "The carrier's service information.",
                            "example": "Some service info"
                          },
                          "sip_trunk_name": {
                            "type": "string",
                            "description": "The phone number's [SIP trunk](https://en.wikipedia.org/wiki/SIP_trunking).",
                            "example": "test-carrier-sip-trunk"
                          },
                          "status": {
                            "type": "integer",
                            "description": "The phone number's status:\n* `0` &mdash; Inactive.\n* `1` &mdash; Active.",
                            "example": 0
                          }
                        }
                      }
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned for this API call.",
                      "example": 20
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone_peering:read:admin",
              "phone:read:list_peering_numbers:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin", "phone_peering:read:admin"],
          "x-granular-scopes": ["phone:read:list_peering_numbers:admin"]
        }
      },
      "post": {
        "tags": ["Provider Exchange"],
        "summary": "Add peering phone numbers",
        "description": "Adds phone numbers to Zoom through the Provider Exchange.\n\n**Note**: Phone peering API and events are for partners who have completed the MoU to peer with Zoom. To become a peering provider/ carrier, submit your [request](https://docs.google.com/forms/d/e/1FAIpQLSewkY6ixVyKVNkWC-vgmejC16gigxsJWXji3dWzE3XlWtjsgg/viewform).\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`,`phone_peering:write:admin`\n\n**Granular Scopes:** `phone:write:peering_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "addPeeringPhoneNumbers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "carrier_code": {
                    "type": "integer",
                    "description": "The carrier's code. The `clientId` maps to a carrier peered with Zoom.\n\nThis parameter is required if you do **not** use an OAuth token or the OAuth token does not contain the `clientId`.",
                    "example": 3456
                  },
                  "phone_numbers": {
                    "maxItems": 200,
                    "type": "array",
                    "description": "The information about the added phone numbers. Maximum of 200.",
                    "items": {
                      "required": ["phone_number", "sip_trunk_name", "status"],
                      "type": "object",
                      "properties": {
                        "billing_reference_id": {
                          "type": "string",
                          "description": "The carrier's billing reference ID. Maximum of 32 characters",
                          "example": "Some billing referenceId"
                        },
                        "phone_number": {
                          "type": "string",
                          "description": "The phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
                          "example": "+18008001011"
                        },
                        "service_info": {
                          "type": "string",
                          "description": "The carrier's service information. Maximum of 255 characters",
                          "example": "Some service info"
                        },
                        "sip_trunk_name": {
                          "type": "string",
                          "description": "The phone number's [SIP trunk](https://en.wikipedia.org/wiki/SIP_trunking).",
                          "example": "first-markert-carrier-trunk"
                        },
                        "status": {
                          "type": "integer",
                          "description": "The phone number's status:\n* `0` &mdash; Inactive.\n* `1` &mdash; Active.",
                          "example": 1
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \n\nPeering phone numbers successfully added. Check the API response for any failures.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unprocessed_numbers": {
                      "maxItems": 200,
                      "type": "array",
                      "description": "The information about unprocessed phone numbers.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "failure_reason": {
                            "type": "string",
                            "description": "The processing failure reason.",
                            "example": "Invalid status"
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
                            "example": "+15556660100"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `124` <br>\n Account does not exist: \"{accountId}\". <br>\n**Error Code:** `300` <br>\n Validation Failed. Batch adding phone numbers is limited to 200 per request. <br>\n**Error Code:** `404` <br>\n Unknown carrier. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone_peering:write:admin",
              "phone:write:peering_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin", "phone_peering:write:admin"],
          "x-granular-scopes": ["phone:write:peering_number:admin"]
        }
      },
      "delete": {
        "tags": ["Provider Exchange"],
        "summary": "Remove peering phone numbers",
        "description": "Removes phone numbers added to Zoom through the provider exchange.\n\n**Note**: Phone peering API and events are for partners who have completed the MoU to peer with Zoom. To become a peering provider or carrier, submit your [request](https://docs.google.com/forms/d/e/1FAIpQLSewkY6ixVyKVNkWC-vgmejC16gigxsJWXji3dWzE3XlWtjsgg/viewform).\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`,`phone_peering:write:admin`\n\n**Granular Scopes:** `phone:delete:peering_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deletePeeringPhoneNumbers",
        "parameters": [
          {
            "name": "carrier_code",
            "in": "query",
            "description": "The carrier's code. The `clientId` maps to a carrier peered with Zoom.  This parameter is required if you do **not** use an OAuth token or the OAuth token does not contain the `clientId`.",
            "required": false,
            "schema": { "type": "integer", "example": 8901 }
          },
          {
            "name": "phone_numbers",
            "in": "query",
            "description": "The information about the removed phone numbers. Maximum of 200.",
            "required": true,
            "schema": {
              "maxItems": 200,
              "type": "array",
              "example": ["8615306207777", "8615306207778"],
              "items": { "type": "string" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **Created**  \n Phone number successfully deleted. Check the API response for any failures.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unprocessed_numbers": {
                      "maxItems": 200,
                      "type": "array",
                      "description": "The information about unprocessed phone numbers.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "failure_reason": {
                            "type": "string",
                            "description": "The reason for processing failures.",
                            "example": "Number not exist."
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
                            "example": "+15556660100"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `124` <br>\n Account does not exist: \"{accountId}\". <br>\n**Error Code:** `300` <br>\n Validation Failed. Batch adding phone numbers is limited to 200 per request. <br>\n**Error Code:** `404` <br>\n Unknown carrier. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone_peering:write:admin",
              "phone:delete:peering_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin", "phone_peering:write:admin"],
          "x-granular-scopes": ["phone:delete:peering_number:admin"]
        }
      },
      "patch": {
        "tags": ["Provider Exchange"],
        "summary": "Update peering phone numbers",
        "description": "Updates phone numbers to Zoom through the Provider Exchange.\n\n**Note**: Phone peering API and events are for partners that have completed the MoU to peer with Zoom. To become a peering provider/ carrier, submit your [request](https://docs.google.com/forms/d/e/1FAIpQLSewkY6ixVyKVNkWC-vgmejC16gigxsJWXji3dWzE3XlWtjsgg/viewform).\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`,`phone_peering:write:admin`\n\n**Granular Scopes:** `phone:update:peering_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updatePeeringPhoneNumbers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "carrier_code": {
                    "type": "integer",
                    "description": "The carrier's code. The `clientId` maps to a carrier peered with Zoom.\n\nThis parameter is required if you do **not** use an OAuth token or the OAuth token does not contain the `clientId`.",
                    "example": 1234
                  },
                  "phone_numbers": {
                    "maxItems": 200,
                    "type": "array",
                    "description": "A maximum of 200.",
                    "items": {
                      "required": ["phone_number"],
                      "type": "object",
                      "properties": {
                        "billing_reference_id": {
                          "type": "string",
                          "description": "The carrier's billing reference ID. Maximum of 32 characters.",
                          "example": "Some billing referenceId"
                        },
                        "phone_number": {
                          "type": "string",
                          "description": "The phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
                          "example": "+18008001000"
                        },
                        "service_info": {
                          "type": "string",
                          "description": "The carrier's service information. Maximum of 255 characters.",
                          "example": "The encoding used to copy filtered properties files have not been set."
                        },
                        "sip_trunk_name": {
                          "type": "string",
                          "description": "The SIP trunk for the number",
                          "example": "first-markert-carrier-trunk"
                        },
                        "status": {
                          "type": "integer",
                          "description": "The phone number's status:\n* `0` &mdash; Inactive.\n* `1` &mdash; Active.",
                          "example": 0
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nPhone number successfully updated. Check the API response for any failures.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "unprocessed_numbers": {
                      "maxItems": 200,
                      "type": "array",
                      "description": "The information about unprocessed phone numbers.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "failure_reason": {
                            "type": "string",
                            "description": "The reason for processing failures.",
                            "example": "Invalid status"
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number in [E.164 format](https://en.wikipedia.org/wiki/E.164).",
                            "example": "+15556660100"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `124` <br>\n Account does not exist: \"{accountId}\". <br>\n**Error Code:** `300` <br>\n Validation Failed. Batch adding phone numbers is limited to 200 per request. <br>\n**Error Code:** `404` <br>\n Unknown carrier. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone_peering:write:admin",
              "phone:update:peering_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin", "phone_peering:write:admin"],
          "x-granular-scopes": ["phone:update:peering_number:admin"]
        }
      }
    },
    "/phone/provision_templates": {
      "get": {
        "tags": ["Provision Templates"],
        "summary": "List provision templates",
        "description": "Use this API to list all [provision templates](https://support.zoom.us/hc/en-us/articles/360035817952) in a Zoom account.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_provision_templates:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listAccountProvisionTemplate",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nProvision template listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.)",
                      "example": "bkOcmnm6mn6ioYAi10BcgRiEL38WzAo6jP2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30
                    },
                    "provision_templates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The provision template ID.",
                            "example": "CLbU64xzTzCUXz58e2Lo-w"
                          },
                          "name": {
                            "type": "string",
                            "description": "The display name for the provision template.",
                            "example": "Test Provision Template"
                          },
                          "description": {
                            "type": "string",
                            "description": "The description for the provision template.",
                            "example": "provision template"
                          },
                          "bound_device_count": {
                            "type": "integer",
                            "description": "The number of devices using the provision template.",
                            "example": 2
                          }
                        }
                      }
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_provision_templates:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_provision_templates:admin"]
        }
      },
      "post": {
        "tags": ["Provision Templates"],
        "summary": "Add a provision template",
        "description": "Use this API to [create a provision template](https://support.zoom.us/hc/en-us/articles/360035817952#h_8266cb40-58fc-4c1a-8da2-885d72167234) in a Zoom account.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:provision_template:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addProvisionTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name"],
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 128,
                    "type": "string",
                    "description": "The template name.",
                    "example": "test-provision-template"
                  },
                  "description": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "The provision template description.",
                    "example": "Test provision template created by API."
                  },
                  "content": {
                    "type": "string",
                    "description": "The [content of the provision template](https://support.zoom.us/hc/en-us/articles/360035817952#h_6ef0cbf5-8d10-4237-91f0-e70f7b73a590).",
                    "example": "provisioning/firmware/url=https://..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \nTemplate added successfully.  ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The template ID.",
                      "example": "q5C69v95SPKsZ5uUi-Xbcw"
                    },
                    "name": {
                      "type": "string",
                      "description": "The template name.",
                      "example": "test-provision-template"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n**Error Code:** `400` <br>\n\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:provision_template:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:provision_template:admin"]
        }
      }
    },
    "/phone/provision_templates/{templateId}": {
      "get": {
        "tags": ["Provision Templates"],
        "summary": "Get a provision template",
        "description": "Use this API to get a specific [provision template](https://support.zoom.us/hc/en-us/articles/360035817952).\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:provision_template:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "GetProvisionTemplate",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "The template ID.",
            "required": true,
            "schema": { "type": "string", "example": "CLbU64xzTzCUXz58e2Lo-w" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nProvision template details retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The provision template ID.",
                      "example": "CLbU64xzTzCUXz58e2Lo-w"
                    },
                    "name": {
                      "type": "string",
                      "description": "The display name for the provision template.",
                      "example": "Test provision template"
                    },
                    "description": {
                      "type": "string",
                      "description": "The description for the provision template.",
                      "example": "provision template"
                    },
                    "content": {
                      "type": "string",
                      "description": "The [content of the provision template](https://support.zoom.us/hc/en-us/articles/360035817952#h_6ef0cbf5-8d10-4237-91f0-e70f7b73a590).",
                      "example": "provisioning/firmware/url=https://..."
                    },
                    "bound_device_count": {
                      "type": "integer",
                      "description": "The number of devices using the provision template.",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:provision_template:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:provision_template:admin"]
        }
      },
      "delete": {
        "tags": ["Provision Templates"],
        "summary": "Delete a provision template",
        "description": "Use this API to [delete a provision template](https://support.zoom.us/hc/en-us/articles/360035817952#h_7b34cd1d-5ae6-4a23-bd04-454a6ad8cb3e) in a Zoom account.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:provision_template:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteProvisionTemplate",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "The template ID.",
            "required": true,
            "schema": { "type": "string", "example": "CLbU64xzTzCUXz58e2Lo-w" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\nTemplate deleted successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nProvision template does not exist.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:provision_template:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:provision_template:admin"]
        }
      },
      "patch": {
        "tags": ["Provision Templates"],
        "summary": "Update a provision template",
        "description": "Use this API to update a [provision template](https://support.zoom.us/hc/en-us/articles/360035817952#h_7b34cd1d-5ae6-4a23-bd04-454a6ad8cb3e) in a Zoom account.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:provision_template:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateProvisionTemplate",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "CLbU64xzTzCUXz58e2Lo-w" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "maxLength": 128,
                    "type": "string",
                    "description": "The name of the template.",
                    "example": "test-provision-template-byAPI"
                  },
                  "description": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "The provision template description.",
                    "example": "test provision template by api."
                  },
                  "content": {
                    "type": "string",
                    "description": "The [provision template content](https://support.zoom.us/hc/en-us/articles/360035817952#h_6ef0cbf5-8d10-4237-91f0-e70f7b73a590).",
                    "example": "static.firmware.url = https://..."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\nTemplate details updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\n\n\n**Error Code:** `404` <br>\nProvision template does not exist.<br>\n\n**Error Code:** `400` <br>\nProvision template name ({0}) already exists.<br>\ntemplate should not contain reserved parameters (Key: {0}).<br>\nProvision template name ({0}) already exists.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:provision_template:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:provision_template:admin"]
        }
      }
    },
    "/phone/call_logs/{id}/recordings": {
      "get": {
        "tags": ["Recordings"],
        "summary": "Get recording by call ID",
        "description": "Returns an account's [call recording](https://support.zoom.us/hc/en-us/articles/360038521091-Accessing-and-sharing-call-recordings) by the recording's `callId` or `callLogId`. \n\n**Note**: Returns the `file_url` in the JSON query results.\n\n**Prerequisites:** \n* A Pro or higher account with Zoom Phone license \n* Account owner or admin privileges\n\n**Scopes:** `phone:read:admin`,`phone_recording:read`,`phone_recording:read:admin`\n\n**Granular Scopes:** `phone:read:call_recording`,`phone:read:call_recording:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getPhoneRecordingsByCallIdOrCallLogId",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "This field gets the unique ID of the call log. You can use `callLogId` and `callId` as path parameters. You can find the value for this field with the **[Get account's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/accountCallLogs)** API or the **[Get user's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/phoneUserCallLogs)** API.",
            "required": true,
            "schema": { "type": "string", "example": "7069775907364530379" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nOK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_id": {
                      "type": "string",
                      "description": "The phone call's unique ID.",
                      "example": "7069775907364530379"
                    },
                    "call_log_id": {
                      "type": "string",
                      "description": "The phone call log's unique ID.",
                      "example": "1dfe35c0-5f0f-4bf1-b2e4-a8869a731178"
                    },
                    "callee_name": {
                      "type": "string",
                      "description": "The callee's contact name.",
                      "example": "User A"
                    },
                    "callee_number": {
                      "type": "string",
                      "description": "The callee's phone number.",
                      "example": "1000001004"
                    },
                    "callee_number_type": {
                      "type": "integer",
                      "description": "The callee's number type: \n* `1` — Internal number. \n* `2` — External number. \n* `3` — Customized emergency number.",
                      "example": 1,
                      "enum": [1, 2, 3]
                    },
                    "caller_name": {
                      "type": "string",
                      "description": "The caller's contact name.",
                      "example": "User B"
                    },
                    "caller_number": {
                      "type": "string",
                      "description": "The caller's phone number.",
                      "example": "1000123476"
                    },
                    "caller_number_type": {
                      "type": "integer",
                      "description": "The caller's number type: \n* `1` — Internal number. \n* `2` — External number.",
                      "example": 1,
                      "enum": [1, 2]
                    },
                    "outgoing_by": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The user's name.",
                          "example": "User B"
                        },
                        "extension_number": {
                          "type": "string",
                          "description": "The user's extension number.",
                          "example": "123476"
                        }
                      },
                      "description": "The user who initiates the call. The current recording must belong to the initiator and the call queue for it to be available."
                    },
                    "accepted_by": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The user's name.",
                          "example": "User A"
                        },
                        "extension_number": {
                          "type": "string",
                          "description": "The user's extension number.",
                          "example": "132001"
                        }
                      },
                      "description": "The call-receiving user. The current recording must belong to the receiver and call queue for it to be available."
                    },
                    "date_time": {
                      "type": "string",
                      "description": "The date and time when the recording was received.",
                      "format": "date-time",
                      "example": "2022-03-08T05:37:23Z"
                    },
                    "direction": {
                      "type": "string",
                      "description": "The call's direction:\n* `inbound`\n* `outbound`",
                      "example": "inbound"
                    },
                    "download_url": {
                      "type": "string",
                      "description": "The URL from which to download the recording. \n\nFor security purposes, you **must** provide an OAuth access token in the Authorization header to download the recording file using this URL. \n\nFor example: \n\n```curl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {access_token} \\\n  --header 'content-type: application/json'\n```",
                      "example": "https://domain/recording/download/EvVNLihbQ1WpeG_ALwnNzg"
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The call recording's duration, in seconds.",
                      "example": 115
                    },
                    "end_time": {
                      "type": "string",
                      "description": "The recording's end time.",
                      "format": "date-time",
                      "example": "2022-03-08T05:39:19Z"
                    },
                    "id": {
                      "type": "string",
                      "description": "The recording's ID.",
                      "example": "1dfe35c05f0f4bf1b2e4a8869a731178"
                    },
                    "meeting_uuid": {
                      "type": "string",
                      "description": "The meeting ID associated with the recording, if any.",
                      "example": "egLSRuj2SlWet+wLi87LNA=="
                    },
                    "owner": {
                      "type": "object",
                      "properties": {
                        "extension_number": {
                          "type": "integer",
                          "description": "The extension number associated with the call number.",
                          "format": "int64",
                          "example": 1000123476
                        },
                        "id": {
                          "type": "string",
                          "description": "The owner's ID.",
                          "example": "NL3cEpSdRc-c2t8aLoZqiw"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the owner.",
                          "example": "user@test.com"
                        },
                        "type": {
                          "type": "string",
                          "description": "The owner's type, can be `user`, `callQueue`, or `sharedOffice`(deprecated and to be replaced by `commonArea` after the transition period.)",
                          "example": "user",
                          "enum": ["user", "callQueue", "commonArea"]
                        },
                        "extension_status": {
                          "type": "string",
                          "description": "This field indicates the status of extension. \n* `inactive` \n* `deleted`",
                          "example": "deleted",
                          "enum": ["inactive", "deleted"]
                        },
                        "extension_deleted_time": {
                          "type": "string",
                          "description": "The date time the extension was deleted. It exists only when extension_status is `deleted`.",
                          "example": "2022-10-14T22:10:54Z"
                        }
                      },
                      "description": "The owner of the recording."
                    },
                    "deleted_time": {
                      "type": "string",
                      "description": "The time and date the recording was deleted. It exists only when recording is from trash.",
                      "format": "date-time",
                      "example": "2023-04-18T22:10:49.907Z"
                    },
                    "days_left_auto_permantely_delete": {
                      "type": "integer",
                      "description": "The number of days left until recording is permanently deleted. If the recording never auto deletes, the value is '-1'. It exists only when recording is from trash.",
                      "example": 30
                    },
                    "soft_deleted_type": {
                      "type": "string",
                      "description": "This field indicates how the recording was deleted. It exists only when the recording is from trash.",
                      "example": "Manual",
                      "enum": ["Manual", "Data Retention"]
                    },
                    "recording_type": {
                      "type": "string",
                      "description": "The recording type. The allowed value is `OnDemand` or `Automatic`.",
                      "example": "OnDemand",
                      "enum": ["OnDemand", "Automatic"]
                    },
                    "file_url": {
                      "type": "string",
                      "description": "The download URL for the recording. For security purposes, you must provide an OAuth access token in the auth header to download the recording file using this url.\nExample request:\n```\ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {access_token}' \\\n  --header 'content-type: application/json'\n```",
                      "example": "https://domain/recording/download/8f7345c50a654182ab1672fdb3be61ff"
                    },
                    "disclaimer_status": {
                      "type": "integer",
                      "description": "The status of disclaimer for recording:  \n* `0` - passive/implicit \n* `1` - agree (active/explicit and press 1)  \n* `2` - passive agree (active/explicit and no press)",
                      "example": 0,
                      "enum": [0, 1, 2]
                    }
                  },
                  "description": "The information about the user's phone recording."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Account does not exist: \"{accountId}\". <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n Recording does not exist: \"{callId or callLogId}\". <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone_recording:read",
              "phone_recording:read:admin",
              "phone:read:call_recording",
              "phone:read:call_recording:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:read:admin",
            "phone_recording:read",
            "phone_recording:read:admin"
          ],
          "x-granular-scopes": [
            "phone:read:call_recording",
            "phone:read:call_recording:admin"
          ]
        }
      }
    },
    "/phone/recording/download/{fileId}": {
      "get": {
        "tags": ["Recordings"],
        "summary": "Download a phone recording",
        "description": "Downloads the phone recording. \n\n**Prerequisites:**\n\n* A Business or Enterprise account\n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:read`,`phone:read:admin`,`phone_recording:read`,`phone_recording:read:admin`\n\n**Granular Scopes:** `phone:read:call_recording`,`phone:read:call_recording:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "phoneDownloadRecordingFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "The file ID of the phone recording.",
            "required": true,
            "schema": { "type": "string", "example": "SJD6tIJpQHeTU4RDde-NVA" }
          }
        ],
        "responses": {
          "200": { "description": "**HTTP Status Code:** `200` **OK**  \n \n" },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `404` <br>\n File does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read",
              "phone:read:admin",
              "phone_recording:read",
              "phone_recording:read:admin",
              "phone:read:call_recording",
              "phone:read:call_recording:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:read",
            "phone:read:admin",
            "phone_recording:read",
            "phone_recording:read:admin"
          ],
          "x-granular-scopes": [
            "phone:read:call_recording",
            "phone:read:call_recording:admin"
          ]
        }
      }
    },
    "/phone/recording_transcript/download/{recordingId}": {
      "get": {
        "tags": ["Recordings"],
        "summary": "Download a phone recording transcript",
        "description": "Downloads the phone recording transcript. \n\n**Prerequisites:**\n\n* A Business or Enterprise account\n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:read`,`phone:read:admin`,`phone_recording:read`,`phone_recording:read:admin`\n\n**Granular Scopes:** `phone:read:recording_transcript`,`phone:read:recording_transcript:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "phoneDownloadRecordingTranscript",
        "parameters": [
          {
            "name": "recordingId",
            "in": "path",
            "description": "The phone recording ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "8f7345c50a654182ab1672fdb3be61ff"
            }
          }
        ],
        "responses": {
          "200": { "description": "**HTTP Status Code:** `200` **OK**  \n \n" },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nFile does not exist.<br>\n\n**Error Code:** `12000` <br>\nUnable to transcribe this recording.<br>\n\n**Error Code:** `12001` <br>\nAdmin has disabled this transcription.<br>\n\n**Error Code:** `12002` <br>\nThis recording is still in the process of being transcribed. Reopen this recording in a few minutes.<br>\n\n**Error Code:** `12003` <br>\nTranscripts failed to download.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read",
              "phone:read:admin",
              "phone_recording:read",
              "phone_recording:read:admin",
              "phone:read:recording_transcript",
              "phone:read:recording_transcript:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": [
            "phone:read",
            "phone:read:admin",
            "phone_recording:read",
            "phone_recording:read:admin"
          ],
          "x-granular-scopes": [
            "phone:read:recording_transcript",
            "phone:read:recording_transcript:admin"
          ]
        }
      }
    },
    "/phone/recordings": {
      "get": {
        "tags": ["Recordings"],
        "summary": "Get call recordings",
        "description": "Returns an account's [call recordings](https://support.zoom.us/hc/en-us/articles/360038521091-Accessing-and-sharing-call-recordings). \n\n**Prerequisites:** \n* A Pro or higher account plan \n * A Zoom Phone license \n * Account owner or admin privileges\n\n**Scopes:** `phone:read:admin`,`phone_recording:read:admin`\n\n**Granular Scopes:** `phone:read:list_call_recordings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "getPhoneRecordings",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call. \n\nThe default is **30** and the maximum is **300**.",
            "required": false,
            "schema": { "type": "integer", "example": 30 }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The current page number of the returned records.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "cWiI3vTqdcENiV9RJz3Rh8iP1ksNPheW8c1"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd T HH:mm:ssZ** format. \n\nThe date range defined in the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. \n\nIf unspecified, it returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "This field is **required** only when the `from` parameter is specified. \n\nThe end time and date display in **yyyy-mm-dd** or **yyyy-MM-dd T HH:mm:ssZ** format, which is the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          },
          {
            "name": "owner_type",
            "in": "query",
            "description": "The owner type. \n\nThe allowed values are `null`, `user`, `callQueue`, or `sharedOffice`(deprecated and to be replaced by `commonArea` after the transition period). \n\nThe default value is `null`.  If the value is `null`, it returns all owner types.",
            "required": false,
            "schema": { "type": "string", "example": "all", "default": "all" }
          },
          {
            "name": "recording_type",
            "in": "query",
            "description": "The recording type. The allowed values are `null`, `OnDemand`, or `Automatic`. The default value is `null`. If `null`, it returns all recording types.",
            "required": false,
            "schema": { "type": "string", "example": "OnDemand" }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The site ID. \n\nThe default value is `All sites`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "8f71O6rWT8KFUGQmJIFAdQ",
              "default": "All sites"
            }
          },
          {
            "name": "query_date_type",
            "in": "query",
            "description": "The query date type, which can be `start_time` or `end_time`. \n\nThe default value is `start_time`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "start_time",
              "default": "start_time"
            }
          },
          {
            "name": "group_id",
            "in": "query",
            "description": "The group ID. \n\nThe default value is `All groups`.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "SJD6tIJpQHeTU4RDde-NVA",
              "default": "All groups"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code** `200`  \n \nOK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The current page number of returned records.",
                      "example": "cWiI3vTqdcENiV9RJz3Rh8iP1ksNPheW8c1"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call. \n\nThe default is **30**, and the maximum is **300**.",
                      "example": 30
                    },
                    "recordings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "auto_delete_policy": {
                            "type": "string",
                            "description": "The time to allow Zoom to automatically delete recordings after retention duration. To see this field, the 'Auto Delete Data After Retention Duration' setting must be enabled in Account Settings .",
                            "example": "1 year"
                          },
                          "call_id": {
                            "type": "string",
                            "description": "The phone call's unique ID.",
                            "example": "7072598989368295984"
                          },
                          "call_log_id": {
                            "type": "string",
                            "description": "The phone call log's unique ID.",
                            "example": "6f9c2948-40ad-46bc-8700-34ca2d098098"
                          },
                          "callee_name": {
                            "type": "string",
                            "description": "The contact name of the callee.",
                            "example": "User A"
                          },
                          "callee_number": {
                            "type": "string",
                            "description": "The phone number of the callee. It could be an e164 number or an extension. The extension number is a combination of the site number and a short extension.",
                            "example": "1000001004"
                          },
                          "callee_number_type": {
                            "type": "integer",
                            "description": "The callee's number type: \n* `1` — Internal number. \n* `2` — External number. \n* `3` — Customized emergency number.",
                            "example": 1,
                            "enum": [1, 2, 3]
                          },
                          "caller_name": {
                            "type": "string",
                            "description": "The contact name of the caller.",
                            "example": "User B"
                          },
                          "caller_number": {
                            "type": "string",
                            "description": "The phone number associated with the caller. It could be an e164 number or an extension. The extension number is a combination of the site number and the short extension.",
                            "example": "1000123476"
                          },
                          "caller_number_type": {
                            "type": "integer",
                            "description": "The caller's number type: \n* `1` — Internal number. \n* `2` — External number.",
                            "example": 1,
                            "enum": [1, 2]
                          },
                          "outgoing_by": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The user's name.",
                                "example": "User B"
                              },
                              "extension_number": {
                                "type": "string",
                                "description": "The user's extension number.",
                                "example": "123476"
                              }
                            },
                            "description": "The call-initiating user. The current recording must belong to the initiator and call queue for it to be available."
                          },
                          "accepted_by": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The user's name",
                                "example": "User A"
                              },
                              "extension_number": {
                                "type": "string",
                                "description": "The user's extension number",
                                "example": "10201"
                              }
                            },
                            "description": "The call-receiving user. The current recording must belong to the receiver and call queue for it to be available."
                          },
                          "date_time": {
                            "type": "string",
                            "description": "The date and time when the recording was received.",
                            "format": "date-time",
                            "example": "2022-03-08T05:37:23Z"
                          },
                          "disclaimer_status": {
                            "type": "integer",
                            "description": "The status of disclaimer for recording: \n* `0` - passive/implicit \n* `1` - agree (active/explicit and press 1) \n* `2` - passive agree (active/explicit and no press)",
                            "example": 0,
                            "enum": [0, 1, 2]
                          },
                          "direction": {
                            "type": "string",
                            "description": "The direction of the call. The values are `inbound` or `outbound`.",
                            "example": "outbound",
                            "enum": ["inbound", "outbound"]
                          },
                          "download_url": {
                            "type": "string",
                            "description": "The download URL for the recording. For security purposes, you must provide an OAuth access token in the auth header to download the recording file using this URL.\nExample request\n```\ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {access_token}' \\\n  --header 'content-type: application/json'\n```",
                            "example": "https://domain/recording/download/EvVNLihbQ1WpeG_ALwnNzg"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The call recording's duration, in seconds.",
                            "example": 115
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The recording's end time.",
                            "format": "date-time",
                            "example": "2022-03-08T05:39:19Z"
                          },
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the recording.",
                            "example": "6f9c294840ad46bc870034ca2d098098"
                          },
                          "meeting_uuid": {
                            "type": "string",
                            "description": "The meeting ID associated with the recording, if any.",
                            "example": "egLSRuj2SlWet+wLi87LNA=="
                          },
                          "owner": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "integer",
                                "description": "The extension number associated to the call number.",
                                "format": "int64",
                                "example": 1000123476
                              },
                              "id": {
                                "type": "string",
                                "description": "The owner's ID.",
                                "example": "NL3cEpSdRc-c2t8aLoZqiw"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the owner.",
                                "example": "user@test.com"
                              },
                              "type": {
                                "type": "string",
                                "description": "The owner's type, can be `user`, `callQueue`, or `sharedOffice`(deprecated and to be replaced by `commonArea`. During the transition period, if `sharedOffice` is provided as the `owner_type` parameter, `sharedOffice` is returned as a response. Conversely, if `commonArea` is provided, `commonArea` will be returned. If `null` is provided, `sharedOffice` will be returned temporarily, but it will be replaced by `commonArea` after the transition period).",
                                "example": "user",
                                "enum": ["user", "callQueue", "commonArea"]
                              },
                              "extension_status": {
                                "type": "string",
                                "description": "This field indicates the status of extension: \n* `inactive` \n* `deleted`",
                                "example": "deleted",
                                "enum": ["inactive", "deleted"]
                              },
                              "extension_deleted_time": {
                                "type": "string",
                                "description": "The date time the extension was deleted. It exists only when extension_status is `deleted`.",
                                "example": "2022-10-14T22:10:54Z"
                              }
                            },
                            "description": "The owner of the recording."
                          },
                          "recording_type": {
                            "type": "string",
                            "description": "The recording type. The allowed values are `OnDemand` or `Automatic`.",
                            "example": "OnDemand"
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The site ID.",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The site name.",
                                "example": "Main Site"
                              }
                            }
                          },
                          "transcript_download_url": {
                            "type": "string",
                            "description": "The download URL for the recording transcript. For security purposes, you must provide an OAuth access token in the auth header to download the recording transcript file using this URL.\nExample request\n```\ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {access_token}' \\\n  --header 'content-type: application/json'\n```",
                            "example": "https://domain/recording_transcript/download/8f7345c50a654182ab1672fdb3be61ff"
                          },
                          "auto_delete_enable": {
                            "type": "boolean",
                            "description": "This field indicates whether the recording has Auto Delete Data After Retention Duration setting enabled or not.",
                            "example": true
                          }
                        }
                      }
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 50
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation failed. You provided an incorrect value for the template type. Provide a valid value and try again. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Account does not exist: {accountId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone_recording:read:admin",
              "phone:read:list_call_recordings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin", "phone_recording:read:admin"],
          "x-granular-scopes": ["phone:read:list_call_recordings:admin"]
        }
      }
    },
    "/phone/recordings/{recordingId}": {
      "delete": {
        "tags": ["Recordings"],
        "summary": "Delete a call recording",
        "description": "Deletes a call recording.\n\n**Prerequisites:** \n* User must belong to a Business or Enterprise account \n* User must have a Zoom Phone license\n\n**Scopes:** `phone:write:admin`,`phone:write`,`phone_recording:write`,`phone_recording:write:admin`\n\n**Granular Scopes:** `phone:delete:call_recording`,`phone:delete:call_recording:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteCallRecording",
        "parameters": [
          {
            "name": "recordingId",
            "in": "path",
            "description": "The unique identifier of the recording.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6f9c294840ad46bc870034ca2d098098"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code**: `204`   \n \nRecording deleted.\n"
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `124` <br>\nInvalid access token.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `404` <br>\nRecording does not exist: {recordingId}.<br>\n\n**Error Code:** `2001` <br>\nAccount does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone_recording:write",
              "phone_recording:write:admin",
              "phone:delete:call_recording",
              "phone:delete:call_recording:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:write:admin",
            "phone:write",
            "phone_recording:write",
            "phone_recording:write:admin"
          ],
          "x-granular-scopes": [
            "phone:delete:call_recording",
            "phone:delete:call_recording:admin"
          ]
        }
      },
      "patch": {
        "tags": ["Recordings"],
        "summary": "Update auto delete field",
        "description": "Updates the auto delete field for recording. It only updates if you enable the **Auto Delete Data After Retention Duration** setting in the account settings for recordings. \n\n**Prerequisites:** \n* User must belong to a Business or Enterprise account \n* User must have a Zoom Phone license.\n\n**Scopes:** `phone:write:admin`,`phone:write`,`phone_recording:write`,`phone_recording:write:admin`\n\n**Granular Scopes:** `phone:update:call_recording`,`phone:update:call_recording:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateAutoDeleteField",
        "parameters": [
          {
            "name": "recordingId",
            "in": "path",
            "description": "The unique identifier of the recording.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6f9c294840ad46bc870034ca2d098098"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "auto_delete_enable": {
                    "type": "boolean",
                    "description": "Whether to enable auto delete field in recording.",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code**: `204`   \n Auto delete field updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `124` <br>\n Invalid access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found \n\n **Error Code:** `404` <br>\n Recording does not exist: {recordingId}. <br>\n**Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone_recording:write",
              "phone_recording:write:admin",
              "phone:update:call_recording",
              "phone:update:call_recording:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:write:admin",
            "phone:write",
            "phone_recording:write",
            "phone_recording:write:admin"
          ],
          "x-granular-scopes": [
            "phone:update:call_recording",
            "phone:update:call_recording:admin"
          ]
        }
      }
    },
    "/phone/recordings/{recordingId}/status": {
      "put": {
        "tags": ["Recordings"],
        "summary": "Update Recording Status",
        "description": "Updates the status of a single recording in account. \n\n**Prerequisites:** \n* User must belong to a Business or Enterprise account. \n* User must have a Zoom Phone license.\n\n**Scopes:** `phone:write:admin`,`phone:write`,`phone_recording:write`,`phone_recording:write:admin`\n\n**Granular Scopes:** `phone:update:call_recording`,`phone:update:call_recording:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "UpdateRecordingStatus",
        "parameters": [
          {
            "name": "recordingId",
            "in": "path",
            "description": "The recording ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "6f9c294840ad46bc870034ca2d098098"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "This field corresponds to actions that you can use to update recording status. Example: Recovering recordings from trash. \n\nAllowed values: `recover`.",
                    "example": "recover",
                    "enum": ["recover"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code**: `204`   \n Recording recovered from trash."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `124` <br>\n Invalid access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Recording does not exist: {recordingId}. <br>\n**Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone_recording:write",
              "phone_recording:write:admin",
              "phone:update:call_recording",
              "phone:update:call_recording:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:write:admin",
            "phone:write",
            "phone_recording:write",
            "phone_recording:write:admin"
          ],
          "x-granular-scopes": [
            "phone:update:call_recording",
            "phone:update:call_recording:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/recordings": {
      "get": {
        "tags": ["Recordings"],
        "summary": "Get user's recordings",
        "description": "Gets a user's [Zoom Phone recordings](https://support.zoom.us/hc/en-us/articles/360021336671-Viewing-Call-History-and-Recordings). For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read`,`phone:read:admin`,`phone_recording:read`,`phone_recording:read:admin`\n\n**Granular Scopes:** `phone:read:list_recordings`,`phone:read:list_recordings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "phoneUserRecordings",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "required": true,
            "schema": { "type": "string", "example": "DYHrdpjrS3uaOf7dPkkg8w" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through large result sets. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. The month defined should fall within the last six months. If unspecified, returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nUser object returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "description": "The start time and date of the query.",
                      "format": "date",
                      "example": "2021-11-01"
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "6jqhz348c100oHbw6cVER45YderniREnwr1"
                    },
                    "page_count": {
                      "type": "integer",
                      "description": "Total number of pages.",
                      "example": 1
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call for each page.",
                      "example": 30
                    },
                    "recordings": {
                      "maxItems": 100,
                      "type": "array",
                      "description": "The recordings.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "call_id": {
                            "type": "string",
                            "description": "The phone call's unique ID.",
                            "example": "7025841973929235024"
                          },
                          "call_log_id": {
                            "type": "string",
                            "description": "The phone call log's unique ID.",
                            "example": "8f7345c5-0a65-4182-ab16-72fdb3be61ff"
                          },
                          "call_history_id": {
                            "type": "string",
                            "description": "The phone call history's unique ID.",
                            "example": "20211102-8f7345c5-0a65-4182-ab16-72fdb3be61ff"
                          },
                          "callee_name": {
                            "type": "string",
                            "description": "The contact name of callee.",
                            "example": "User A"
                          },
                          "callee_number": {
                            "type": "string",
                            "description": "The number of callee.",
                            "example": "1000001004"
                          },
                          "callee_number_type": {
                            "type": "integer",
                            "description": "The callee's number type: \n* `1` &mdash; Internal number. \n* `2` &mdash; External number.\n* `3` &mdash; Customized emergency number.",
                            "example": 1,
                            "enum": [1, 2, 3]
                          },
                          "caller_name": {
                            "type": "string",
                            "description": "The contact name of caller.",
                            "example": "User B"
                          },
                          "caller_number": {
                            "type": "string",
                            "description": "Number of caller.",
                            "example": "1000001028"
                          },
                          "caller_number_type": {
                            "type": "integer",
                            "description": "The caller's number type: \n* `1` &mdash; Internal number. \n* `2` &mdash; External number.",
                            "example": 1,
                            "enum": [1, 2]
                          },
                          "outgoing_by": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The user's name.",
                                "example": "User B"
                              },
                              "extension_number": {
                                "type": "string",
                                "description": "The user's extension number.",
                                "example": "123476"
                              }
                            },
                            "description": "The call-initiating user. The current recording must belong to the initiator and call queue for it to be available."
                          },
                          "accepted_by": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The user's name.",
                                "example": "User A"
                              },
                              "extension_number": {
                                "type": "string",
                                "description": "The user's extension number.",
                                "example": "101001"
                              }
                            },
                            "description": "The call-receiving user. The current recording must belong to the receiver and call queue for it to be available."
                          },
                          "date_time": {
                            "type": "string",
                            "description": "The date and time at which the record is received",
                            "example": "2021-11-02T05:35:20Z"
                          },
                          "direction": {
                            "type": "string",
                            "description": "The direction of the call. &quot;inbound&quot; | &quot;outbound&quot;",
                            "example": "inbound"
                          },
                          "download_url": {
                            "type": "string",
                            "description": "The download URL for the recording. For security purposes, you must provide an OAuth access token in the auth header to download the recording file using this url.   \n \n\nExample request:  \n \n```\ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {access_token} \\\n  --header 'content-type: application/json'\n```\n",
                            "example": "https://domain/recording/download/EvVNLihbQ1WpeG_ALwnNzg"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The call recording's duration, in seconds.",
                            "example": 11
                          },
                          "id": {
                            "type": "string",
                            "description": "The ID of recording.",
                            "example": "8f7345c50a654182ab1672fdb3be61ff"
                          },
                          "meeting_uuid": {
                            "type": "string",
                            "description": "The meeting ID associated with the recording, if any.",
                            "example": "egLSRuj2SlWet+wLi87LNA=="
                          },
                          "transcript_download_url": {
                            "type": "string",
                            "description": "The download URL for the recording transcript. For security purposes, you must provide an OAuth access token in the auth header to download the recording transcript file using this url.   \n \n\nExample request:  \n \n```\ncurl --request GET \\\n  --url {transcript_download_url} \\\n  --header 'authorization: Bearer {access_token} \\\n  --header 'content-type: application/json'\n```\n",
                            "example": "https://domain/recording_transcript/download/8f7345c50a654182ab1672fdb3be61ff"
                          }
                        }
                      }
                    },
                    "to": {
                      "type": "string",
                      "description": "The end time and date of the query.",
                      "format": "date",
                      "example": "2021-11-03"
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 50
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n**Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read",
              "phone:read:admin",
              "phone_recording:read",
              "phone_recording:read:admin",
              "phone:read:list_recordings",
              "phone:read:list_recordings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:read",
            "phone:read:admin",
            "phone_recording:read",
            "phone_recording:read:admin"
          ],
          "x-granular-scopes": [
            "phone:read:list_recordings",
            "phone:read:list_recordings:admin"
          ]
        }
      }
    },
    "/phone/reports/call_charges": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get call charges usage report",
        "description": "Retrieves the Phone Call Charges Report. \n\nThe Call charges usage report allows account owners and admins to view monthly Zoom phone call charges. Account owners and admins can also access this information when they log into their Zoom accounts and navigate to [Call Charges Usage Report](https://zoom.us/pbx/page/report/system#/report/phone-system/charge?page_size=15&amp;chargeRestrict=0&amp;by=1).\n\n **Prerequisites:** \n\n* Account must be enrollled in Pro or a higher plan\n* Account must be enrolled in a [Zoom Phone](https://zoom.us/pricing/zoom-phone) plan\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:call_charges:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "GetCallChargesUsageReport",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. The from date should not exceed recent 13 months. If unspecified, it returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. The end time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format is the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records to be returned within a single API call. The default is **30** and the maximum is **300**.",
            "required": false,
            "schema": { "type": "integer", "example": 30 }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes..",
            "required": false,
            "schema": {
              "type": "string",
              "example": "cWiI3vTqdcENiV9RJz3Rh8iP1ksNPheW8c1"
            }
          },
          {
            "name": "billing_account_id",
            "in": "query",
            "description": "The billing account ID.",
            "required": false,
            "schema": { "type": "string", "example": "3WWAEiEjTj2IQuyDiKMd_A" }
          },
          {
            "name": "show_charges_only",
            "in": "query",
            "description": "This field shows calls with charges only. The default value is `false`.",
            "required": false,
            "schema": { "type": "boolean", "example": false }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`\n\nCall charges returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The given page size. ",
                      "example": 20,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned within a single API call.",
                      "example": 10
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date of the call.",
                      "example": "2021-10-01"
                    },
                    "to": {
                      "type": "string",
                      "description": "The end time and date of the SMS/MMS.",
                      "example": "2021-10-12"
                    },
                    "call_charges": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "An array of call charges",
                      "items": {
                        "type": "object",
                        "properties": {
                          "call_log_id": {
                            "type": "string",
                            "description": "The ID of the call log. You can use this value to fetch the details of the call log using [Get call log details](https://developers.zoom.us/docs/api/rest/reference/phone/methods/#operation/getCallLogDetails).",
                            "example": "1csf78-e9a8-4e14-859e-94ce323a9eef"
                          },
                          "caller_number": {
                            "type": "string",
                            "description": "The caller's phone number.",
                            "example": "1001"
                          },
                          "caller_billing_number": {
                            "type": "string",
                            "description": "The caller's billing phone number.",
                            "example": "+2100000980"
                          },
                          "callee_number": {
                            "type": "string",
                            "description": "The callee's phone number.",
                            "example": "1008"
                          },
                          "callee_billing_number": {
                            "type": "string",
                            "description": "The callee's billing phone number.",
                            "example": "+21058945728"
                          },
                          "call_type": {
                            "type": "string",
                            "description": "The type of call:\n* `voip` (Voice over IP)\n* `local` (Public Switched Telephone Network)\n* `tollfree`\n* `international`\n* `callCenter`",
                            "example": "voip",
                            "enum": [
                              "voip",
                              "local",
                              "tollfree",
                              "international",
                              "callCenter"
                            ]
                          },
                          "service_type": {
                            "type": "string",
                            "description": "The type of service:\n* `meeting` \n* `call` (normal call)`",
                            "example": "call",
                            "enum": ["meeting", "call"]
                          },
                          "calling_party_name": {
                            "type": "string",
                            "description": "The name of the calling party.",
                            "example": "User"
                          },
                          "cost_center": {
                            "type": "string",
                            "description": "The name of the cost center.",
                            "example": "Phone cost center"
                          },
                          "employee_id": {
                            "type": "string",
                            "description": "The employee's ID.",
                            "example": "A9877"
                          },
                          "department": {
                            "type": "string",
                            "description": "The name of the department.",
                            "example": "Engineering"
                          },
                          "end_time": {
                            "type": "string",
                            "description": "The call end time in GMT `date-time` format.",
                            "example": "2021-10-08T16:12:15Z"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The duration of the call in minutes.",
                            "example": 1
                          },
                          "charge_mode": {
                            "type": "string",
                            "description": "The mode of charging.",
                            "example": "per_min",
                            "enum": [
                              "per_min",
                              "per_call",
                              "per_call_per_min",
                              "per_min_after_t_duration",
                              "per_call_per_min_after_t_duration"
                            ],
                            "x-enum-descriptions": [
                              "per minute",
                              "per call",
                              "per call and per minute",
                              "per minute after t duration",
                              "per call and per minute after t"
                            ]
                          },
                          "rate": {
                            "type": "string",
                            "description": "The rate of billing.",
                            "example": "0.0205"
                          },
                          "currency": {
                            "type": "string",
                            "description": "The currency of the billed amount.",
                            "example": "USD"
                          },
                          "total_charge": {
                            "type": "string",
                            "description": "The total charge.",
                            "example": "0"
                          },
                          "billing_number": {
                            "type": "string",
                            "description": "The billing number.",
                            "example": "2100000980 Ext. 1001"
                          },
                          "forward_number_billing": {
                            "type": "string",
                            "description": "The billing for the forward number.",
                            "example": "2100000980"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n The next page token is invalid or expired. <br>\n**Error Code:** `400` <br>\n The billing_account_id is invalid. <br>\n**Error Code:** `400` <br>\n Invalid start date. Report is provided only for recent 13 months. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:call_charges:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:call_charges:admin"]
        }
      }
    },
    "/phone/reports/operationlogs": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get operation logs report",
        "description": "Retrieves the phone system operation logs report.\n\nThe phone system operation logs report allows account owners and admins to view monthly Zoom phone related admin operation details. \n\n Account owners and admins can also access this information by logging into their Zoom accounts and navigating to [Phone System Operation Logs](https://zoom.us/pbx/page/report/operations#/report/operation-logs).  \n   \n  **Prerequisites:**   \n \n* Account must be enrollled in Pro or a higher plan\n* Account must be enrolled in a [Zoom Phone](https://zoom.us/pricing/zoom-phone) plan\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:operation_logs:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "getPSOperationLogs",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd**format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. If unspecified, returns data within the 24 hours.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2020-11-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. The end time and date is in **yyyy-mm-dd** format; the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          },
          {
            "name": "category_type",
            "in": "query",
            "description": "This field filters the response by the category of the action performed. By default, the value of this field is &quot;all&quot; and thus, the response will include log of all operations for the defined period.  \n   \n To only include response for a specific category type, provide a value for `category_type` from this [table](https://marketplace.zoom.us/docs/api-reference/other-references/phone-operation-categories).",
            "required": false,
            "schema": { "type": "string", "example": "all", "default": "all" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nReport returned.",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "type": "object",
                      "properties": {
                        "next_page_token": {
                          "type": "string",
                          "description": "The next page token paginates through a large set of result. A next page token returns whenever the set of the available result list exceeds the page size. The expiration period is 15 minutes.",
                          "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
                        },
                        "page_size": {
                          "maximum": 300,
                          "type": "integer",
                          "description": "The amount of records returns within a single API call. ",
                          "example": 20,
                          "default": 30
                        }
                      },
                      "description": "The pagination object."
                    },
                    {
                      "type": "object",
                      "properties": {
                        "total_records": {
                          "type": "integer",
                          "description": "The total number of records returned.",
                          "example": 10
                        },
                        "from": {
                          "type": "string",
                          "description": "The start time and date of the log.",
                          "example": "2021-10-01"
                        },
                        "to": {
                          "type": "string",
                          "description": "The end time and date of the log.",
                          "example": "2021-10-12"
                        }
                      }
                    },
                    {
                      "type": "object",
                      "properties": {
                        "operation_logs": {
                          "type": "array",
                          "description": "The array of operation log objects.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "action": {
                                "type": "string",
                                "description": "The action that was performed.",
                                "example": "ADD"
                              },
                              "category_type": {
                                "type": "string",
                                "description": "The category type of the operation.",
                                "example": "Phone Number"
                              },
                              "operation_detail": {
                                "type": "string",
                                "description": "The Operation details.",
                                "example": "Add BYOC +86 182 5188 5564"
                              },
                              "operator": {
                                "type": "string",
                                "description": "The user who performed the operation.",
                                "example": "user@test.com"
                              },
                              "time": {
                                "type": "string",
                                "description": "The time at which the operation was performed.",
                                "format": "date-time"
                              }
                            }
                          }
                        }
                      }
                    }
                  ]
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `124` <br>\n Account does not exist: {accountId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:operation_logs:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:operation_logs:admin"]
        }
      }
    },
    "/phone/reports/sms_charges": {
      "get": {
        "tags": ["Reports"],
        "summary": "Get SMS/MMS charges usage report",
        "description": "Retrieves the **SMS/MMS Charges Report**.  The **SMS/MMS charges usage report** allows account owners and admins to view monthly Zoom phone call charges. Account owners and admins can also access this information by when they log into their Zoom accounts and navigate to [ SMS/MMS Charges Usage Report](https://zoom.us/pbx/page/report/system#/report/phone-system/charge?page_size=15&amp;chargeRestrict=0&amp;by=2).  **Prerequisites:**  * Account must be enrolled in Pro or a higher plan * Account must be enrolled in a [Zoom Phone](https://zoom.us/pricing/zoom-phone) plan\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:sms_charges:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "GetSMSChargesUsageReport",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. The from date should not exceed recent 13 months. If unspecified, it returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "This field is **required** only when you specify the `from` parameter. End time and date is in a **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format.  The `from` parameter uses the the same format.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call. The default is **30**, and the maximum is **300**.",
            "required": false,
            "schema": { "type": "integer", "example": 30 }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The current page number of returned records.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "cWiI3vTqdcENiV9RJz3Rh8iP1ksNPheW8c1"
            }
          },
          {
            "name": "show_charges_only",
            "in": "query",
            "description": "This field shows sms/mms with charges only. Defaults to false.",
            "required": false,
            "schema": { "type": "boolean", "example": false }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`\n\n SMS/MMS charges successfully returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The amount of records returns within a single API call. ",
                      "example": 20
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 10
                    },
                    "from": {
                      "type": "string",
                      "description": "The start time and date of the sms/mms",
                      "example": "2021-10-01"
                    },
                    "to": {
                      "type": "string",
                      "description": "The end time and date of the sms/mms",
                      "example": "2021-10-12"
                    },
                    "sms_charges": {
                      "maxItems": 300,
                      "type": "array",
                      "description": "An array of sms/mms charges",
                      "items": {
                        "type": "object",
                        "properties": {
                          "session_id": {
                            "type": "string",
                            "description": "The session ID. You can use this value to fetch the sms session details using [Get SMS session details](https://developers.zoom.us/docs/api/rest/reference/phone/methods/#operation/smsSessionDetails).",
                            "example": "da21222c4254690b545b305d6616e261"
                          },
                          "message_id": {
                            "type": "string",
                            "description": "The message ID. You can use this value to fetch details about a specific message in an SMS session using [Get SMS by message ID](https://developers.zoom.us/docs/api/rest/reference/phone/methods/#operation/smsByMessageId).",
                            "example": "2159E06A-7195-4B54-831E-54DB8FDEC510"
                          },
                          "message_type": {
                            "type": "string",
                            "description": "The message type",
                            "example": "SMS"
                          },
                          "from_number": {
                            "type": "string",
                            "description": "The sender's phone number.",
                            "example": "2019980987"
                          },
                          "from_extension_number": {
                            "type": "string",
                            "description": "The sender's extension number.",
                            "example": "1008"
                          },
                          "from_display_name": {
                            "type": "string",
                            "description": "The sender's display name.",
                            "example": "Sender A"
                          },
                          "to_number": {
                            "type": "string",
                            "description": "The receiver's phone number.",
                            "example": "2013450986"
                          },
                          "to_extension_number": {
                            "type": "string",
                            "description": "The receiver's extension number.",
                            "example": "1008"
                          },
                          "to_display_name": {
                            "type": "string",
                            "description": "The receiver's display name.",
                            "example": "Receiver A"
                          },
                          "sent_time": {
                            "type": "string",
                            "description": "The UTC time the message was sent.",
                            "example": "2022-03-23T02:58:01Z"
                          },
                          "billing_number": {
                            "type": "string",
                            "description": "The billing phone number.",
                            "example": "+2100000980"
                          },
                          "cost_center": {
                            "type": "string",
                            "description": "The name of the cost center.",
                            "example": "Phone cost center"
                          },
                          "department": {
                            "type": "string",
                            "description": "The name of the department.",
                            "example": "Engineering"
                          },
                          "rate": {
                            "type": "string",
                            "description": "The rate of billing.",
                            "example": "0.0205"
                          },
                          "currency": {
                            "type": "string",
                            "description": "Currency of the billed amount.",
                            "example": "USD"
                          },
                          "total_charge": {
                            "type": "string",
                            "description": "The total charge.",
                            "example": "0"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n The next page token is invalid or expired <br>\n**Error Code:** `400` <br>\n Invalid start date. Report is provided only for recent 13 months <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:sms_charges:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:sms_charges:admin"]
        }
      }
    },
    "/phone/routing_rules": {
      "get": {
        "tags": ["Routing Rules"],
        "summary": "List directory backup routing rules",
        "description": "Returns a list of directory backup routing rules. The directory backup routing rules are a series of predefined Regular Expressions. These rules are used to route outgoing calls. If a dialed number does not match a Zoom Phone user, and does not match a defined External Contact, these rules are tested next. If a dialed number does not match any rules, the call will be routed via the PSTN. **Prerequisites:** * A Business or Enterprise account * A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_routing_rules:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listRoutingRule",
        "parameters": [
          {
            "name": "site_id",
            "in": "query",
            "description": "The unique identifier of the site.",
            "required": false,
            "schema": { "type": "string", "example": "NjHmTu16Qfe8yOiNJuekXA" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nList directory backup routing rules.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string",
                        "description": "The routing rule name.",
                        "example": "testRoutingRule"
                      },
                      "number_pattern": {
                        "type": "string",
                        "description": "The Perl-compatible number_pattern expression.",
                        "example": "testNumberPattern"
                      },
                      "order": {
                        "type": "integer",
                        "description": "The rule order to be applied: '1' being the highest.",
                        "example": 1
                      },
                      "routing_path": {
                        "type": "object",
                        "properties": {
                          "sip_group": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The unique identifier of the SIP group.",
                                "example": "KrjExB4mSuWYkpIRLEjjpQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The SIP group name.",
                                "example": "sip_test_customer_id2"
                              }
                            },
                            "description": "It cannot be null when 'type' = 'sip_group'."
                          },
                          "type": {
                            "type": "string",
                            "description": "The routing rule type.",
                            "example": "sip_group",
                            "enum": ["other_sites", "pstn", "sip_group"]
                          }
                        }
                      },
                      "routing_rule_id": {
                        "type": "string",
                        "description": "The Unique identifier of the routing rule.",
                        "example": "LVkqTcxNQt6d-W45e0Jc6Q"
                      },
                      "site_id": {
                        "type": "string",
                        "description": "The unique identifier of the site: nullable if the routing rule is at an account level.",
                        "example": "NjHmTu16Qfe8yOiNJuekXA"
                      },
                      "translation": {
                        "type": "string",
                        "description": "The optional replacement pattern: must be in E.164 format.",
                        "example": "/[1-9]/"
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_routing_rules:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_routing_rules:admin"]
        }
      },
      "post": {
        "tags": ["Routing Rules"],
        "summary": "Add directory backup routing rule",
        "description": "Creates a directory backup routing rule. \n\nThe directory backup routing rules are a series of predefined regular expressions. These rules are used to route outgoing calls. If a dialed number does not match a Zoom Phone user, and does not match a defined external contact, these rules are tested next. If a dialed number does not match any rules, the call will be routed through the PSTN.\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:routing_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addRoutingRule",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The routing rule name.",
                    "example": "testRule"
                  },
                  "number_pattern": {
                    "type": "string",
                    "description": "The Perl-compatible number_pattern expression.",
                    "example": "testPattern"
                  },
                  "sip_group_id": {
                    "type": "string",
                    "description": "The unique identifier of the SIP group. it cannot be null when 'type' = 'sip_group'.",
                    "example": "KrjExB4mSuWYkpIRLEjjpQ"
                  },
                  "site_id": {
                    "type": "string",
                    "description": "The unique identifier of the site.`nullable`",
                    "example": "aATWYNqFQDetJQ5tCX6d6g"
                  },
                  "translation": {
                    "type": "string",
                    "description": "The optional replacement pattern. It must be in E.164 format.`nullable`",
                    "example": "/[1-9]/"
                  },
                  "type": {
                    "type": "string",
                    "description": "The routing path type.",
                    "example": "sip_group",
                    "enum": ["other_sites", "pstn", "sip_group"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **No Content**  \n \nDirectory backup routing rule added.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The routing rule name.",
                      "example": "testRule"
                    },
                    "routing_rule_id": {
                      "type": "string",
                      "description": "The unique identifier of the routing rule.",
                      "example": "LVkqTcxNQt6d-W45e0Jc6Q"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Type does not exist.\nType cannot be null.\nNumber Pattern cannot be null.\nNumber Pattern length can be up to 255 characters.\nSIP Group cannot be null.\nNumber Pattern ({0}) already exists.\nTranslation length can be up to 255 characters.\nRouting rule name cannot be blank.\nRouting rule name length can be up to 255 characters. <br>\n**Error Code:** `404` <br>\n SIP Group does not exist.\nSite does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:routing_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:routing_rule:admin"]
        }
      }
    },
    "/phone/routing_rules/{routingRuleId}": {
      "get": {
        "tags": ["Routing Rules"],
        "summary": "Get directory backup routing rule",
        "description": "Returns the directory backup routing rule. The directory backup routing rules are a series of predefined Regular Expressions. These rules are used to route outgoing calls. If a dialed number does not match a Zoom Phone user, and does not match a defined External Contact, these rules are tested next. If a dialed number does not match any rules, the call will be routed via the PSTN.**Prerequisites:** * A Business or Enterprise account * A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:routing_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "getRoutingRule",
        "parameters": [
          {
            "name": "routingRuleId",
            "in": "path",
            "description": "The unique identifier of the routing rule.",
            "required": true,
            "schema": { "type": "string", "example": "LVkqTcxNQt6d-W45e0Jc6Q" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n \nGet directory backup routing rule.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "The routing rule name.",
                      "example": "testRule"
                    },
                    "number_pattern": {
                      "type": "string",
                      "description": "The Perl-compatible number_pattern expression.",
                      "example": "testPattern"
                    },
                    "order": {
                      "type": "integer",
                      "description": "The routing rule order to be applied: '1' being the highest.",
                      "example": 1
                    },
                    "routing_path": {
                      "type": "object",
                      "properties": {
                        "sip_group": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The unique identifier of the SIP group.",
                              "example": "KrjExB4mSuWYkpIRLEjjpQ"
                            },
                            "name": {
                              "type": "string",
                              "description": "The SIP group name.",
                              "example": "sip_test_customer_id2"
                            }
                          },
                          "description": "It cannot be null when 'type' = 'sip_group'."
                        },
                        "type": {
                          "type": "string",
                          "description": "The routing rule type.",
                          "example": "sip_group",
                          "enum": ["other_sites", "pstn", "sip_group"]
                        }
                      }
                    },
                    "routing_rule_id": {
                      "type": "string",
                      "description": "The unique identifier of the routing rule.",
                      "example": "LVkqTcxNQt6d-W45e0Jc6Q"
                    },
                    "site_id": {
                      "type": "string",
                      "description": "The unique identifier of the site.",
                      "example": "aATWYNqFQDetJQ5tCX6d6g"
                    },
                    "translation": {
                      "type": "string",
                      "description": "The optional replacement pattern: must be in E.164 format.",
                      "example": "/[1-9]/"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:routing_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:routing_rule:admin"]
        }
      },
      "delete": {
        "tags": ["Routing Rules"],
        "summary": "Delete directory backup routing rule",
        "description": "Deletes the directory backup routing rule. \n\nThe directory backup routing rules are a series of predefined Regular Expressions. These rules are used to route outgoing calls. If a dialed number does not match a Zoom Phone user, and does not match a defined External Contact, these rules are tested next. If a dialed number does not match any rules, the call will be routed via the PSTN.\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:routing_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteRoutingRule",
        "parameters": [
          {
            "name": "routingRuleId",
            "in": "path",
            "description": "The unique identifier of the routing rule.",
            "required": true,
            "schema": { "type": "string", "example": "LVkqTcxNQt6d-W45e0Jc6Q" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nDirectory backup routing rule deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `404` <br>\n Routing rule does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:routing_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:routing_rule:admin"]
        }
      },
      "patch": {
        "tags": ["Routing Rules"],
        "summary": "Update directory backup routing rule",
        "description": "Updates the directory backup routing rule. \n\nThe directory backup routing rules are a series of predefined regular expressions. These rules are used to route outgoing calls. If a dialed number does not match a Zoom Phone user, and does not match a defined external contact, these rules are tested next. If a dialed number does not match any rules, the call will be routed through the PSTN.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:routing_rule:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateRoutingRule",
        "parameters": [
          {
            "name": "routingRuleId",
            "in": "path",
            "description": "The unique identifier of the routing rule.",
            "required": true,
            "schema": { "type": "string", "example": "LVkqTcxNQt6d-W45e0Jc6Q" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The routing rule name.",
                    "example": "testRuleName"
                  },
                  "number_pattern": {
                    "type": "string",
                    "description": "The Perl-compatible number_pattern expression.",
                    "example": "testNumberPattern"
                  },
                  "order": {
                    "type": "integer",
                    "description": "TherRouting rule order to be applied: '1' being the highest. Order inserting occurs when this field is filled. It will automatically readjust the order of rules between the target order and the current order.",
                    "example": 2
                  },
                  "sip_group_id": {
                    "type": "string",
                    "description": "The unique identifier of the SIP Group: must not be null when 'type' = 'sip_group'.",
                    "example": "fd9f"
                  },
                  "translation": {
                    "type": "string",
                    "description": "Optional replacement pattern: must be in E.164 format. `nullable` ",
                    "example": "/[1-9]/"
                  },
                  "type": {
                    "type": "string",
                    "description": "The routing path type.",
                    "example": "other_sites",
                    "enum": ["other_sites", "pstn", "sip_group"]
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nDirectory backup routing rule updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Type does not exist.\nSIP Group cannot be null.\nNumber Pattern ({0}) already exists.\nRouting rule name length can be up to 255 characters.\nNumber Pattern length can be up to 255 characters.\nTranslation length can be up to 255 characters. <br>\n**Error Code:** `404` <br>\n Routing rule does not exist.\nSIP Group does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:routing_rule:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:routing_rule:admin"]
        }
      }
    },
    "/phone/sms/sessions": {
      "get": {
        "tags": ["SMS"],
        "summary": "Get account's SMS sessions",
        "description": "Returns details about SMS sessions for an account.\n\n**Prerequisites**\n* Paid account\n* User-enabled Zoom phone\n\n\n\n**Scopes:** `phone:read:admin`,`phone_sms:read`,`phone_sms:read:admin`\n\n**Granular Scopes:** `phone:read:list_sms_sessions`,`phone:read:list_sms_sessions:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "accountSmsSession",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The current page number of returned records.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2z0Ov7kngllAbfQi4ZR2eQTb3mFVYQpYAe2"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. \n\nThe date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. \n\nIf unspecified, it returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "This field is required only when the `from` parameter is specified. \n\nEnd time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          },
          {
            "name": "session_type",
            "in": "query",
            "description": "This field filters the specific session list by a session type.\n\nThe value for this field can be one of the following:  \n `user`  \n `call_queue`  \n `auto_receptionist`  \n `all`",
            "required": false,
            "schema": { "type": "string", "example": "user", "default": "user" }
          },
          {
            "name": "phone_number",
            "in": "query",
            "description": "The sender's or receiver's phone number that limits the list of SMS sessions.",
            "required": false,
            "schema": { "type": "string", "example": "18108001001" }
          },
          {
            "name": "filter_type",
            "in": "query",
            "description": "This field filters by `sent_message_time`, `received_message_time`, or `last_message_time` for the From and To dates.\n* `last_message_time`: queries which sessions last messages between From and To dates.\n* `sent_message_time`: queries which sessions have sent messages between From and To dates.\n* `received_message_time`: queries which sessions have received messages between From and To dates.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "last_message_time",
              "default": "last_message_time",
              "enum": [
                "sent_message_time",
                "received_message_time",
                "last_message_time"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of the available result list exceeds the page size.",
                      "example": "2z0Ov7kngllAbfQi4ZR2eQTb3mFVYQpYAe3"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The size of each page.",
                      "example": 30
                    },
                    "sms_sessions": {
                      "maxItems": 100,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "last_access_time": {
                            "type": "string",
                            "description": "The last send or receive time in UTC.",
                            "example": "2022-03-25T02:11:27Z"
                          },
                          "participants": {
                            "maxItems": 10,
                            "type": "array",
                            "description": "The SMS members.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "display_name": {
                                  "type": "string",
                                  "description": "The participant name.",
                                  "example": "test api"
                                },
                                "owner": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The owner ID.",
                                      "example": "DnEopNmXQEGU2uvvzjgojw"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`sharedLineGroup`",
                                      "example": "user",
                                      "enum": [
                                        "user",
                                        "callQueue",
                                        "autoReceptionist",
                                        "sharedLineGroup"
                                      ]
                                    }
                                  }
                                },
                                "phone_number": {
                                  "type": "string",
                                  "description": "The participant phone number.",
                                  "example": "18108001001"
                                },
                                "is_session_owner": {
                                  "type": "boolean",
                                  "description": "Whether it is the owner of the session.",
                                  "example": true
                                },
                                "extension_status": {
                                  "type": "string",
                                  "description": "This field indicates the status of the extension. \n* `inactive` \n* `deleted`",
                                  "example": "deleted",
                                  "enum": ["inactive", "deleted"]
                                },
                                "extension_deleted_time": {
                                  "type": "string",
                                  "description": "The date time the extension was deleted. It exists only when extension_status is `deleted`.",
                                  "example": "2022-10-14T22:10:54Z"
                                }
                              }
                            }
                          },
                          "session_id": {
                            "type": "string",
                            "description": "The SMS session ID.",
                            "example": "d39fc7e14ef9f2b6453f5f02524d79a2"
                          },
                          "session_type": {
                            "type": "string",
                            "description": "The session type.\nThe value for this field can be one of the following:  \n `user`  \n `call_queue`  \n `auto_receptionist`",
                            "example": "user"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n SMS session type is invalid. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Account does not exist: {accountId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `7012` <br>\n Error retrieving SMS. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone_sms:read",
              "phone_sms:read:admin",
              "phone:read:list_sms_sessions",
              "phone:read:list_sms_sessions:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:read:admin",
            "phone_sms:read",
            "phone_sms:read:admin"
          ],
          "x-granular-scopes": [
            "phone:read:list_sms_sessions",
            "phone:read:list_sms_sessions:admin"
          ]
        }
      }
    },
    "/phone/sms/sessions/{sessionId}": {
      "get": {
        "tags": ["SMS"],
        "summary": "Get SMS session details",
        "description": "Returns details about an SMS session.\n\n**Prerequisites**\n* Paid account\n* User-enabled Zoom phone\n\n\n\n**Scopes:** `phone:read:admin`,`phone:read`,`phone_sms:read`,`phone_sms:read:admin`\n\n**Granular Scopes:** `phone:read:sms_session`,`phone:read:sms_session:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "smsSessionDetails",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The SMS session ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "35ccd84704253f5f793d0a721c7fe655"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The current page number of returned records.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "2z0Ov7kngllAbfQi4ZR2eQTb3mFVYQpYAe2"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. If unspecified, returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          },
          {
            "name": "sort",
            "in": "query",
            "description": "The order of the SMS to return based on creation time. `1`: ascending `2`: descending",
            "required": false,
            "schema": { "type": "integer", "example": 1 }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. It returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "2z0Ov7kngllAbfQi4ZR2eQTb3mFVYQpYAe4"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The size of the page.",
                      "example": 30
                    },
                    "sms_histories": {
                      "maxItems": 100,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "attachments": {
                            "maxItems": 10,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "download_url": {
                                  "type": "string",
                                  "description": "The download link for the media file.",
                                  "example": "https://exampleurl.us/file/download/x18dcVWxTcCzbp4zr2AT3A?jwt=eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjcm9zc2ZpbGUiLCJhdWQiOiJmaWxlIiwiZGlnIjoiYTZkODE4NzQ2MDNmN2UzZWM4OThkNDMxM2IxNjNhNTQ4NGI4MjkxMTA0ZmQyYzc4MTg1NmY0MGUxY2FlOTI3YyIsImV4cCI6MTY0ODE5NDA1NH0.eCURcan9QOOw9wvBdSn_-TBzgT5HWBzp04IfsK19Oto"
                                },
                                "id": {
                                  "type": "string",
                                  "description": "The media file ID.",
                                  "example": "x18dcVWxTcCzbp4zr2AT3A"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The file name.",
                                  "example": "FWDHOMaNRaqIvNc3aIdisg.jpg"
                                },
                                "size": {
                                  "type": "integer",
                                  "description": "The file size.",
                                  "example": 225740
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The file type: OTHER, PNG, GIF, JPG, AUDIO, VIDEO",
                                  "example": "JPG/JPEG",
                                  "enum": [
                                    "OTHER",
                                    "PNG",
                                    "GIF",
                                    "JPG",
                                    "AUDIO",
                                    "VIDEO"
                                  ]
                                }
                              }
                            }
                          },
                          "date_time": {
                            "type": "string",
                            "description": "The UTC time the message was created.",
                            "example": "2022-03-23T02:58:01Z"
                          },
                          "direction": {
                            "type": "string",
                            "description": "Whether the direction is In or Out.",
                            "example": "In"
                          },
                          "message": {
                            "type": "string",
                            "description": "The contents of the SMS text.",
                            "example": "welcome"
                          },
                          "message_id": {
                            "type": "string",
                            "description": "The message ID.",
                            "example": "IQ-cRH5P5EiTWCwpNzScnECJw"
                          },
                          "message_type": {
                            "type": "integer",
                            "description": "The message type:  \n \n1 - SMS  \n \n2 - MMS  \n \n3 - GROUP_SMS  \n \n4 - GROUP_MMS  \n \n5 - SMS_INTER  \n \n6 - MSG_ON_NET",
                            "example": 2,
                            "enum": [1, 2, 3, 4, 5, 6]
                          },
                          "sender": {
                            "required": ["phone_number"],
                            "type": "object",
                            "properties": {
                              "display_name": {
                                "type": "string",
                                "description": "The sender's name.",
                                "example": "test api"
                              },
                              "owner": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The owner ID.",
                                    "example": "DnEopNmXQEGU2uvvzjgojw"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`sharedLineGroup`",
                                    "example": "user",
                                    "enum": [
                                      "user",
                                      "callQueue",
                                      "autoReceptionist",
                                      "sharedLineGroup"
                                    ]
                                  }
                                }
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "The sender's phone number.",
                                "example": "18108001001"
                              }
                            }
                          },
                          "to_members": {
                            "maxItems": 10,
                            "type": "array",
                            "items": {
                              "required": ["phone_number"],
                              "type": "object",
                              "properties": {
                                "display_name": {
                                  "type": "string",
                                  "description": "The participant's name.",
                                  "example": "ezreal mao"
                                },
                                "owner": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The owner ID.",
                                      "example": "WeD59Hn7SvqNRB9jcxz5NQ"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`sharedLineGroup`",
                                      "example": "user",
                                      "enum": [
                                        "user",
                                        "callQueue",
                                        "autoReceptionist",
                                        "sharedLineGroup"
                                      ]
                                    }
                                  }
                                },
                                "phone_number": {
                                  "type": "string",
                                  "description": "The receiver's phone number.",
                                  "example": "12092693625"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n The next page token is invalid or expired.\r\nRequires from and to\r\npage number should be > 0 <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Access token has expired. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n**Error Code:** `7013` <br>\n Error retrieving SMS history. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read",
              "phone_sms:read",
              "phone_sms:read:admin",
              "phone:read:sms_session",
              "phone:read:sms_session:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:read:admin",
            "phone:read",
            "phone_sms:read",
            "phone_sms:read:admin"
          ],
          "x-granular-scopes": [
            "phone:read:sms_session",
            "phone:read:sms_session:admin"
          ]
        }
      }
    },
    "/phone/sms/sessions/{sessionId}/messages/{messageId}": {
      "get": {
        "tags": ["SMS"],
        "summary": "Get SMS by message ID",
        "description": "Returns details about a specific message in an SMS session.\n\n**Prerequisites**\n* Paid account\n* User-enabled Zoom phone\n\n\n\n**Scopes:** `phone:read:admin`,`phone:read`,`phone_sms:read`,`phone_sms:read:admin`\n\n**Granular Scopes:** `phone:read:sms_message`,`phone:read:sms_message:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "smsByMessageId",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The SMS session ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "d153b9dbe20e662197bda28d00206011"
            }
          },
          {
            "name": "messageId",
            "in": "path",
            "description": "The SMS message ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "IQ-cRH5P5EiTWCwpNzScnECJw"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "attachments": {
                      "maxItems": 10,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "download_url": {
                            "type": "string",
                            "description": "The download link for the media file.",
                            "example": "https://exampleurl.us/file/download/x18dcVWxTcCzbp4zr2AT3A?jwt=eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjcm9zc2ZpbGUiLCJhdWQiOiJmaWxlIiwiZGlnIjoiYTZkODE4NzQ2MDNmN2UzZWM4OThkNDMxM2IxNjNhNTQ4NGI4MjkxMTA0ZmQyYzc4MTg1NmY0MGUxY2FlOTI3YyIsImV4cCI6MTY0ODE5NDA1NH0.eCURcan9QOOw9wvBdSn_-TBzgT5HWBzp04IfsK19Oto"
                          },
                          "id": {
                            "type": "string",
                            "description": "The media file ID.",
                            "example": "x18dcVWxTcCzbp4zr2AT3A"
                          },
                          "name": {
                            "type": "string",
                            "description": "The file name.",
                            "example": "FWDHOMaNRaqIvNc3aIdisg.jpg"
                          },
                          "size": {
                            "type": "integer",
                            "description": "The file size.",
                            "example": 225740
                          },
                          "type": {
                            "type": "string",
                            "description": "The file type: OTHER, PNG, GIF, JPG, AUDIO, VIDEO",
                            "example": "JPG/JPEG",
                            "enum": [
                              "OTHER",
                              "PNG",
                              "GIF",
                              "JPG",
                              "AUDIO",
                              "VIDEO"
                            ]
                          }
                        }
                      }
                    },
                    "date_time": {
                      "type": "string",
                      "description": "The UTC time the message was created.",
                      "example": "2022-03-23T02:58:01Z"
                    },
                    "direction": {
                      "type": "string",
                      "description": "The direction is either in or out",
                      "example": "In"
                    },
                    "message": {
                      "type": "string",
                      "description": "The SMS text contents.",
                      "example": "welcome"
                    },
                    "message_id": {
                      "type": "string",
                      "description": "The message ID.",
                      "example": "IQ-cRH5P5EiTWCwpNzScnECJw"
                    },
                    "message_type": {
                      "type": "integer",
                      "description": "The message type:  \n \n1 - SMS  \n \n2 - MMS  \n \n3 - GROUP_SMS  \n \n4 - GROUP_MMS  \n \n5 - SMS_INTER  \n \n6 - MSG_ON_NET",
                      "example": 2,
                      "enum": [1, 2, 3, 4, 5, 6]
                    },
                    "sender": {
                      "required": ["phone_number"],
                      "type": "object",
                      "properties": {
                        "display_name": {
                          "type": "string",
                          "description": "The sender's name.",
                          "example": "ezreal mao"
                        },
                        "owner": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The owner ID.",
                              "example": "WeD59Hn7SvqNRB9jcxz5NQ"
                            },
                            "type": {
                              "type": "string",
                              "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`sharedLineGroup`",
                              "example": "user",
                              "enum": [
                                "user",
                                "callQueue",
                                "autoReceptionist",
                                "sharedLineGroup"
                              ]
                            }
                          }
                        },
                        "phone_number": {
                          "type": "string",
                          "description": "The sender's phone number.",
                          "example": "12092693625"
                        }
                      }
                    },
                    "to_members": {
                      "maxItems": 10,
                      "type": "array",
                      "items": {
                        "required": ["phone_number"],
                        "type": "object",
                        "properties": {
                          "display_name": {
                            "type": "string",
                            "description": "The participant's name.",
                            "example": "test api"
                          },
                          "owner": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The owner ID.",
                                "example": "DnEopNmXQEGU2uvvzjgojw"
                              },
                              "type": {
                                "type": "string",
                                "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`sharedLineGroup`",
                                "example": "user",
                                "enum": [
                                  "user",
                                  "callQueue",
                                  "autoReceptionist",
                                  "sharedLineGroup"
                                ]
                              }
                            }
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The receiver's phone number.",
                            "example": "18108001001"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `1004` <br>\n Not allow to access this account. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Access token has expired. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read",
              "phone_sms:read",
              "phone_sms:read:admin",
              "phone:read:sms_message",
              "phone:read:sms_message:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:read:admin",
            "phone:read",
            "phone_sms:read",
            "phone_sms:read:admin"
          ],
          "x-granular-scopes": [
            "phone:read:sms_message",
            "phone:read:sms_message:admin"
          ]
        }
      }
    },
    "/phone/sms/sessions/{sessionId}/sync": {
      "get": {
        "tags": ["SMS"],
        "summary": "Sync SMS by session ID",
        "description": "Syncs SMS messages in a session. \n\n**Prerequisites**\n* Paid account\n* User-enabled Zoom phone\n\n\n\n**Scopes:** `phone:read:admin`,`phone:read`,`phone_sms:read`,`phone_sms:read:admin`\n\n**Granular Scopes:** `phone:read:sms_session`,`phone:read:sms_session:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "smsSessionSync",
        "parameters": [
          {
            "name": "sessionId",
            "in": "path",
            "description": "The SMS session ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "35ccd84704253f5f793d0a721c7fe655"
            }
          },
          {
            "name": "sync_type",
            "in": "query",
            "description": "The options for synchronizing SMS message:  \n \nFSync - Full sync  \n \nISync - Increase sync  \n \nBSync - Backward sync",
            "required": false,
            "schema": {
              "type": "string",
              "example": "FSync",
              "enum": ["FSync", "ISync", "BSync"]
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "example": 100
            }
          },
          {
            "name": "sync_token",
            "in": "query",
            "description": "The time range for returned records. It's used for locating where the next retrieval will begin.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "MFgyQ0Z3UDkwaF8xNjQyNDA3MjA3MDE0XzE2NDI0MDcyMDcwMTQ="
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sms_histories": {
                      "maxItems": 250,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "attachments": {
                            "maxItems": 10,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "download_url": {
                                  "type": "string",
                                  "description": "The download link for the media file.",
                                  "example": "https://exampleurl.us/file/download/x18dcVWxTcCzbp4zr2AT3A?jwt=eyJhbGciOiJIUzI1NiJ9.eyJpc3MiOiJjcm9zc2ZpbGUiLCJhdWQiOiJmaWxlIiwiZGlnIjoiYTZkODE4NzQ2MDNmN2UzZWM4OThkNDMxM2IxNjNhNTQ4NGI4MjkxMTA0ZmQyYzc4MTg1NmY0MGUxY2FlOTI3YyIsImV4cCI6MTY0ODE5NDk4OH0.kAh1EnCkjpwAOX_GUfWVPLK2xhnVPRiwm8vDbD-oyVY"
                                },
                                "id": {
                                  "type": "string",
                                  "description": "The media file ID.",
                                  "example": "x18dcVWxTcCzbp4zr2AT3A"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The file's name.",
                                  "example": "FWDHOMaNRaqIvNc3aIdisg.jpg"
                                },
                                "size": {
                                  "type": "integer",
                                  "description": "The file's size.",
                                  "example": 225740
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The file's type: OTHER, PNG, GIF, JPG, AUDIO, VIDEO",
                                  "example": "JPG/JPEG",
                                  "enum": [
                                    "OTHER",
                                    "PNG",
                                    "GIF",
                                    "JPG",
                                    "AUDIO",
                                    "VIDEO"
                                  ]
                                }
                              }
                            }
                          },
                          "date_time": {
                            "type": "string",
                            "description": "The UTC time the message was created.",
                            "example": "2022-03-23T02:58:01Z"
                          },
                          "direction": {
                            "type": "string",
                            "description": "`In`(SMS received) or `Out`(SMS sent)",
                            "example": "In"
                          },
                          "message": {
                            "type": "string",
                            "description": "The content of the SMS.",
                            "example": "welcome"
                          },
                          "message_id": {
                            "type": "string",
                            "description": "The message ID.",
                            "example": "IQ-cRH5P5EiTWCwpNzScnECJw"
                          },
                          "message_type": {
                            "type": "integer",
                            "description": "The message type:  \n \n1 - SMS  \n \n2 - MMS  \n \n3 - GROUP_SMS  \n \n4 - GROUP_MMS  \n \n5 - SMS_INTER  \n \n6 - MSG_ON_NET",
                            "example": 2,
                            "enum": [1, 2, 3, 4, 5, 6]
                          },
                          "sender": {
                            "required": ["phone_number"],
                            "type": "object",
                            "properties": {
                              "display_name": {
                                "type": "string",
                                "description": "The sender's name.",
                                "example": "test api"
                              },
                              "owner": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "description": "The owner ID.",
                                    "example": "DnEopNmXQEGU2uvvzjgojw"
                                  },
                                  "type": {
                                    "type": "string",
                                    "description": "The owner's type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`sharedLineGroup`",
                                    "example": "user",
                                    "enum": [
                                      "user",
                                      "callQueue",
                                      "autoReceptionist",
                                      "sharedLineGroup"
                                    ]
                                  }
                                }
                              },
                              "phone_number": {
                                "type": "string",
                                "description": "The sender's phone number.",
                                "example": "18108001001"
                              }
                            }
                          },
                          "to_members": {
                            "maxItems": 10,
                            "type": "array",
                            "items": {
                              "required": ["phone_number"],
                              "type": "object",
                              "properties": {
                                "display_name": {
                                  "type": "string",
                                  "description": "The SMS recipient's name.",
                                  "example": "callhandling0001@testapi.com"
                                },
                                "owner": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The owner ID.",
                                      "example": "rYgfsrduSXWCxr94poMN5g"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`sharedLineGroup`",
                                      "example": "user",
                                      "enum": [
                                        "user",
                                        "callQueue",
                                        "autoReceptionist",
                                        "sharedLineGroup"
                                      ]
                                    }
                                  }
                                },
                                "phone_number": {
                                  "type": "string",
                                  "description": "The SMS recipient phone number.",
                                  "example": "12762924594"
                                }
                              }
                            }
                          }
                        }
                      }
                    },
                    "sync_token": {
                      "type": "string",
                      "description": "The time range for returned records. It's used for locating where the next retrieval will begin.",
                      "example": "MFgyQ0Z3UDkwaF8xNjQyNDA3MjA3MDE0XzE2NDI0MDcyMDcwMTQ="
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n The sync token is invalid or expired. Please resync with the `FSync` method. <br>\n**Error Code:** `7035` <br>\n The number of new records exceeds the sync count. Please resync with the `FSync` method. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Invalid access token. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `300` <br>\n The sync token is invalid or expired.<br> <br>\n**Error Code:** `12004` <br>\n Session does not exist: {0}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read",
              "phone_sms:read",
              "phone_sms:read:admin",
              "phone:read:sms_session",
              "phone:read:sms_session:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:read:admin",
            "phone:read",
            "phone_sms:read",
            "phone_sms:read:admin"
          ],
          "x-granular-scopes": [
            "phone:read:sms_session",
            "phone:read:sms_session:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/sms/sessions": {
      "get": {
        "tags": ["SMS"],
        "summary": "Get user's SMS sessions",
        "description": "Returns details about SMS sessions for a user. \n\nFor user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites:** \n* Paid account \n* User-enabled Zoom phone\n\n**Scopes:** `phone:read:admin`,`phone:read`,`phone_sms:read`,`phone_sms:read:admin`\n\n**Granular Scopes:** `phone:read:list_sms_sessions`,`phone:read:list_sms_sessions:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "userSmsSession",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID, user email, or &ldquo;me&rdquo; when using OAuth token.",
            "required": true,
            "schema": { "type": "string", "example": "DnEopNmXQEGU2uvvzjgojw" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The current page number of returned records.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "nav48KOj42vYPSG4f0cCdT575bZ980did22"
            }
          },
          {
            "name": "session_type",
            "in": "query",
            "description": "This field filters the specific session list by a session type.\n\nThe value for this field can be one of the following:  \n `user`  \n `call_queue`  \n `auto_receptionist`  \n `all`",
            "required": false,
            "schema": { "type": "string", "example": "user", "default": "user" }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. \n\nThe date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. \n\nIf unspecified, it returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "This field is required only when the `from` parameter is specified. \n\nThe end time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format is the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          },
          {
            "name": "phone_number",
            "in": "query",
            "description": "The sender's or receiver's phone number that limits the list of SMS sessions.",
            "required": false,
            "schema": { "type": "string", "example": "18108001001" }
          },
          {
            "name": "filter_type",
            "in": "query",
            "description": "This field filters by `sent_message_time`, `received_message_time`, or `last_message_time` for the From and To dates.\n* `last_message_time`: can query which sessions last messages between From and To dates.\n* `sent_message_time`: can query which sessions have sent messages between From and To dates.\n* `received_message_time`: can query which sessions have received messages between From and To dates.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "last_message_time",
              "default": "last_message_time",
              "enum": [
                "sent_message_time",
                "received_message_time",
                "last_message_time"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through large result sets. A next page token returns whenever the set of the available result list exceeds the page size.",
                      "example": "2z0Ov7kngllAbfQi4ZR2eQTb3mFVYQpYAe4"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The size of each page.",
                      "example": 30
                    },
                    "sms_sessions": {
                      "maxItems": 100,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "last_access_time": {
                            "type": "string",
                            "description": "The last send or receive time in UTC.",
                            "example": "2022-03-25T02:11:27Z"
                          },
                          "participants": {
                            "maxItems": 10,
                            "type": "array",
                            "description": "The SMS members.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "display_name": {
                                  "type": "string",
                                  "description": "The participant's name.",
                                  "example": "l api"
                                },
                                "owner": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The owner ID.",
                                      "example": "DnEopNmXQEGU2uvvzjgojw"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`sharedLineGroup`",
                                      "example": "user",
                                      "enum": [
                                        "user",
                                        "callQueue",
                                        "autoReceptionist",
                                        "sharedLineGroup"
                                      ]
                                    }
                                  }
                                },
                                "phone_number": {
                                  "type": "string",
                                  "description": "The participant phone number.",
                                  "example": "18108001001"
                                },
                                "is_session_owner": {
                                  "type": "boolean",
                                  "description": "Whether it is the owner of the session.",
                                  "example": true
                                }
                              }
                            }
                          },
                          "session_id": {
                            "type": "string",
                            "description": "The SMS session ID.",
                            "example": "d39fc7e14ef9f2b6453f5f02524d79a2"
                          },
                          "session_type": {
                            "type": "string",
                            "description": "The session type.\nThe value for this field can be one of the following:  \n `user`  \n `call_queue`  \n `auto_receptionist`",
                            "example": "user"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n SMS session type is invalid.\r\nThe next page token is invalid or expired. <br>\n**Error Code:** `300` <br>\n Invalid user id. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId} <br>\n**Error Code:** `7012` <br>\n Error retrieving SMS. <br>\n**Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read",
              "phone_sms:read",
              "phone_sms:read:admin",
              "phone:read:list_sms_sessions",
              "phone:read:list_sms_sessions:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:read:admin",
            "phone:read",
            "phone_sms:read",
            "phone_sms:read:admin"
          ],
          "x-granular-scopes": [
            "phone:read:list_sms_sessions",
            "phone:read:list_sms_sessions:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/sms/sessions/sync": {
      "get": {
        "tags": ["SMS"],
        "summary": "List user's SMS sessions in descending order",
        "description": "Retrieves the user's SMS sessions in descending order. Mirrors the ZP client behavior with the most recent on top.\n\n**Prerequisites:**\n* Paid account \n* User-enabled Zoom phone   \n   \n \n\n\n\n**Scopes:** `phone:read:admin`,`phone:read`,`phone_sms:read`,`phone_sms:read:admin`\n\n**Granular Scopes:** `phone:read:sms_session`,`phone:read:sms_session:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "GetSmsSessions",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID, user email, or &ldquo;me&rdquo; when using OAuth token.",
            "required": true,
            "schema": { "type": "string", "example": "DnEopNmXQEGU2uvvzjgojw" }
          },
          {
            "name": "sync_type",
            "in": "query",
            "description": "FSync: Full sync BSync: Backward sync ISync: Forward sync",
            "required": true,
            "schema": {
              "type": "string",
              "example": "FSync",
              "default": "FSync",
              "enum": ["FSync", "BSync", "ISync"]
            }
          },
          {
            "name": "sync_token",
            "in": "query",
            "description": "The sync token. Use if requesting a backward (`BSync`) or forward (`ISync`) sync.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "MFgyQ0Z3UDkwaF8xNjQyNDA3MjA3MDE0XzE2NDI0MDcyMDcwMTQ="
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "The record count of each query",
            "required": false,
            "schema": {
              "maximum": 250,
              "minimum": 1,
              "type": "integer",
              "example": 50
            }
          },
          {
            "name": "session_type",
            "in": "query",
            "description": "This field filters the specific session list by a session type.\nThe value for this field can be one of the following:  \n `user`  \n `call_queue`  \n `auto_receptionist`  \n `all`",
            "required": false,
            "schema": { "type": "string", "example": "user", "default": "user" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **No Content**  \n \nSuccessfully listed the SMS sessions.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "sms_sessions": {
                      "maxItems": 250,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "last_access_time": {
                            "type": "string",
                            "description": "The last send or receive time in UTC.",
                            "example": "2022-03-25T02:11:27Z"
                          },
                          "latest_message": {
                            "type": "object",
                            "properties": {
                              "attachments": {
                                "maxItems": 10,
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The media file ID.",
                                      "example": "ttllslww"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The file type: OTHER, PNG, GIF, JPG/JPEG, AUDIO, VIDEO",
                                      "example": "GIF",
                                      "enum": [
                                        "OTHER",
                                        "PNG",
                                        "GIF",
                                        "JPG/JPEG",
                                        "AUDIO",
                                        "VIDEO"
                                      ]
                                    }
                                  }
                                }
                              },
                              "date_time": {
                                "type": "string",
                                "description": "The UTC time the message was created.",
                                "example": "2022-03-25T02:11:27Z"
                              },
                              "direction": {
                                "type": "string",
                                "description": "`In`(SMS received) or `Out`(SMS sent)",
                                "example": "Out"
                              },
                              "message": {
                                "type": "string",
                                "description": "The content of the SMS.",
                                "example": "hello"
                              },
                              "message_id": {
                                "type": "string",
                                "description": "The message ID.",
                                "example": "cfc07047-123e-4097-91d4-ac2635d646af"
                              },
                              "message_type": {
                                "type": "integer",
                                "description": "The message type:  \n \n1 - SMS  \n \n2 - MMS  \n \n3 - GROUP_SMS  \n \n4 - GROUP_MMS  \n \n5 - SMS_INTER  \n \n6 - MSG_ON_NET",
                                "example": 6,
                                "enum": [1, 2, 3, 4, 5, 6]
                              },
                              "sender": {
                                "required": ["phone_number"],
                                "type": "object",
                                "properties": {
                                  "display_name": {
                                    "type": "string",
                                    "description": "The sender's name.",
                                    "example": "usersubsetting0001@testapi.com"
                                  },
                                  "owner": {
                                    "type": "object",
                                    "properties": {
                                      "id": {
                                        "type": "string",
                                        "description": "The owner ID.",
                                        "example": "DnEopNmXQEGU2uvvzjgojw"
                                      },
                                      "type": {
                                        "type": "string",
                                        "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`sharedLineGroup`",
                                        "example": "user",
                                        "enum": [
                                          "user",
                                          "callQueue",
                                          "autoReceptionist",
                                          "sharedLineGroup"
                                        ]
                                      }
                                    }
                                  },
                                  "phone_number": {
                                    "type": "string",
                                    "description": "The sender's phone number.",
                                    "example": "+18108001001"
                                  }
                                }
                              },
                              "to_members": {
                                "maxItems": 10,
                                "type": "array",
                                "items": {
                                  "required": ["phone_number"],
                                  "type": "object",
                                  "properties": {
                                    "display_name": {
                                      "type": "string",
                                      "description": "The participant name.",
                                      "example": "test api"
                                    },
                                    "owner": {
                                      "type": "object",
                                      "properties": {
                                        "id": {
                                          "type": "string",
                                          "description": "The owner ID.",
                                          "example": "QOFvOvk7SJeOR2VBfL79_g"
                                        },
                                        "type": {
                                          "type": "string",
                                          "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`sharedLineGroup`",
                                          "example": "user",
                                          "enum": [
                                            "user",
                                            "callQueue",
                                            "autoReceptionist",
                                            "sharedLineGroup"
                                          ]
                                        }
                                      }
                                    },
                                    "phone_number": {
                                      "type": "string",
                                      "description": "The receiver's phone number.",
                                      "example": "+13522348840"
                                    }
                                  }
                                }
                              }
                            }
                          },
                          "participants": {
                            "maxItems": 10,
                            "type": "array",
                            "description": "The SMS senders and receivers.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "display_name": {
                                  "type": "string",
                                  "description": "The SMS sender or receiver name.",
                                  "example": "usersubsetting0001@testapi.com"
                                },
                                "owner": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "description": "The owner ID.",
                                      "example": "QOFvOvk7SJeOR2VBfL79_g"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The owner type:\n*`user`\n*`callQueue`\n*`autoReceptionist`\n*`sharedLineGroup`",
                                      "example": "user",
                                      "enum": [
                                        "user",
                                        "callQueue",
                                        "autoReceptionist",
                                        "sharedLineGroup"
                                      ]
                                    }
                                  }
                                },
                                "phone_number": {
                                  "type": "string",
                                  "description": "The SMS sender or receiver phone number.",
                                  "example": "+13522348840"
                                },
                                "is_session_owner": {
                                  "type": "boolean",
                                  "description": "Whether it is the owner of the session.",
                                  "example": true
                                }
                              }
                            }
                          },
                          "session_id": {
                            "type": "string",
                            "description": "The SMS session ID.",
                            "example": "67e261d9eefb2f87dc8193b4c2aeb1d8"
                          },
                          "session_type": {
                            "type": "string",
                            "description": "The session type.\nThe value for this field can be one of the following:  \n `user`  \n `call_queue`  \n `auto_receptionist`",
                            "example": "user"
                          },
                          "unread_message_count": {
                            "type": "integer",
                            "description": "The number of unread messages.",
                            "example": 125
                          }
                        }
                      }
                    },
                    "sync_token": {
                      "type": "string",
                      "description": "The sync token for a backward (`BSync`) or forward (`ISync`) sync.",
                      "example": "TVR5cXB2b2dmSl8xNjIxNTc0ODQ0MDY3XzE2NDgxNzQyODcwMDk="
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n SMS session type is invalid. <br>\n**Error Code:** `300` <br>\n Invalid user id.<br>\nUser does not exist. <br>\n**Error Code:** `7035` <br>\n The number of new records exceeds the sync count. Please resync with the `FSync` method. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n**Error Code:** `300` <br>\n The sync token is invalid or expired. <br>\n**Error Code:** `1001` <br>\n User does not exist: {userId} <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read",
              "phone_sms:read",
              "phone_sms:read:admin",
              "phone:read:sms_session",
              "phone:read:sms_session:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:read:admin",
            "phone:read",
            "phone_sms:read",
            "phone_sms:read:admin"
          ],
          "x-granular-scopes": [
            "phone:read:sms_session",
            "phone:read:sms_session:admin"
          ]
        }
      }
    },
    "/phone/sms_campaigns": {
      "get": {
        "tags": ["SMS Campaign"],
        "summary": "List SMS campaigns",
        "description": "Returns a list of all SMS campaigns in a Zoom account.\n\n**Prerequisites** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_sms_campaigns:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listAccountSMSCampaigns",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nSMS campaign listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token return whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "bkOcmnm6mn6ioYAi10BcgRiEL38WzAo6jP2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "sms_campaigns": {
                      "maxItems": 300,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The campaign ID.",
                            "example": "C-BlVwSdjvS3WXk5gzfIQFfQ"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The display name for the SMS campaign.",
                            "example": "Test SMS Campaign"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the SMS campaign. Returns `--` if the campaign is in an exception status.",
                            "example": "active",
                            "enum": [
                              "draft",
                              "active",
                              "expired",
                              "pending",
                              "declined",
                              "--"
                            ]
                          },
                          "brand": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The brand ID.",
                                "example": "B-c3AN66d_Q4mrQFNUaW-G2w"
                              },
                              "name": {
                                "type": "string",
                                "description": "The brand name.",
                                "example": "Test Campaign"
                              }
                            },
                            "description": "The business information from Zoom account."
                          }
                        }
                      }
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n The next page token is invalid or expired. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_sms_campaigns:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_sms_campaigns:admin"]
        }
      }
    },
    "/phone/sms_campaigns/{smsCampaignId}": {
      "get": {
        "tags": ["SMS Campaign"],
        "summary": "Get an SMS campaign",
        "description": "Use this API to get a specific SMS campaign.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:sms_campaign:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "GetSMSCampaign",
        "parameters": [
          {
            "name": "smsCampaignId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "C-BlVwSdjvS3WXk5gzfIQFfQ"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nSMS campaign details retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "The campaign ID.",
                      "example": "C-BlVwSdjvS3WXk5gzfIQFfQ"
                    },
                    "display_name": {
                      "type": "string",
                      "description": "The display name for the SMS campaign.",
                      "example": "Test SMS Campaign"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the SMS campaign. Returns `--` if the campaign is in an exception status.",
                      "example": "active",
                      "enum": [
                        "draft",
                        "active",
                        "expired",
                        "pending",
                        "declined",
                        "--"
                      ]
                    },
                    "service_type": {
                      "type": "string",
                      "description": "Which service the campaign is used for.",
                      "example": "zoomPhone",
                      "enum": ["zoomPhone", "contactCenter"]
                    },
                    "brand": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The brand ID.",
                          "example": "B-c3AN66d_Q4mrQFNUaW-G2w"
                        },
                        "name": {
                          "type": "string",
                          "description": "The brand name.",
                          "example": "Test Campaign"
                        }
                      },
                      "description": "The business information from Zoom account."
                    },
                    "phone_numbers": {
                      "type": "array",
                      "description": "Assigned phone numbers.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The phone number ID.",
                            "example": "iHE1MQAET2iV85MbfaQmwg"
                          },
                          "number": {
                            "type": "string",
                            "description": "The phone number that is assigned to the SMS campaign.",
                            "example": "+18887193005"
                          }
                        }
                      }
                    },
                    "auto_renew": {
                      "type": "boolean",
                      "description": "Whether to keep the SMS capabilities for all phone numbers associated with this campaign. If 'false', the campaign will expire 90 days from the creation date.",
                      "example": true
                    },
                    "create_time": {
                      "type": "string",
                      "description": "The creation time of the campaign.",
                      "example": "2022-07-21T02:23:25.000Z"
                    },
                    "use_case": {
                      "type": "string",
                      "description": "What will you be using these campaigns for.",
                      "example": "lowVolumeMixed",
                      "enum": ["lowVolumeMixed"]
                    },
                    "categories_fit": {
                      "type": "boolean",
                      "description": "Whether *all* customer-facing messages fit into the categories `Account Notifications`, `Customer Care`, `Delivery Notifications`, `Marketing`, and `Public Service Announcements`.",
                      "example": true
                    },
                    "content_type": {
                      "type": "array",
                      "description": "The message's content type.",
                      "items": {
                        "type": "string",
                        "example": "urlLink",
                        "enum": [
                          "urlLink",
                          "phoneNumber",
                          "ageGated",
                          "lending"
                        ]
                      }
                    },
                    "sample_message_1": {
                      "type": "string",
                      "description": "The sample message 1.",
                      "example": "Test Campaign Message1"
                    },
                    "sample_message_2": {
                      "type": "string",
                      "description": "The sample message 2.",
                      "example": "Test Campaign Message2"
                    },
                    "sample_message_3": {
                      "type": "string",
                      "description": "The sample message 3.",
                      "example": "Test Campaign Message3"
                    },
                    "sample_message_4": {
                      "type": "string",
                      "description": "The sample message 4.",
                      "example": "Test Campaign Message4"
                    },
                    "sample_message_5": {
                      "type": "string",
                      "description": "The sample message 5.",
                      "example": "Test Campaign Message5"
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:sms_campaign:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:sms_campaign:admin"]
        }
      }
    },
    "/phone/sms_campaigns/{smsCampaignId}/phone_numbers": {
      "post": {
        "tags": ["SMS Campaign"],
        "summary": "Assign a phone number to SMS campaign",
        "description": "[Assigns a phone number to the SMS campaign](https://support.zoom.us/hc/en-us/articles/5016496738445-SMS-MMS-10DLC-Compliance-for-Zoom-Phone-and-Zoom-Contact-Center#h_01FYVVQM1WMW5JD48YNY3J581B).\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:sms_campaign_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "assignCampaignPhoneNumbers",
        "parameters": [
          {
            "name": "smsCampaignId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "C-BlVwSdjvS3WXk5gzfIQFfQ"
            }
          }
        ],
        "requestBody": {
          "description": "Either the phone number ID or the phone number in the request body.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone_numbers": {
                    "maxItems": 49,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The phone number ID.",
                          "example": "iHE1MQAET2iV85MbfaQmwg"
                        },
                        "number": {
                          "type": "string",
                          "description": "The phone number in E164 format.",
                          "example": "+18887193005"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nPhone numbers assigned successfully. \n",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "phone_numbers": {
                      "maxItems": 49,
                      "type": "array",
                      "description": "The assigned phone numbers.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The phone number ID.",
                            "example": "iHE1MQAET2iV85MbfaQmwg"
                          },
                          "number": {
                            "type": "string",
                            "description": "The phone number (in E164 format) that is assigned to the SMS campaign.",
                            "example": "+18887193005"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n The campaign does not exist.<br>\nThe campaign is not active.<br>\nNumbers both not available.<br>\nCan not assign campaign to pending number: {0}.<br>\nCan not assign campaign to toll free number: {0}.<br>\nCan not enable sms for BYOC number: {0}.<br>\nCan not assign campaign to pending campaign number.<br>\nThe selected number size exceeds campaign capacity.<br>\nThe maximum size for phone numbers is 49. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:sms_campaign_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:sms_campaign_number:admin"]
        }
      }
    },
    "/phone/sms_campaigns/{smsCampaignId}/phone_numbers/opt_status": {
      "get": {
        "tags": ["SMS Campaign"],
        "summary": "List opt statuses of phone numbers assigned to SMS campaign",
        "description": "Returns the opt statuses of phone numbers that are assigned to SMS the campaign.\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:sms_campaign_number_opt_status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getNumberCampaignOptStatus",
        "parameters": [
          {
            "name": "smsCampaignId",
            "in": "path",
            "description": "The SMS campaign ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "C-_2Vkm3BsRoqxybJbP9HqFA"
            }
          },
          {
            "name": "consumer_phone_number",
            "in": "query",
            "description": "The end user's phone number that sends the Opt-in or Opt-out keyword to the Zoom Phone number.",
            "required": true,
            "schema": { "type": "string", "example": "15043449240" }
          },
          {
            "name": "zoom_phone_user_numbers",
            "in": "query",
            "description": "The Zoom users' phone numbers that receive the Opt-in or Opt-out keyword from the end user.",
            "required": true,
            "schema": {
              "maxItems": 10,
              "uniqueItems": true,
              "type": "array",
              "items": { "type": "string", "example": "12094436304" }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The list of opt statuses for each pair of sender's phone number and receiver's phone number.",
            "content": {
              "application/json": {
                "schema": {
                  "required": ["phone_number_campaign_opt_statuses"],
                  "type": "object",
                  "properties": {
                    "phone_number_campaign_opt_statuses": {
                      "maxItems": 10,
                      "uniqueItems": true,
                      "type": "array",
                      "description": "The list of opt statuses for each number pair.",
                      "items": {
                        "required": [
                          "consumer_phone_number",
                          "opt_status",
                          "zoom_phone_user_number"
                        ],
                        "type": "object",
                        "properties": {
                          "consumer_phone_number": {
                            "type": "string",
                            "description": "The end user's phone number in E164 format that sends the Opt-in or Opt-out keyword to the Zoom Phone number.",
                            "example": "+15043449240"
                          },
                          "zoom_phone_user_number": {
                            "type": "string",
                            "description": "The Zoom user's phone number in E164 format that receives the Opt-in or Opt-out keyword from the end user.",
                            "example": "+12094436304"
                          },
                          "opt_status": {
                            "type": "string",
                            "description": "The opt status.",
                            "example": "opt_out",
                            "enum": ["pending", "opt_out", "opt_in"]
                          }
                        },
                        "description": "The opt status per a number pair."
                      }
                    }
                  },
                  "description": "The list of opt statuses."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  Size of unique receiver phone numbers cannot exceed the predefined limit. \n\n **Error Code:** `400` <br>\n Size of unique receiver phone numbers cannot exceed {0}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  Path variable smsCampaignId not found \n\n **Error Code:** `404` <br>\n Path variable smsCampaignId not found <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:sms_campaign_number_opt_status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": [
            "phone:read:sms_campaign_number_opt_status:admin"
          ]
        }
      },
      "patch": {
        "tags": ["SMS Campaign"],
        "summary": "Update opt statuses of phone numbers assigned to SMS campaign",
        "description": "Updates opt statuses of phone numbers that are assigned to the SMS campaign.\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:sms_campaign_number_opt_status:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateNumberCampaignOptStatus",
        "parameters": [
          {
            "name": "smsCampaignId",
            "in": "path",
            "description": "The SMS campaign ID.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "C-_2Vkm3BsRoqxybJbP9HqFA"
            }
          }
        ],
        "requestBody": {
          "description": "This field updates opt statuses of phone numbers that are assigned to the SMS campaign.",
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "consumer_phone_number",
                  "opt_status",
                  "zoom_phone_user_numbers"
                ],
                "type": "object",
                "properties": {
                  "consumer_phone_number": {
                    "type": "string",
                    "description": "The end user's phone number that sends the Opt-in or Opt-out keyword to the Zoom Phone number.",
                    "example": "15043449240"
                  },
                  "zoom_phone_user_numbers": {
                    "maxItems": 10,
                    "uniqueItems": true,
                    "type": "array",
                    "description": "The Zoom users' phone numbers that receive the Opt-in or Opt-out keyword from the end user.",
                    "items": { "type": "string", "example": "12094436304" }
                  },
                  "opt_status": {
                    "type": "string",
                    "description": "The opt status: either `opt_in` or `opt_out`.",
                    "example": "opt_out",
                    "enum": ["opt_in", "opt_out"]
                  }
                },
                "description": "The request payload to update the opt statuses for phone numbers that are assigned to the SMS campaign."
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Update opt status for each pair of sender's phone number and receiver's phone number."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  Opt status should be either opt_out or opt_in. \n\n **Error Code:** `400` <br>\n Opt status should be either opt_out or opt_in. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  Path variable smsCampaignId not found. \n\n **Error Code:** `404` <br>\n Path variable smsCampaignId not found. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:sms_campaign_number_opt_status:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": [
            "phone:update:sms_campaign_number_opt_status:admin"
          ]
        }
      }
    },
    "/phone/sms_campaigns/{smsCampaignId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "tags": ["SMS Campaign"],
        "summary": "Unassign a phone number",
        "description": "Use this API to [unassign a phone number from the SMS campaign](https://support.zoom.us/hc/en-us/articles/5016496738445-SMS-MMS-10DLC-Compliance-for-Zoom-Phone-and-Zoom-Contact-Center#h_01FYVVSPVM8MZN4Y9EW5690QHH).\nRemove the assigned phone number from the campaign.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license \n* The campaign must have been previously assigned a Zoom Phone number\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:sms_campaign_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "unassignCampaignPhoneNumber",
        "parameters": [
          {
            "name": "smsCampaignId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "example": "C-BlVwSdjvS3WXk5gzfIQFfQ"
            }
          },
          {
            "name": "phoneNumberId",
            "in": "path",
            "description": "Provide either phone number (in E164 format) or phoneNumberId of the campaign. ",
            "required": true,
            "schema": { "type": "string", "example": "iHE1MQAET2iV85MbfaQmwg" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`\nThe phone number has been unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nThe brand does not exist.\n\n**Error Code:** `400` <br>\nThe campaign does not exist.<br>\nThe campaign does not have the number.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:sms_campaign_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:sms_campaign_number:admin"]
        }
      }
    },
    "/phone/setting_templates": {
      "get": {
        "tags": ["Setting Templates"],
        "summary": "List setting templates",
        "description": "Gets a list of all the created phone template settings.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_setting_templates:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "listSettingTemplates",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "Number of records returns within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "nav48KOj42vYPSG4f0cCdT575bZ980did22"
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "Unique identifier of the site. This field is required only if multiple sites have been enabled.  of the site. Required only when multiple sites are enabled. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) for details. If this is not provided, the response lists the account level setting templates.",
            "required": false,
            "schema": { "type": "string", "example": "SQv52YtkRLC2dwrDdYtGsA" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`\n\nOK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes",
                      "example": "nav48KOj42vYPSG4f0cCdT575bZ980did22"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call. The default is **30** and the maximum is **300**.",
                      "example": 30
                    },
                    "templates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "Template description.",
                            "example": "Main site user template"
                          },
                          "id": {
                            "type": "string",
                            "description": "Unique identifier of the template.",
                            "example": "2kFqiqSlS5udzWB5QqMiNg"
                          },
                          "name": {
                            "type": "string",
                            "description": "Template name.",
                            "example": "user_template"
                          },
                          "type": {
                            "type": "string",
                            "description": "Template type.\n\nThe value of this field can be one of the following:\n\n* `user`\n\n* `group`\n\n* `autReceptionist`\n\n* `commonArea`\n\n* `zr`\n\n* `interop`\n",
                            "example": "user",
                            "enum": [
                              "user",
                              "group",
                              "autReceptionist",
                              "commonArea",
                              "zr",
                              "interop"
                            ]
                          }
                        }
                      }
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nMultiple Sites option has been disabled. Enable it and try again.\n\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized\n\n**Error Code:** `124` <br>\nAccount does not exist: {accountId}.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_setting_templates:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_setting_templates:admin"]
        }
      },
      "post": {
        "tags": ["Setting Templates"],
        "summary": "Add a setting template",
        "description": "Creates a Zoom Phone setting template for an account. After creating a phone template, the defined settings will become the default settings for an account.\n\n**Prerequisites:** \n* A Business or enterprise Zoom account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:setting_template:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addSettingTemplate",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["name", "type"],
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "A description of the template.",
                    "example": "Main site user template"
                  },
                  "name": {
                    "type": "string",
                    "description": "The name of the template.",
                    "example": "user template"
                  },
                  "site_id": {
                    "type": "string",
                    "description": "The unique identifier of the site. It's required only when multiple sites are enabled. See [Managing multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) for details.",
                    "example": "SQv52YtkRLC2dwrDdYtGsA"
                  },
                  "type": {
                    "type": "string",
                    "description": "The type of template. Values include `user`.",
                    "example": "user"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`  \n \nCreated Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "The template description.",
                      "example": "Main site user template"
                    },
                    "id": {
                      "type": "string",
                      "description": "The template ID.",
                      "example": "2kFqiqSlS5udzWB5QqMiNg"
                    },
                    "name": {
                      "type": "string",
                      "description": "The template name.",
                      "example": "user template"
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of template. Values include `user`. ",
                      "example": "user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n Validation failed. You provided an incorrect value for the template type. Provide a valid value and try again. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized \n\n **Error Code:** `124` <br>\n Account does not exist: {accountId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:setting_template:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:setting_template:admin"]
        }
      }
    },
    "/phone/setting_templates/{templateId}": {
      "get": {
        "tags": ["Setting Templates"],
        "summary": "Get setting template details",
        "description": "Returns information about an account's phone template.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:setting_template:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getSettingTemplate",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "The unique identifier of the template.",
            "required": true,
            "schema": { "type": "string", "example": "SQv52YtkRLC2dwrDdYtGsA" }
          },
          {
            "name": "custom_query_fields",
            "in": "query",
            "description": "This field provides the name of the field to use to filter the response. For example, if you provide &quot;description&quot; as the value of the field, you will get a response similar to the following: {&ldquo;description&rdquo;: &ldquo;template description&rdquo;}.",
            "required": false,
            "schema": { "type": "string", "example": "voicemail" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`\n\nOK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "The description of the template.",
                      "example": "Main site user template"
                    },
                    "id": {
                      "type": "string",
                      "description": "This field specifies the template ID.",
                      "example": "2kFqiqSlS5udzWB5QqMiNg"
                    },
                    "name": {
                      "type": "string",
                      "description": "This field specifies the name of the template.",
                      "example": "user template"
                    },
                    "policy": {
                      "type": "object",
                      "properties": {
                        "ad_hoc_call_recording": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow current extension to record and save calls in the cloud.",
                              "example": true
                            },
                            "recording_start_prompt": {
                              "type": "boolean",
                              "description": "Whether to play a prompt to call participants when the recording has started.",
                              "example": true
                            },
                            "recording_transcription": {
                              "type": "boolean",
                              "description": "Whether to allow call recording transcription.",
                              "example": true
                            }
                          }
                        },
                        "auto_call_recording": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to enable automatic call recording.",
                              "example": true
                            },
                            "recording_calls": {
                              "type": "string",
                              "description": "Values: inbound, outbound, both.",
                              "example": "inbound"
                            },
                            "recording_start_prompt": {
                              "type": "boolean",
                              "description": "Whether to play a prompt to call participants when the recording has started.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` to operate inbound and outbound prompt separately.\n\n<b>Note:</b> \n* If customers opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt` and `inbound_audio_notification.recording_start_prompt` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt` will be also updated.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` will be also updated.",
                              "example": true,
                              "deprecated": true
                            },
                            "recording_transcription": {
                              "type": "boolean",
                              "description": "Whether to allow call recording transcription.",
                              "example": true
                            },
                            "inbound_audio_notification": {
                              "type": "object",
                              "properties": {
                                "recording_start_prompt": {
                                  "type": "boolean",
                                  "description": "Whether to play a prompt to call participants when the recording has started for inbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                                  "example": true
                                }
                              }
                            },
                            "outbound_audio_notification": {
                              "type": "object",
                              "properties": {
                                "recording_start_prompt": {
                                  "type": "boolean",
                                  "description": "Whether to play a prompt to call participants when the recording has started for outbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                                  "example": true
                                }
                              }
                            }
                          }
                        },
                        "sms": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow the user to send and receive messages.",
                              "example": true
                            },
                            "international_sms": {
                              "type": "boolean",
                              "example": true
                            }
                          }
                        },
                        "voicemail": {
                          "type": "object",
                          "properties": {
                            "allow_transcription": {
                              "type": "boolean",
                              "description": "Whether to allow the voicemail transcription.",
                              "example": true
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow the current extension to access, receive, or share voicemail.",
                              "example": true
                            }
                          }
                        },
                        "call_forwarding": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to forward their calls to other numbers.",
                              "example": true
                            },
                            "call_forwarding_type": {
                              "type": "integer",
                              "description": "`1` - Low restriction (external numbers not allowed)\n`2` - Medium restriction (external numbers and external contacts not allowed)\n `3` - High restriction (external numbers, external contacts and internal extensions without inbound automatic call recording not allowed)\n`4` - No restriction",
                              "example": 1,
                              "enum": [1, 2, 3, 4]
                            }
                          }
                        },
                        "call_overflow": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to forward their calls to other numbers when a call is not answered.",
                              "example": true
                            },
                            "call_overflow_type": {
                              "type": "integer",
                              "description": "`1` - Low restriction (external numbers not allowed)\n`2` - Medium restriction (external numbers and external contacts not allowed)\n `3` - High restriction (external numbers, external contacts and internal extensions without inbound automatic call recording not allowed)\n`4` - No restriction",
                              "example": 1,
                              "enum": [1, 2, 3, 4]
                            }
                          }
                        }
                      }
                    },
                    "profile": {
                      "type": "object",
                      "properties": {
                        "area_code": {
                          "type": "string",
                          "description": "The area code from which the phone account was created.",
                          "example": "1"
                        },
                        "country": {
                          "type": "string",
                          "description": "The name of the country where the template was created.",
                          "example": "US"
                        }
                      }
                    },
                    "type": {
                      "type": "string",
                      "description": "The type of template being queried. Values: `user`, `group`, `auto receptionist` `common area`,`zr`, `interop`.",
                      "example": "user",
                      "enum": [
                        "user",
                        "group",
                        "autoReceptionist",
                        "commonArea",
                        "zr",
                        "interop"
                      ]
                    },
                    "user_settings": {
                      "type": "object",
                      "properties": {
                        "audio_prompt_language": {
                          "type": "string",
                          "description": "The audio prompt language code.\n American English: `en-US`\n\nBritish English: `en-GB`\n\nEspa&ntilde;ol americano: `es-US`\n\nFran&ccedil;ais canadien: `fr-CA`\n\nDansk: `da-DK`\n\nDeutsch: `de-DE`\n\nEspa&ntilde;ol: `es-ES`\n\nFran&ccedil;ais: `fr-FR`\n\nItaliano: `it-IT`\n\nNederlands: `nl-NL`\n\nPortugues portugal: `pt-PT`\n\nJapanese: `ja-JP`\n\nKorean: `ko-KO`\n\nPortugues brasil: `pt-BR`\n\nChinese: `zh-CN`\n\nTaiwanese: `zh-TW`\n",
                          "example": "en-US"
                        },
                        "block_calls_without_caller_id": {
                          "type": "boolean",
                          "description": "The block calls without caller ID.",
                          "example": false
                        },
                        "call_handling": {
                          "type": "object",
                          "properties": {
                            "business_hours": {
                              "type": "object",
                              "properties": {
                                "business_hour_action": {
                                  "type": "integer",
                                  "description": "When a call is not answered:  \n \n0-Forward to a voicemail;  \n \n1-Play a message, then disconnect;   \n \n9-Disconnect;   \n \n11-Forward to an external number;   \n \n26-Forward to External Contacts;   \n \n50-Forward to another extension",
                                  "example": 50,
                                  "enum": [0, 1, 9, 11, 26, 50]
                                },
                                "connect_to_operator": {
                                  "type": "object",
                                  "properties": {
                                    "enable": {
                                      "type": "boolean",
                                      "description": "Whether to enable connect to operator.",
                                      "example": true
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The phone extension ID of the user, zoomRoom, commonArea, autoReceptionist, callQueue or sharedLineGroup.",
                                      "example": "fWOgOALdT1ei4vjXK-QYsA"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Values:  \n \n1-user,  \n \n2-callQueue,   \n \n3-autoReceptionist,  \n \n4-commonArea,  \n \n5-zoomRoom,   \n \n7-sharedLineGroup",
                                      "example": "user",
                                      "enum": [
                                        "user",
                                        "zoomRoom",
                                        "commonArea",
                                        "autoReceptionist",
                                        "callQueue",
                                        "sharedLineGroup"
                                      ]
                                    },
                                    "external_number": {
                                      "type": "object",
                                      "properties": {
                                        "number": {
                                          "type": "string",
                                          "description": "The phone number in E164 format.",
                                          "example": "+12055433924"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The description for the phone number.",
                                          "example": "API test forwarding to number"
                                        }
                                      },
                                      "description": "The forwarding external number when a call is not answered. Make available only when the `business_hour_action` is `11`."
                                    },
                                    "play_callee_voicemail_greeting": {
                                      "type": "boolean",
                                      "description": "Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding sequence. Make available only when the `business_hour_action` is `0` or `50`.",
                                      "example": true
                                    },
                                    "require_press_1_before_connecting": {
                                      "type": "boolean",
                                      "description": "Whether to require pressing 1 before connecting the call. Make available only when the `business_hour_action` is `11` or '26'.",
                                      "example": true
                                    },
                                    "allow_caller_check_voicemail": {
                                      "type": "boolean",
                                      "description": "Whether to allow callers to check their voicemail. Make available only when the `business_hour_action` is `0`.",
                                      "example": true
                                    }
                                  },
                                  "description": "Whether to allow callers to press zero to reach an operator, press one to leave a message, or allow neither of these options."
                                },
                                "busy_action": {
                                  "type": "integer",
                                  "description": "When the user is busy on another call:  \n \n0-Forward to a voicemail;  \n \n1-Play a message, then disconnect;   \n \n11-Forward to an external number;   \n \n12-Call waiting;   \n \n13-Play a busy signal;   \n \n26-Forward to External Contacts;   \n \n50-Forward to another extension.",
                                  "example": 50,
                                  "enum": [0, 1, 11, 12, 13, 26, 50]
                                },
                                "busy_connect_operator": {
                                  "type": "object",
                                  "properties": {
                                    "enable": {
                                      "type": "boolean",
                                      "description": "Whether to enable connect to operator.",
                                      "example": true
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The phone extension ID of the user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue, or sharedLineGroup.",
                                      "example": "fWOgOALdT1ei4vjXK-QYsA"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Values:\n\n1-user,\n\n2-callQueue, \n\n3-autoReceptionist,\n\n4-commonAreaPhone,\n\n5-zoomRoom, \n\n7-sharedLineGroup",
                                      "example": "user",
                                      "enum": [
                                        "user",
                                        "zoomRoom",
                                        "commonAreaPhone",
                                        "autoReceptionist",
                                        "callQueue",
                                        "sharedLineGroup"
                                      ]
                                    },
                                    "external_number": {
                                      "type": "object",
                                      "properties": {
                                        "number": {
                                          "type": "string",
                                          "description": "The phone number in E164 format.",
                                          "example": "+12055433924"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The description for the phone number.",
                                          "example": "API test forwarding to number"
                                        }
                                      },
                                      "description": "The forwarding external number when a call is not answered. Make available only when the `busy_action` is `11`."
                                    },
                                    "play_callee_voicemail_greeting": {
                                      "type": "boolean",
                                      "description": "Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding sequence. It's available only when the `busy_action` is `0` or `50`.",
                                      "example": true
                                    },
                                    "require_press_1_before_connecting": {
                                      "type": "boolean",
                                      "description": "Whether to require pressing 1 before connecting the call. Make available only when the `busy_action` is `11` or '26'.",
                                      "example": true
                                    },
                                    "allow_caller_check_voicemail": {
                                      "type": "boolean",
                                      "description": "Whether to allow callers to check their voicemail. Make available only when the `busy_action` is `0`.",
                                      "example": true
                                    }
                                  },
                                  "description": "Whether to allow callers to press 0 to reach an operator or press 1 to leave a message, or allow neither of these options."
                                },
                                "custom_hours": {
                                  "type": "array",
                                  "items": {
                                    "type": "object",
                                    "properties": {
                                      "from": {
                                        "type": "string",
                                        "description": "Values:\n \nhh:mm",
                                        "format": "time",
                                        "example": "09:00"
                                      },
                                      "to": {
                                        "type": "string",
                                        "description": "Values:\n \nhh:mm",
                                        "format": "time",
                                        "example": "18:00"
                                      },
                                      "type": {
                                        "type": "integer",
                                        "description": "Values:\n\n1-24 Hours,\n\n2-customized hours",
                                        "example": 2,
                                        "enum": [1, 2]
                                      },
                                      "weekday": {
                                        "type": "integer",
                                        "description": "Values: 1-7 Sun-Sat",
                                        "example": 2,
                                        "enum": [1, 2, 3, 4, 5, 6, 7]
                                      }
                                    }
                                  }
                                },
                                "ring_type": {
                                  "type": "string",
                                  "description": "The call handling ring mode:  \n \n0-Simultaneous,  \n \n1-Sequential",
                                  "example": "simultaneous"
                                },
                                "ringing_duration": {
                                  "type": "string",
                                  "description": "Ringing duration for each device in seconds. Values:  \n \n10,15,20,25,30,35,40,45,50,55,60",
                                  "example": "15",
                                  "enum": [
                                    "10",
                                    "15",
                                    "20",
                                    "25",
                                    "30",
                                    "35",
                                    "40",
                                    "45",
                                    "50",
                                    "55",
                                    "60"
                                  ]
                                },
                                "type": {
                                  "type": "integer",
                                  "description": "Values:\n\n1-24 Hours, 7 Days a Week;\n\n2-Custom Hours",
                                  "example": 2,
                                  "enum": [1, 2]
                                }
                              }
                            },
                            "close_hours": {
                              "type": "object",
                              "properties": {
                                "close_hour_action": {
                                  "type": "integer",
                                  "description": "The action to take when a call is not answered:  \n \n0-Forward to a voicemail;   \n \n1-Play a message, then disconnect;   \n \n9-Disconnect;   \n \n11-Forward to an external number;   \n \n26-Forward to External Contacts;   \n \n50-Forward to another extension\n",
                                  "example": 50,
                                  "enum": [0, 1, 9, 11, 26, 50]
                                },
                                "connect_to_operator": {
                                  "type": "object",
                                  "properties": {
                                    "enable": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The phone extension ID of the user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue, or sharedLineGroup.",
                                      "example": "fWOgOALdT1ei4vjXK-QYsA"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "Values:\n\n1-user,\n\n2-callQueue, \n\n3-autoReceptionist,\n\n4-commonAreaPhone,\n\n5-zoomRoom, \n\n7-sharedLineGroup",
                                      "example": "user",
                                      "enum": [
                                        "user",
                                        "zoomRoom",
                                        "commonAreaPhone",
                                        "autoReceptionist",
                                        "callQueue",
                                        "sharedLineGroup"
                                      ]
                                    },
                                    "external_number": {
                                      "type": "object",
                                      "properties": {
                                        "number": {
                                          "type": "string",
                                          "description": "The phone number in E164 format.",
                                          "example": "+12055433924"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The description for the phone number.",
                                          "example": "API test forwarding to number"
                                        }
                                      },
                                      "description": "The forwarding external number when a call is not answered. Make available only when the `close_hour_action` is `11`."
                                    },
                                    "play_callee_voicemail_greeting": {
                                      "type": "boolean",
                                      "description": "Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding sequence. Make available only when the `close_hour_action` is `0` or `50`.",
                                      "example": true
                                    },
                                    "require_press_1_before_connecting": {
                                      "type": "boolean",
                                      "description": "Whether to require pressing 1 before connecting the call. Make available only when the `close_hour_action` is `11` or '26'.",
                                      "example": true
                                    },
                                    "allow_caller_check_voicemail": {
                                      "type": "boolean",
                                      "description": "Whether to allow callers to check their voicemail. Make available only when the `close_hour_action` is `0`.",
                                      "example": true
                                    }
                                  },
                                  "description": "Whether to allow callers to press zero to reach an operator or press One to leave a message, or allow neither of these options."
                                },
                                "busy_action": {
                                  "type": "integer",
                                  "description": "The action to take when the user is busy on another call:  \n \n0-Forward to a voicemail;  \n \n1-Play a message, then disconnect;   \n \n11-Forward to an external number;   \n \n12-Call waiting;   \n \n13-Play a busy signal;   \n \n26-Forward to External Contacts;   \n \n50-Forward to another extension\n.",
                                  "example": 50,
                                  "enum": [0, 1, 11, 12, 13, 26, 50]
                                },
                                "busy_connect_operator": {
                                  "type": "object",
                                  "properties": {
                                    "enable": {
                                      "type": "boolean",
                                      "example": true
                                    },
                                    "id": {
                                      "type": "string",
                                      "description": "The phone extension ID of the user, zoomRoom, commonArea, autoReceptionist, callQueue, or sharedLineGroup.",
                                      "example": "fWOgOALdT1ei4vjXK-QYsA"
                                    },
                                    "type": {
                                      "type": "string",
                                      "description": "The Values:  \n \n1-user,  \n \n2-callQueue,   \n \n3-autoReceptionist,  \n \n4-commonArea,  \n \n5-zoomRoom,   \n \n7-sharedLineGroup.",
                                      "example": "user",
                                      "enum": [
                                        "user",
                                        "zoomRoom",
                                        "commonArea",
                                        "autoReceptionist",
                                        "callQueue",
                                        "sharedLineGroup"
                                      ]
                                    },
                                    "external_number": {
                                      "type": "object",
                                      "properties": {
                                        "number": {
                                          "type": "string",
                                          "description": "The phone number in E164 format.",
                                          "example": "+12055433924"
                                        },
                                        "description": {
                                          "type": "string",
                                          "description": "The description for the phone number.",
                                          "example": "API test forwarding to number"
                                        }
                                      },
                                      "description": "The forwarding external number when a call is not answered. It's available only when the `busy_action` is `11`."
                                    },
                                    "play_callee_voicemail_greeting": {
                                      "type": "boolean",
                                      "description": "Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding sequence. Make available only when the `busy_action` is `0` or `50`.",
                                      "example": true
                                    },
                                    "require_press_1_before_connecting": {
                                      "type": "boolean",
                                      "description": "Whether to require pressing one before connecting the call. Make available only when the `busy_action` is `11` or '26'.",
                                      "example": true
                                    },
                                    "allow_caller_check_voicemail": {
                                      "type": "boolean",
                                      "description": "Whether to allow callers to check their voicemail. Make available only when the `busy_action` is `0`.",
                                      "example": true
                                    }
                                  },
                                  "description": "Whether to allow callers to press 0 to reach an operator or press 1 to leave a message, or allow neither of these options."
                                },
                                "max_wait_time": {
                                  "type": "string",
                                  "description": "The maximum wait time in seconds. Values:  \n \n10,15,20,25,30,35,40,45,50,55,60.",
                                  "example": "30",
                                  "enum": [
                                    "10",
                                    "15",
                                    "20",
                                    "25",
                                    "30",
                                    "35",
                                    "40",
                                    "45",
                                    "50",
                                    "55",
                                    "60"
                                  ]
                                }
                              }
                            }
                          }
                        },
                        "desk_phone": {
                          "type": "object",
                          "properties": {
                            "pin_code": {
                              "type": "string",
                              "description": "The pin code.",
                              "example": "0995"
                            }
                          }
                        },
                        "hold_music": {
                          "type": "string",
                          "description": "The value of this field can be either `default` or `disable`.\n\n* `default`: This means that the hold music can be set using the [audio library](https://support.zoom.us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).\n\n* `disable`: This means that the hold music is disabled.",
                          "example": "default",
                          "enum": ["default", "disable"]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Account does not exist: {accountId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:setting_template:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:setting_template:admin"]
        }
      },
      "patch": {
        "tags": ["Setting Templates"],
        "summary": "Update a setting template",
        "description": "Updates or modifies a phone template's settings.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:setting_template:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateSettingTemplate",
        "parameters": [
          {
            "name": "templateId",
            "in": "path",
            "description": "The Template ID.",
            "required": true,
            "schema": { "type": "string", "example": "2kFqiqSlS5udzWB5QqMiNg" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "The description of the template.",
                    "example": "Main site user template"
                  },
                  "name": {
                    "type": "string",
                    "description": "This field specifies the name of the template.",
                    "example": "user template"
                  },
                  "policy": {
                    "type": "object",
                    "properties": {
                      "ad_hoc_call_recording": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow the current extension to record and save calls in the cloud.",
                            "example": true
                          },
                          "recording_start_prompt": {
                            "type": "boolean",
                            "description": "Whether to play a prompt to call participants when the recording has started.",
                            "example": true
                          },
                          "recording_transcription": {
                            "type": "boolean",
                            "description": "Whether to allow call recording transcription.",
                            "example": true
                          }
                        }
                      },
                      "auto_call_recording": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "The automatic call recording.",
                            "example": true
                          },
                          "recording_calls": {
                            "type": "string",
                            "description": "Values: inbound, outbound, both.",
                            "example": "outbound",
                            "enum": ["inbound", "outbound", "both"]
                          },
                          "recording_start_prompt": {
                            "type": "boolean",
                            "description": "Whether to play a prompt to call participants when the recording has started.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` to operate inbound and outbound prompt separately.\n\n<b>Note:</b> \n* if customers who opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt` and `inbound_audio_notification.recording_start_prompt` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt` will be also updated.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent. when the field is updated, the `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` will be also updated.",
                            "example": true,
                            "deprecated": true
                          },
                          "recording_transcription": {
                            "type": "boolean",
                            "description": "Whether to allow call recording transcription.",
                            "example": true
                          },
                          "inbound_audio_notification": {
                            "type": "object",
                            "properties": {
                              "recording_start_prompt": {
                                "type": "boolean",
                                "description": "Whether a prompt plays to call participants when the recording has started for the inbound call is enabled.\n\n<b>Note:</b> \n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                                "example": true
                              }
                            }
                          },
                          "outbound_audio_notification": {
                            "type": "object",
                            "properties": {
                              "recording_start_prompt": {
                                "type": "boolean",
                                "description": "Whether a prompt plays to call participants when the recording has started for the outbound call is enabled.\n\n<b>Note:</b> \n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                                "example": true
                              }
                            }
                          }
                        }
                      },
                      "sms": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow user to send and receive messages.",
                            "example": true
                          },
                          "international_sms": {
                            "type": "boolean",
                            "description": "Whether or not the SMS is international.",
                            "example": true
                          }
                        }
                      },
                      "voicemail": {
                        "type": "object",
                        "properties": {
                          "allow_transcription": {
                            "type": "boolean",
                            "description": "Whether to allow voicemail transcription.",
                            "example": true
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow the current extension to access, receive, or share voicemail.",
                            "example": true
                          }
                        }
                      },
                      "call_forwarding": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users to forward their calls to other numbers.",
                            "example": true
                          },
                          "call_forwarding_type": {
                            "type": "integer",
                            "description": "`1` - Low restriction (external numbers not allowed)\n`2` - Medium restriction (external numbers and external contacts not allowed)\n `3` - High restriction (external numbers, external contacts and internal extensions without inbound automatic call recording not allowed)\n`4` - No restriction",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          }
                        }
                      },
                      "call_overflow": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users to forward their calls to other numbers when a call is not answered.",
                            "example": true
                          },
                          "call_overflow_type": {
                            "type": "integer",
                            "description": "`1` - Low restriction (external numbers not allowed)\n`2` - Medium restriction (external numbers and external contacts not allowed)\n `3` - High restriction (external numbers, external contacts and internal extensions without inbound automatic call recording not allowed)\n`4` - No restriction",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          }
                        }
                      }
                    }
                  },
                  "profile": {
                    "type": "object",
                    "properties": {
                      "area_code": {
                        "type": "string",
                        "description": "The area code from which the phone account was created.",
                        "example": "01"
                      },
                      "country": {
                        "type": "string",
                        "description": "Name of the country where the template was created.",
                        "example": "US"
                      }
                    }
                  },
                  "user_settings": {
                    "type": "object",
                    "properties": {
                      "audio_prompt_language": {
                        "type": "string",
                        "description": "Audio prompt language code.\n American English: `en-US`\n\nBritish English: `en-GB`\n\nEspa&ntilde;ol americano: `es-US`\n\nFran&ccedil;ais canadien: `fr-CA`\n\nDansk: `da-DK`\n\nDeutsch: `de-DE`\n\nEspa&ntilde;ol: `es-ES`\n\nFran&ccedil;ais: `fr-FR`\n\nItaliano: `it-IT`\n\nNederlands: `nl-NL`\n\nPortugues portugal: `pt-PT`\n\nJapanese: `ja-JP`\n\nKorean: `ko-KO`\n\nPortugues brasil: `pt-BR`\n\nChinese: `zh-CN`\n\nTaiwanese: `zh-TW`\n",
                        "example": "ja-JP"
                      },
                      "block_calls_without_caller_id": {
                        "type": "boolean",
                        "description": "The block calls without caller ID.",
                        "example": false
                      },
                      "call_handling": {
                        "type": "object",
                        "properties": {
                          "business_hours": {
                            "type": "object",
                            "properties": {
                              "business_hour_action": {
                                "type": "integer",
                                "description": "When a call is not answered:  \n \n0-Forward to a voicemail;  \n \n1-Play a message, then disconnect;   \n \n9-Disconnect;   \n \n11-Forward to an external number;   \n \n26-Forward to External Contacts;   \n \n50-Forward to another extension",
                                "example": 50,
                                "enum": [0, 1, 9, 11, 26, 50]
                              },
                              "connect_to_operator": {
                                "type": "object",
                                "properties": {
                                  "enable": {
                                    "type": "boolean",
                                    "description": "Whether to enable connect to the operator. You must input the `id` if you want to enable. It's available only when the `business_hour_action` is `0`.",
                                    "example": true
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The extension ID of user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue, or sharedLineGroup. It's available only when the `business_hour_action` is `0` or `50`.",
                                    "example": "fWOgOALdT1ei4vjXK-QYsA"
                                  },
                                  "external_number": {
                                    "type": "object",
                                    "properties": {
                                      "number": {
                                        "type": "string",
                                        "description": "The phone number in E164 format.",
                                        "example": "+12055433924"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "The description for the phone number.",
                                        "example": "API test forwarding to number"
                                      }
                                    },
                                    "description": "The forwarding external number when a call is not answered. Available only when the `business_hour_action` is `11`"
                                  },
                                  "play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding sequence. Make available only when the `business_hour_action` is `0` or `50`.",
                                    "example": true
                                  },
                                  "require_press_1_before_connecting": {
                                    "type": "boolean",
                                    "description": "Whether to require pressing 1 before connecting the call. Make available only when the `business_hour_action` is `11` or '26'.",
                                    "example": true
                                  },
                                  "allow_caller_check_voicemail": {
                                    "type": "boolean",
                                    "description": "Whether to allow callers to check their voicemail. Make available only when the `business_hour_action` is `0`.",
                                    "example": true
                                  }
                                },
                                "description": "Whether to allow callers to press zero to reach an operator or press One to leave a message, or allow neither of these options."
                              },
                              "busy_action": {
                                "type": "integer",
                                "description": "When the user is busy on another call:  \n \n0-Forward to a voicemail;  \n \n1-Play a message, then disconnect;   \n \n11-Forward to an external number;   \n \n12-Call waiting;   \n \n13-Play a busy signal;   \n \n26-Forward to External Contacts;   \n \n50-Forward to another extension.",
                                "example": 50,
                                "enum": [0, 1, 11, 12, 13, 26, 50]
                              },
                              "busy_connect_operator": {
                                "type": "object",
                                "properties": {
                                  "enable": {
                                    "type": "boolean",
                                    "description": "Whether to enable a connection to an operator. It requires the user to input the `ID` if you want to enable. It's available only when the `busy_action` is `0`.",
                                    "example": true
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The extension ID of user, zoomRoom, commonArea, autoReceptionist, callQueue, or sharedLineGroup. It's available only when the `busy_action` is `0`, `26` or `50`.",
                                    "example": "fWOgOALdT1ei4vjXK-QYsA"
                                  },
                                  "external_number": {
                                    "type": "object",
                                    "properties": {
                                      "number": {
                                        "type": "string",
                                        "description": "The phone number in E164 format.",
                                        "example": "+12055433924"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "The description for the phone number.",
                                        "example": "API test forwarding to number"
                                      }
                                    },
                                    "description": "The forwarding external number when a call is not answered. Make available only when the `busy_action` is `11`."
                                  },
                                  "play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding sequence. Make available only when the `busy_action` is `0` or `50`.",
                                    "example": true
                                  },
                                  "require_press_1_before_connecting": {
                                    "type": "boolean",
                                    "description": "Whether to require pressing 1 before connecting the call. Make available only when the `busy_action` is `11` or '26'.",
                                    "example": true
                                  },
                                  "allow_caller_check_voicemail": {
                                    "type": "boolean",
                                    "description": "Whether to allow callers to check their voicemail. Make available only when the `busy_action` is `0`.",
                                    "example": true
                                  }
                                },
                                "description": "Whether to allow callers to press zero to reach an operator or press one to leave a message, or allow neither of these options."
                              },
                              "custom_hours": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "from": {
                                      "type": "string",
                                      "description": "Values:\n \nhh:mm",
                                      "format": "time",
                                      "example": "09:30"
                                    },
                                    "to": {
                                      "type": "string",
                                      "description": "Values:\n \nhh:mm",
                                      "format": "time",
                                      "example": "22:00"
                                    },
                                    "type": {
                                      "type": "integer",
                                      "description": "Values:\n\n1-24 Hours,\n\n2-customized hours",
                                      "example": 2,
                                      "enum": [1, 2]
                                    },
                                    "weekday": {
                                      "type": "integer",
                                      "description": "Values: 1-7 sun-sat",
                                      "example": 1,
                                      "enum": [1, 2, 3, 4, 5, 6, 7]
                                    }
                                  }
                                }
                              },
                              "ring_type": {
                                "type": "string",
                                "description": "The call handling ring mode:  \n \n0-Simultaneous,  \n \n1-Sequential",
                                "example": "simultaneous"
                              },
                              "ringing_duration": {
                                "type": "string",
                                "description": "Ringing duration for each device, in seconds. Values:  \n \n10,15,20,25,30,35,40,45,50,55,60",
                                "example": "15",
                                "enum": [
                                  "10",
                                  "15",
                                  "20",
                                  "25",
                                  "30",
                                  "35",
                                  "40",
                                  "45",
                                  "50",
                                  "55",
                                  "60"
                                ]
                              },
                              "type": {
                                "type": "integer",
                                "description": "Values:\n\n1-24 Hours, 7 Days a Week;\n\n2-Custom Hours",
                                "example": 2,
                                "enum": [1, 2]
                              }
                            }
                          },
                          "close_hours": {
                            "type": "object",
                            "properties": {
                              "close_hour_action": {
                                "type": "integer",
                                "description": "The action to take when a call is not answered:  \n \n0-Forward to a voicemail;   \n \n1-Play a message, then disconnect;   \n \n9-Disconnect;   \n \n11-Forward to an external number;   \n \n26-Forward to External Contacts;   \n \n50-Forward to another extension\n",
                                "example": 50,
                                "enum": [0, 1, 9, 11, 26, 50]
                              },
                              "connect_to_operator": {
                                "type": "object",
                                "properties": {
                                  "enable": {
                                    "type": "boolean",
                                    "description": "Whether to enable connect to the operator, and you must input the `id` if you want to enable. Available only when the `close_hour_action` is `0`.",
                                    "example": true
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The extension ID of user, zoomRoom, commonAreaPhone, autoReceptionist, callQueue, or sharedLineGroup. It's available only when the `close_hour_action` is `0` or `50`",
                                    "example": "fWOgOALdT1ei4vjXK-QYsA"
                                  },
                                  "external_number": {
                                    "type": "object",
                                    "properties": {
                                      "number": {
                                        "type": "string",
                                        "description": "The phone number in E164 format.",
                                        "example": "+12055433924"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "The description for the phone number.",
                                        "example": "API test forwarding to number"
                                      }
                                    },
                                    "description": "The forwarding external number when a call is not answered. Available only when the `close_hour_action` is `11`"
                                  },
                                  "play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding sequence. Make available only when the `close_hour_action` is `0` or `50`.",
                                    "example": true
                                  },
                                  "require_press_1_before_connecting": {
                                    "type": "boolean",
                                    "description": "Whether to require pressing 1 before connecting the call. Make available only when the `close_hour_action` is `11` or '26'.",
                                    "example": true
                                  },
                                  "allow_caller_check_voicemail": {
                                    "type": "boolean",
                                    "description": "Whether to allow callers to check their voicemail. Make available only when the `close_hour_action` is `0`.",
                                    "example": true
                                  }
                                },
                                "description": "Whether to allow callers to press Zero to reach an operator or press One to leave a message, or allow neither of these options."
                              },
                              "busy_action": {
                                "type": "integer",
                                "description": "The action to take when a call is not answered:  \n \n0-Forward to a voicemail;  \n \n1-Play a message, then disconnect;   \n \n11-Forward to an external number;   \n \n12-Call waiting;   \n \n13-Play a busy signal;   \n \n26-Forward to External Contacts;   \n \n50-Forward to another extension\n.",
                                "example": 50,
                                "enum": [0, 1, 11, 12, 13, 26, 50]
                              },
                              "busy_connect_operator": {
                                "type": "object",
                                "properties": {
                                  "enable": {
                                    "type": "boolean",
                                    "description": "Whether to enable a connection to an operator. It requires the user to input the `ID` if you want to enable. It's available only when the `busy_action` is `0`.",
                                    "example": true
                                  },
                                  "id": {
                                    "type": "string",
                                    "description": "The extension ID of user, zoomRoom, commonArea, autoReceptionist, callQueue, or sharedLineGroup. It's available only when the `busy_action` is `0`, `26` or `50`.",
                                    "example": "fWOgOALdT1ei4vjXK-QYsA"
                                  },
                                  "external_number": {
                                    "type": "object",
                                    "properties": {
                                      "number": {
                                        "type": "string",
                                        "description": "The phone number in E164 format.",
                                        "example": "+12055433924"
                                      },
                                      "description": {
                                        "type": "string",
                                        "description": "The description for the phone number.",
                                        "example": "API test forwarding to number"
                                      }
                                    },
                                    "description": "The forwarding external number when a call is not answered. It's available only when the `busy_action` is `11`."
                                  },
                                  "play_callee_voicemail_greeting": {
                                    "type": "boolean",
                                    "description": "Whether to play the callee's voicemail greeting when the caller reaches the end of forwarding sequence. Make available only when the `busy_action` is `0` or `50`.",
                                    "example": true
                                  },
                                  "require_press_1_before_connecting": {
                                    "type": "boolean",
                                    "description": "Whether to require pressing 1 before connecting the call. Mkae available only when the `busy_action` is `11` or '26'.",
                                    "example": true
                                  },
                                  "allow_caller_check_voicemail": {
                                    "type": "boolean",
                                    "description": "Whether to allow callers to check their voicemail. Make available only when the `busy_action` is `0`.",
                                    "example": true
                                  }
                                },
                                "description": "Whether to allow callers to press 0 to reach an operator or press 1 to leave a message, or allow neither of these options."
                              },
                              "max_wait_time": {
                                "type": "string",
                                "description": "The maximum wait time, in seconds. Values:  \n \n10,15,20,25,30,35,40,45,50,55,60",
                                "example": "20",
                                "enum": [
                                  "10",
                                  "15",
                                  "20",
                                  "25",
                                  "30",
                                  "35",
                                  "40",
                                  "45",
                                  "50",
                                  "55",
                                  "60"
                                ]
                              }
                            }
                          }
                        }
                      },
                      "desk_phone": {
                        "type": "object",
                        "properties": {
                          "pin_code": {
                            "type": "string",
                            "description": "The pin code.",
                            "example": "0995"
                          }
                        }
                      },
                      "hold_music": {
                        "type": "string",
                        "description": "The value of this field can be either `default` or `disable`.\n\n* `default`: This means that the hold music can be set using the [audio library](https://support.zoom.us/hc/en-us/articles/360028212652-Using-the-audio-library-to-customize-greetings-and-hold-music).\n\n* `disable`: This means that the hold music is disabled.",
                        "example": "disable",
                        "enum": ["default", "disable"]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`\n\nNo Content. Request was successful."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n The country code you entered is invalid. Provide a valid country code and try again.\n\nThe area code you entered is invalid. Provide a valid area code with a length between 0 to 6 digits and try again.\n\nThe value you entered for the audio prompt language code is invalid.\nPIN code could only include numbers.\n\nInvalid PIN code. PIN code must be {0} digits long.\n\nInvalid PIN code. PIN code must be {0} to {1} digits long.\n\nInvalid PIN code. Your PIN code must not be the same as the extension number.\n\nInvalid PIN code. The PIN code must not contain a group of repeated digits.\n\nPIN code cannot be an ascending or descending group of digits.\nConnect to operator type error.\n\nYou provided an invalid value for call handling ring type. The value of this field must either be “simultaneous” or “sequential”.\n\nYou provided an invalid value for business hours type field. The value of this field must either be 1 or 2.\n\nYou provided an invalid value for the business hours action field.\n\nYou provided an invalid value for the close hours action field. <br>\n**Error Code:** `13800` <br>\n You do not enable OP flag named 'Enable Caller Based Consent Options', please using same value to update 'inbound_audio_notification.recording_start_prompt' and 'outbound_audio_notification.recording_start_prompt'. <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Account does not exist: {accountId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:setting_template:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:setting_template:admin"]
        }
      }
    },
    "/phone/ported_numbers/orders": {
      "get": {
        "tags": ["Settings"],
        "summary": "List ported numbers",
        "description": "Use this API to list ported numbers in a Zoom account.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`,`phone_peering:read:admin`\n\n**Granular Scopes:** `phone:read:list_ported_numbers:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listPortedNumbers",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nPorted Phone numbers listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "R4aF9Oj0fVM2hhezJTEmSKaBSkfesDwGy42"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30
                    },
                    "ported_numbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "numbers": {
                            "type": "array",
                            "description": "The ported numbers.",
                            "items": {
                              "type": "string",
                              "example": "+12058945752"
                            }
                          },
                          "order_id": {
                            "type": "string",
                            "description": "The ported numbers' order ID.",
                            "example": "2021080307332974349"
                          },
                          "replacing_numbers": {
                            "type": "array",
                            "description": "The ported numbers' replacement numbers.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "source_number": {
                                  "type": "string",
                                  "description": "The source number.",
                                  "example": "+12058945752"
                                },
                                "target_number": {
                                  "type": "string",
                                  "description": "The replaced number.",
                                  "example": "+12058945755"
                                }
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "The ported numbers' status.",
                            "example": "Canceled",
                            "enum": [
                              "Not_Submitted",
                              "Waiting",
                              "Processing",
                              "Successfully",
                              "Rejected",
                              "Canceled",
                              "FOC"
                            ]
                          },
                          "submission_date_time": {
                            "type": "string",
                            "description": "The time ported numbers were submitted (format: 'yyyy-MM-ddThh:dd:ssZ').",
                            "example": "2021-08-03T07:33:29Z"
                          }
                        }
                      }
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 2
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone_peering:read:admin",
              "phone:read:list_ported_numbers:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin", "phone_peering:read:admin"],
          "x-granular-scopes": ["phone:read:list_ported_numbers:admin"]
        }
      }
    },
    "/phone/ported_numbers/orders/{orderId}": {
      "get": {
        "tags": ["Settings"],
        "summary": "Get ported number details",
        "description": "Use this API to get details on the ported numbers by specifying `order_id`.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom phone license\n\n**Scopes:** `phone:read:admin`,`phone_peering:read:admin`\n\n**Granular Scopes:** `phone:read:ported_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getPortedNumbersDetails",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "description": "Order ID of the ported numbers. This can be retrieved from the List Ported Numbers API.",
            "required": true,
            "schema": { "type": "string", "example": "2021080307332974349" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nPorted numbers details retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "contact_emails": {
                      "type": "string",
                      "description": "Contact emails of transferring numbers.",
                      "example": "example@163.com"
                    },
                    "contact_number": {
                      "type": "string",
                      "description": "Contact numbers for transferring numbers.",
                      "example": "2058945753"
                    },
                    "isp": {
                      "type": "string",
                      "description": "Ported numbers' ISP.",
                      "example": "Twilio International"
                    },
                    "numbers": {
                      "type": "array",
                      "description": "Ported numbers.",
                      "items": { "type": "string", "example": "+12058945752" }
                    },
                    "order_id": {
                      "type": "string",
                      "description": "Ported numbers' order ID.",
                      "example": "2021080307332974349"
                    },
                    "original_billing_info": {
                      "type": "object",
                      "properties": {
                        "account_number": {
                          "type": "string",
                          "example": "111223"
                        },
                        "address": {
                          "type": "object",
                          "properties": {
                            "city": { "type": "string", "example": "San Jose" },
                            "country": { "type": "string", "example": "US" },
                            "house_number": {
                              "type": "string",
                              "example": "55"
                            },
                            "state_code": { "type": "string", "example": "CA" },
                            "street_name": {
                              "type": "string",
                              "example": "ALMADEN BLVD"
                            },
                            "zip": { "type": "string", "example": "95113" }
                          }
                        },
                        "authorizing_person": {
                          "type": "string",
                          "example": "zz"
                        },
                        "billing_telephone_number": {
                          "type": "string",
                          "example": "2058945751"
                        },
                        "company": { "type": "string", "example": "zm" },
                        "customer_requested_date": {
                          "type": "string",
                          "example": "2021-08-06"
                        },
                        "pin": { "type": "string", "example": "111223" }
                      },
                      "description": "Ported numbers' original billing info."
                    },
                    "printed_name": {
                      "type": "string",
                      "description": "Printed names on transferring numbers.",
                      "example": "Jiang"
                    },
                    "replacing_numbers": {
                      "type": "array",
                      "description": "The ported numbers' replacement numbers.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "source_number": {
                            "type": "string",
                            "description": "The source number.",
                            "example": "+12058945752"
                          },
                          "target_number": {
                            "type": "string",
                            "description": "The replaced number.",
                            "example": "+12058945755"
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "Ported numbers' status.",
                      "example": "Canceled",
                      "enum": [
                        "Not_Submitted",
                        "Waiting",
                        "Processing",
                        "Successfully",
                        "Rejected",
                        "Canceled",
                        "FOC"
                      ]
                    },
                    "submission_date_time": {
                      "type": "string",
                      "description": "The time ported numbers were submitted (format: 'yyyy-MM-ddThh:dd:ssZ').",
                      "example": "2021-08-03T07:33:29Z"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nPortin order does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone_peering:read:admin",
              "phone:read:ported_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin", "phone_peering:read:admin"],
          "x-granular-scopes": ["phone:read:ported_number:admin"]
        }
      }
    },
    "/phone/settings": {
      "get": {
        "tags": ["Settings"],
        "summary": "Get phone account settings",
        "description": "Returns an account's settings.\n\n**Prerequisites:**\n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:settings:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "phoneSetting",
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n Account setting returned. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "byoc": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "The swtich for the BYOC function.",
                          "example": true
                        }
                      },
                      "description": "The BYOC setting"
                    },
                    "country": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The country code.",
                          "example": "US"
                        },
                        "name": {
                          "type": "string",
                          "description": "The country name.",
                          "example": "United States"
                        }
                      }
                    },
                    "multiple_sites": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean",
                          "description": "The multiple sites switch.",
                          "example": true
                        },
                        "site_code": {
                          "type": "boolean",
                          "description": "The site code switch.",
                          "example": true
                        }
                      }
                    },
                    "show_device_ip_for_call_log": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "If the value of this field is `true`, it allows `/phone/call_logs` and `/phone/call_logs/{callLogId}` APIs to show `device_public_ip` and `device_private_ip` in the response.",
                          "example": true
                        }
                      }
                    },
                    "multiple_party_conference": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "If the value of this field is `true`, it allows multiple parties to join the conference.",
                          "example": true
                        }
                      }
                    },
                    "billing_account": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The billing account ID.",
                          "example": "3WWAEiEjTj2IQuyDiKMd_A"
                        },
                        "name": {
                          "type": "string",
                          "description": "The billing account name.",
                          "example": "Delhi billing"
                        }
                      },
                      "description": "The billing account setting."
                    }
                  },
                  "description": "The Zoom account setting"
                }
              }
            }
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden \n\n **Error Code:** `2031` <br>\n Zoom Phone has not been enabled for this account. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:read:admin", "phone:read:settings:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:settings:admin"]
        }
      },
      "patch": {
        "tags": ["Settings"],
        "summary": "Update phone account settings",
        "description": "Updates Zoom Phone [account settings](https://support.zoom.us/hc/en-us/articles/360025846692).\n\n**Prerequisites:** \n* A Business or Enterprise account\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:settings:admin`",
        "operationId": "updatePhoneSettings",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "byoc": {
                    "type": "object",
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "Setting the value of this field to `true` allows a sub account to add BYOC numbers from the Zoom web admin portal.",
                        "example": true
                      }
                    },
                    "description": "Only [master account owners](https://marketplace.zoom.us/docs/api-reference/master-account-apis) can use this MA API to enable BYOC(Bring your own carrier) option for a sub account.  \n \n\n**Scope**:  \n \n* `phone:master`   \n \n\n**Prerequisites**:   \n \n* Business or enterprise Account.  \n "
                  },
                  "multiple_sites": {
                    "type": "object",
                    "properties": {
                      "enabled": {
                        "type": "boolean",
                        "description": "When the value is set to `true` for [site management](https://support.zoom.us/hc/en-us/articles/360020809672), your current site defaults to your Main Site.",
                        "example": true
                      },
                      "site_code": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "You must enable multiple sites before you can set this value to `true`.",
                            "example": true
                          },
                          "short_extension_length": {
                            "type": "integer",
                            "description": "This field must be configured before you can set the site code to `true`. The range is [2, 10] if the account's `15-Digit Max Length Extensions` feature is enabled; if not, [2, 5].",
                            "example": 3
                          }
                        }
                      }
                    }
                  },
                  "show_device_ip_for_call_log": {
                    "type": "object",
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "This field must be set to `true` to allow `/phone/call_logs` and `/phone/call_logs/{callLogId}` APIs to show `device_public_ip` and `device_private_ip` in the response.",
                        "example": true
                      }
                    }
                  },
                  "billing_account": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The billing account ID.",
                        "example": "3WWAEiEjTj2IQuyDiKMd_A"
                      }
                    },
                    "description": "The billing account setting."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**Response HTTP code**: `204` **No Content.**  \n \nUpdated successfully.\n\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized \n\n **Error Code:** `124` <br>\n Account does not exist: {accountId}. <br>\n"
          },
          "403": {
            "description": "**HTTP Status Code:** `403` <br>\n Forbidden \n\n **Error Code:** `2031` <br>\n Zoom Phone has not been enabled for this account. <br>\n"
          },
          "412": {
            "description": "**HTTP Status Code:** `412` <br>\n undefined \n\n **Error Code:** `412` <br>\n Disable multiple sites after deleting other sites. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:settings:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:settings:admin"]
        }
      }
    },
    "/phone/sip_groups": {
      "get": {
        "tags": ["Settings"],
        "summary": "List SIP groups",
        "description": "Use this API to list SIP (Session Initiation Protocol) groups.\n\n**Prerequisites:** \n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_sip_groups:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "listSipGroups",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`\n\nSIP groups successfully listed.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "IXIhcpJWscHfISSKTcdl2QpSMLyRE38zH92"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned with a single API call.",
                      "example": 3
                    },
                    "sip_groups": {
                      "type": "array",
                      "description": "SIP group information.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The SIP group's description.",
                            "example": "test SIP group"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The SIP group's display name.",
                            "example": "RRRR"
                          },
                          "id": {
                            "type": "string",
                            "description": "The SIP group's ID.",
                            "example": "8MhK7ea4Q4ihIQ4TD_g0kw"
                          },
                          "send_sip_group_name": {
                            "type": "boolean",
                            "description": "Whether the SIP group's name is sent in the SIP header.",
                            "example": false,
                            "enum": [true, false]
                          },
                          "sip_trunk": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The SIP trunk group's ID.",
                                "example": "VWQU-veBQnm08EtBkUGnbw"
                              },
                              "name": {
                                "type": "string",
                                "description": "The SIP trunk group's name.",
                                "example": "TESTAPI01"
                              }
                            },
                            "description": "The SIP trunk group."
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_sip_groups:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_sip_groups:admin"]
        }
      }
    },
    "/phone/sip_trunk/trunks": {
      "get": {
        "tags": ["Settings"],
        "summary": "List BYOC SIP trunks",
        "description": "Use this API to return a list of an account's assigned [BYOC (Bring Your Own Carrier) SIP (Session Initiation Protocol) trunks](https://zoom.us/docs/doc/Zoom-Bring%20Your%20Own%20Carrier.pdf).\n\n**Prerequisites:** \n* A Business or Enterprise account\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_sip_trunks:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "listBYOCSIPTrunk",
        "parameters": [
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Codes**: `200`\n\nOK.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "byoc_sip_trunk": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "carrier": {
                            "type": "string",
                            "description": "Name of the carrier.",
                            "example": "Bandwidth"
                          },
                          "carrier_account": {
                            "type": "string",
                            "description": "The account associated to the carrier.",
                            "example": "123123131313"
                          },
                          "id": {
                            "type": "string",
                            "description": "The unique SIP Trunk ID.",
                            "example": "fVA-LsQhQAC2fTS7NiccFA"
                          },
                          "name": {
                            "type": "string",
                            "description": "The display name of the SIP Trunk.",
                            "example": "TestSipTrunk"
                          },
                          "region": {
                            "type": "string",
                            "description": "The region of the carrier.",
                            "example": "newqa01sipjp01"
                          },
                          "sbc_label": {
                            "type": "string",
                            "description": "The Session Border Controller (SBC) routing label.",
                            "example": "Test"
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "Used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is **15 minutes**.",
                      "example": "Ds6anZEv59aLMmTSrfF4wmHYCMiYXMWhRQ2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call. The default is **30**, and the maximum is **100**.",
                      "example": 30,
                      "default": 30
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_sip_trunks:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_sip_trunks:admin"]
        }
      }
    },
    "/phone/shared_line_appearances": {
      "get": {
        "tags": ["Shared Line Appearance"],
        "summary": "List shared line appearances",
        "description": "Use this API to list [shared line appearance](https://support.zoom.us/hc/en-us/articles/4406753208461-Enabling-or-disabling-shared-lines-privacy-mode) instances.\n\n**Prerequisites:** \n* Pro or higher account with Zoom Phone license \n* Account owner or admin privileges  \n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_shared_line_appearances:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listSharedLineAppearances",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**   \n \nShared line appearances returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "MnriWtiIAzrEfe3EW5ORlj6TFBFqL57AC42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "shared_line_appearances": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "executive": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "description": "The name of the executive in this shared line appearance.",
                                "example": "Joan Dev"
                              },
                              "extension_number": {
                                "type": "integer",
                                "description": "The extension number assigned to the executive.",
                                "format": "int64",
                                "example": 11407
                              },
                              "extension_type": {
                                "type": "string",
                                "description": "The extension type.",
                                "example": "user",
                                "enum": ["user"]
                              }
                            }
                          },
                          "assistants": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The user ID.",
                                  "example": "E8-XliWGT-a7tlKPOnrevw"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The assistant name.",
                                  "example": "Joh Dev"
                                },
                                "extension_number": {
                                  "type": "integer",
                                  "description": "The extension number assigned to the assistant.",
                                  "format": "int64",
                                  "example": 11408
                                },
                                "extension_type": {
                                  "type": "string",
                                  "description": "The extension type.",
                                  "example": "user",
                                  "enum": ["user", "commonArea"]
                                }
                              }
                            }
                          },
                          "privileges": {
                            "type": "array",
                            "items": {
                              "type": "string",
                              "description": "Privileges of this shared line appearance.",
                              "example": "place_calls",
                              "enum": [
                                "place_calls",
                                "answer_calls",
                                "pickup_hold_calls"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "Total records found in the response for this request.",
                      "example": 14
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_shared_line_appearances:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_shared_line_appearances:admin"]
        }
      }
    },
    "/phone/shared_line_groups": {
      "get": {
        "tags": ["Shared Line Group"],
        "summary": "List shared line groups",
        "description": "Lists all the shared line groups. A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common areas. This capability gives members of the shared line group access to the group's direct phone number and voicemail. \n\n**Prerequisites:**   \n \n* Pro or higher account with Zoom Phone license.\n* Account owner or admin privileges    \n \n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_shared_line_groups:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listSharedLineGroups",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK** \n\nShared Line Groups returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "MnriWtiIAzrEfe3EW5ORlj6TFBFqL57AC42"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "shared_line_groups": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "display_name": {
                            "type": "string",
                            "description": "The display name of the shared line group.",
                            "example": "jamieSLGTest"
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "The extension ID.",
                            "example": "FkOFn6d5SGqqqIkyDSXrTg"
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "The extension number assigned to the Shared Line Group.",
                            "format": "int64",
                            "example": 1000123471
                          },
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the Shared Line Group.",
                            "example": "RQinnFtmTJ25mx89tW5Cmw"
                          },
                          "phone_numbers": {
                            "type": "array",
                            "description": "The phone numbers assigned to the shared line group.",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The unique identifier of the phone number.",
                                  "example": "55JUZPwERHuGttd_j4qBsQ"
                                },
                                "number": {
                                  "type": "string",
                                  "description": "The phone number in E164 format.",
                                  "example": "+12058945565"
                                },
                                "status": {
                                  "type": "string",
                                  "description": "The status of the number.",
                                  "example": "available",
                                  "enum": ["pending", "available"]
                                }
                              }
                            }
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The unique identifier of the [site](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/getASite).",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the site.",
                                "example": "Main Site"
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the shared line group.",
                            "example": "active",
                            "enum": ["active", "inactive"]
                          }
                        }
                      }
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total records found in the response for this request.",
                      "example": 14
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_shared_line_groups:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_shared_line_groups:admin"]
        }
      },
      "post": {
        "tags": ["Shared Line Group"],
        "summary": "Create a shared line group",
        "description": "Creates a shared line group. A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common areas. This gives members of the shared line group access to the group's direct phone number and voicemail. **Prerequisites:**    * Pro or higher account with Zoom Phone license.* Account owner or admin privileges \n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:shared_line_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createASharedLineGroup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["display_name"],
                "type": "object",
                "properties": {
                  "description": {
                    "maxLength": 255,
                    "type": "string",
                    "description": "The description for the shared line group.",
                    "example": "test shared line"
                  },
                  "display_name": {
                    "maxLength": 200,
                    "type": "string",
                    "description": "The name to identify the shared line group.",
                    "example": "Mtest sharedLineGroup"
                  },
                  "extension_number": {
                    "type": "integer",
                    "description": "Extension number to be assigned to the shared line group. If a [site code has been assigned](https://support.zoom.us/hc/en-us/articles/360020809672#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b) to the site, provide the short extension number ",
                    "format": "int64",
                    "example": 1000123487
                  },
                  "site_id": {
                    "type": "string",
                    "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) that you would like to use for the shared line group. You will only be able to add members that belong to this site to the shared line group.\n\nThis field is required only if the [multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-multiple-sites) option has been enabled for the account.",
                    "example": "8f71O6rWT8KFUGQmJIFAdQ"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**    Shared Line Group created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": " The unique identifier of the shared line group.",
                      "example": "RQinnFtmTJ25mx89tW5Cmw"
                    },
                    "display_name": {
                      "type": "string",
                      "description": " The display name of the shared line group.",
                      "example": "jamieSLGTest"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n  <br>\n**Error Code:** `400` <br>\n Extension number {extensionNumber} is already used.<br><br> <br>\n**Error Code:** `409` <br>\n Invalid short number length. <br>\nNumber {extensionNumber} is a reserved extension number. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:shared_line_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:shared_line_group:admin"]
        }
      }
    },
    "/phone/shared_line_groups/{sharedLineGroupId}": {
      "get": {
        "tags": ["Shared Line Group"],
        "summary": "Get a shared line group",
        "description": " Returns a list of all the shared line groups. \n \n A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common areas. This gives members of the shared line group access to the group's direct phone number and voicemail. \n\n**Prerequisites:**   \n \n* Pro or higher account with Zoom Phone license.\n* Account owner or admin privileges \n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:shared_line_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getASharedLineGroup",
        "parameters": [
          {
            "name": "sharedLineGroupId",
            "in": "path",
            "description": "The unique identifier of the shared line group.",
            "required": true,
            "schema": { "type": "string", "example": "RQinnFtmTJ25mx89tW5Cmw" }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "display_name": {
                      "type": "string",
                      "description": "The display name of the shared line group.",
                      "example": "jamieSLGTest"
                    },
                    "extension_id": {
                      "type": "string",
                      "description": "The extension ID of the shared line group.",
                      "example": "WfsrPERXS8inWrpH1Hi_KQ"
                    },
                    "extension_number": {
                      "type": "integer",
                      "description": "The extension number assigned to the shared line group.",
                      "format": "int64",
                      "example": 1000123471
                    },
                    "id": {
                      "type": "string",
                      "description": "The unique identifier of the shared line group.",
                      "example": "RQinnFtmTJ25mx89tW5Cmw"
                    },
                    "members": {
                      "type": "object",
                      "properties": {
                        "users": {
                          "type": "array",
                          "description": "The users who are members of the shared line group.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The unique identifier of the user.",
                                "example": "mNlwFK9ISMKC2toK9oDTcg"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the user.",
                                "example": "ZOOM_API Test"
                              },
                              "extension_id": {
                                "type": "string",
                                "description": "The extension ID of the user.",
                                "example": "oeDyBe8zT2SzOZW6gQJXUA"
                              }
                            }
                          }
                        },
                        "common_areas": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The unique identifier of the common area.",
                                "example": "HIlHzOEzS8ymQPFBZ-39AQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the common area.",
                                "example": "Common Area"
                              },
                              "extension_id": {
                                "type": "string",
                                "description": "The extension ID of the common area.",
                                "example": "HIlHzOEzS8ymQPFBZ-39AQ"
                              }
                            }
                          }
                        }
                      },
                      "description": "This field allows you to view current [members](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups#h_3ffbbb77-a009-4c09-91e4-81fc264b61d6) of the shared line group."
                    },
                    "phone_numbers": {
                      "type": "array",
                      "description": "The object representing information about phone number(s) assigned to the group.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the phone number.",
                            "example": "---M1padRvSUtw7YihN7sA"
                          },
                          "number": {
                            "type": "string",
                            "description": "The phone number in E164 format.",
                            "example": "14232058798"
                          }
                        }
                      }
                    },
                    "primary_number": {
                      "type": "string",
                      "description": "If you have multiple direct phone numbers assigned to the shared line group, this is the primary number selected for desk phones. \n\nThe primary number shares the same line as the extension number. This means if a caller is routed to the shared line group through an auto receptionist, the line associated with the primary number will be used.",
                      "example": "14232058798"
                    },
                    "site": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The unique identifier of the [site](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/getASite).",
                          "example": "8f71O6rWT8KFUGQmJIFAdQ"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the site.",
                          "example": "Main Site"
                        }
                      },
                      "description": "The site assigned to the shared line group."
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the shared line group.",
                      "example": "active",
                      "enum": ["active", "inactive"]
                    },
                    "timezone": {
                      "type": "string",
                      "description": "The [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) of the Shared Line Group.",
                      "example": "Pacific/Midway"
                    },
                    "policy": {
                      "type": "object",
                      "properties": {
                        "voicemail_access_members": {
                          "uniqueItems": true,
                          "type": "array",
                          "description": "The shared voicemail access member list.",
                          "items": {
                            "allOf": [
                              {
                                "allOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "access_user_id": {
                                        "type": "string",
                                        "description": "The Zoom user ID or email or common area ID to share or update the access permissions with.",
                                        "example": "w0RChiauQeqRlv5fgxYULQ"
                                      },
                                      "allow_download": {
                                        "type": "boolean",
                                        "description": "This field specifies whether the member has download permissions. Not applicable to `commonArea`. The default is **false**.",
                                        "example": false
                                      },
                                      "allow_delete": {
                                        "type": "boolean",
                                        "description": "This field specifies whether the member has delete permissions. The default is **false**.",
                                        "example": false
                                      },
                                      "allow_sharing": {
                                        "type": "boolean",
                                        "description": "This field specifies whether the member has permission to share. The default is **false**.",
                                        "example": false
                                      }
                                    }
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "shared_id": {
                                        "type": "string",
                                        "description": "The shared voicemail ID that the member can access.",
                                        "example": "--e8ugg0SeS-9clgrDkn2w"
                                      }
                                    }
                                  }
                                ]
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "access_user_type": {
                                    "type": "string",
                                    "description": "The type of access member: `user` or `commonArea`.",
                                    "example": "user",
                                    "enum": ["user", "commonArea"]
                                  }
                                }
                              }
                            ]
                          }
                        }
                      },
                      "description": "The shared line group policy list."
                    },
                    "cost_center": {
                      "type": "string",
                      "description": "The cost center name.",
                      "example": "Cost center"
                    },
                    "department": {
                      "type": "string",
                      "description": "The department name.",
                      "example": "Department"
                    },
                    "audio_prompt_language": {
                      "type": "string",
                      "description": "The language for all default audio prompts for the Shared Line Group. \n* `en-US` : English (US) \n* `en-GB` : English (UK) \n* `es-US` : Spanish (US) \n* `fr-CA` : French (Canada) \n* `da-DK` : Danish (Denmark) \n* `de-DE` : German (Germany) \n* `es-ES` : Spanish (Spain) \n* `fr-FR` : French (France) \n* `it-IT` : Italian (Italy) \n* `nl-NL` : Dutch (Netherlands) \n* `pt-PT` : Portuguese (Portugal) \n* `ja` : Japanese \n* `ko-KR` : Korean (Korea) \n* `pt-BR` : Portuguese (Brazil) \n* `zh-CN` : Chinese (PRC)",
                      "example": "en-US",
                      "enum": [
                        "en-US",
                        "en-GB",
                        "es-US",
                        "fr-CA",
                        "da-DK",
                        "de-DE",
                        "es-ES",
                        "fr-FR",
                        "it-IT",
                        "nl-NL",
                        "pt-PT",
                        "ja",
                        "ko-KR",
                        "pt-BR",
                        "zh-CN"
                      ]
                    },
                    "recording_storage_location": {
                      "type": "string",
                      "description": "Where the recording will be stored. Recording includes Phone recordings, voicemail, voicemail transcripts, and custom greeting prompts. \n* `US` : United States \n* `AU` : Australia \n* `CA` : Canada \n* `DE` : Germany \n* `IN` : India \n* `JP` : Japan \n* `SG` : Singapore \n* `BR` : Brazil \n* `CN` : China \n* `MX` : Mexico \n\n<b>Note:</b> \n* If the setting is locked at the Account level, it can't be updated.",
                      "example": "US",
                      "enum": [
                        "US",
                        "AU",
                        "CA",
                        "DE",
                        "IN",
                        "JP",
                        "SG",
                        "BR",
                        "CN",
                        "MX"
                      ]
                    },
                    "own_storage_name": {
                      "type": "string",
                      "description": "The name of your own storage. Use your own storage provided by Oracle Cloud Infrastructure (OCI) to store Zoom Phone recordings, voicemails, and voicemail transcripts, and custom greeting prompts.",
                      "example": "us-oracle-storage"
                    },
                    "allow_privacy": {
                      "type": "boolean",
                      "description": "Whether to allow members to prevent others from picking up a held call, and listening, whispering, barging, or taking over a call if it's configured.",
                      "example": true
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Shared line group does not exist: {sharedLineGroupId}. <br>\n**Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:shared_line_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:shared_line_group:admin"]
        }
      }
    },
    "/phone/shared_line_groups/{sharedLineGroupId}/policies": {
      "get": {
        "tags": ["Shared Line Group"],
        "summary": "Get a shared line group policy",
        "description": "Returns the policy setting of a specific [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792).\n\n**Prerequisites:**\n* Pro or a higher account with Zoom Phone license\n* Account owner or admin permissions\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:shared_line_group_policy:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getSharedLineGroupPolicy",
        "parameters": [
          {
            "name": "sharedLineGroupId",
            "in": "path",
            "description": "The unique identifier of the shared line group.",
            "required": true,
            "schema": { "type": "string", "example": "nqerMCD0Tu6RPGoCpVbPtA" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**\n\nSuccessfully retrieved the shared line group policy.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "check_voicemails_over_phone": {
                      "required": ["enable", "locked"],
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "Whether to allow members in this shared line group to check voicemails for this group over phone using a PIN code.",
                          "example": true
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether the senior administrator allows users to modify the current settings.",
                          "example": true
                        },
                        "locked_by": {
                          "type": "string",
                          "description": "Which level of administrator prohibits modifying the current settings.",
                          "example": "site",
                          "enum": ["invalid", "account", "site"]
                        },
                        "modified": {
                          "type": "boolean",
                          "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `404` <br>\n Shared line group does not exist:{sharedLineGroupId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:shared_line_group_policy:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:shared_line_group_policy:admin"]
        }
      },
      "patch": {
        "tags": ["Shared Line Group"],
        "summary": "Update a shared line group policy",
        "description": "Updates the policy setting of a specific [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792). \n\n**Prerequisites:**\n* Pro or higher account plan with Zoom Phone License\n* Account owner or admin permissions\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:shared_line_group_policy:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateSharedLineGroupPolicy",
        "parameters": [
          {
            "name": "sharedLineGroupId",
            "in": "path",
            "description": "The unique identifier of the shared line group.",
            "required": true,
            "schema": { "type": "string", "example": "nqerMCD0Tu6RPGoCpVbPtA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "check_voicemails_over_phone": {
                    "type": "object",
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "Whether to allow members in this shared line group to check voicemails for this group over phone using a PIN code.",
                        "example": true
                      },
                      "reset": {
                        "type": "boolean",
                        "description": "Whether the current settings use the phone account's settings (applicable if the current settings are using the new policy framework).",
                        "example": true
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n  **No Content**  \n \nShared line group policy updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `300` <br>\n  <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:shared_line_group_policy:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:shared_line_group_policy:admin"]
        }
      }
    },
    "/phone/shared_line_groups/{slgId}": {
      "delete": {
        "tags": ["Shared Line Group"],
        "summary": "Delete a shared line group",
        "description": "Deletes a shared line group. A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common areas. \n\n**Prerequisites:**   \n * Pro or higher account with Zoom Phone license.\n * Account owner or admin privileges \n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:shared_line_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteASharedLineGroup",
        "parameters": [
          {
            "name": "slgId",
            "in": "path",
            "description": "The shared line group ID.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**   \n \nShared Line Group Deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n  <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:shared_line_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:shared_line_group:admin"]
        }
      },
      "patch": {
        "tags": ["Shared Line Group"],
        "summary": "Update a shared line group",
        "description": " Updates the information about a shared line group.  \n \n A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common areas. Members of the shared line group can access to the group's direct phone number and voicemail. \n\n**Prerequisites**   \n \n* Pro or higher account with Zoom Phone license\n* Account owner or admin privileges \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:shared_line_group:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateASharedLineGroup",
        "parameters": [
          {
            "name": "slgId",
            "in": "path",
            "description": "The shared line group ID.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "display_name": {
                    "type": "string",
                    "description": "The display name of the shared line group.",
                    "example": "slg_name_2020_12_22_06_52_34_430"
                  },
                  "extension_number": {
                    "type": "integer",
                    "description": "The extension number assigned to the shared line group.",
                    "format": "int64",
                    "example": 1000001007
                  },
                  "primary_number": {
                    "type": "string",
                    "description": "The phone number that you would like to assign as the primary number for this shared line group",
                    "example": "14232058798"
                  },
                  "status": {
                    "type": "string",
                    "description": "The status of the shared line group.",
                    "example": "active",
                    "enum": ["active", "inactive"]
                  },
                  "timezone": {
                    "type": "string",
                    "description": "The [timezone](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#timezones) of the Shared Line Group.",
                    "example": "Pacific/Midway"
                  },
                  "cost_center": {
                    "type": "string",
                    "description": "The cost center name.",
                    "example": "Cost center"
                  },
                  "department": {
                    "type": "string",
                    "description": "The department name.",
                    "example": "Department"
                  },
                  "audio_prompt_language": {
                    "type": "string",
                    "description": "The language for all default audio prompts for the Shared Line Group. \n* `en-US` : English (US) \n* `en-GB` : English (UK) \n* `es-US` : Spanish (US) \n* `fr-CA` : French (Canada) \n* `da-DK` : Danish (Denmark) \n* `de-DE` : German (Germany) \n* `es-ES` : Spanish (Spain) \n* `fr-FR` : French (France) \n* `it-IT` : Italian (Italy) \n* `nl-NL` : Dutch (Netherlands) \n* `pt-PT` : Portuguese (Portugal) \n* `ja` : Japanese \n* `ko-KR` : Korean (Korea) \n* `pt-BR` : Portuguese (Brazil) \n* `zh-CN` : Chinese (PRC)",
                    "example": "en-US",
                    "enum": [
                      "en-US",
                      "en-GB",
                      "es-US",
                      "fr-CA",
                      "da-DK",
                      "de-DE",
                      "es-ES",
                      "fr-FR",
                      "it-IT",
                      "nl-NL",
                      "pt-PT",
                      "ja",
                      "ko-KR",
                      "pt-BR",
                      "zh-CN"
                    ]
                  },
                  "recording_storage_location": {
                    "type": "string",
                    "description": "Where the recording will be stored. Recording includes Phone recordings, voicemail, voicemail transcripts, and custom greeting prompts. \n* `US` : United States \n* `AU` : Australia \n* `CA` : Canada \n* `DE` : Germany \n* `IN` : India \n* `JP` : Japan \n* `SG` : Singapore \n* `BR` : Brazil \n* `CN` : China \n* `MX` : Mexico \n\n<b>Note:</b> \n* If the setting is locked at the Account level, it can't be updated.",
                    "example": "US",
                    "enum": [
                      "US",
                      "AU",
                      "CA",
                      "DE",
                      "IN",
                      "JP",
                      "SG",
                      "BR",
                      "CN",
                      "MX"
                    ]
                  },
                  "allow_privacy": {
                    "type": "boolean",
                    "description": "Whether to allow members to prevent others from picking up a held call, and listening, whispering, barging, or taking over a call if it's configured.",
                    "example": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content** \n\nThe shared line group updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n  <br>\n**Error Code:** `409` <br>\n * Invalid short number length.<br>\n* Number {extensionNumber} is a reserved extension number.<br><br> <br>\n**Error Code:** `400` <br>\n Extension number {extensionNumber} is already used. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:shared_line_group:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:shared_line_group:admin"]
        }
      }
    },
    "/phone/shared_line_groups/{slgId}/members": {
      "post": {
        "tags": ["Shared Line Group"],
        "summary": "Add members to a shared line group",
        "description": "[Adds members](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups#h_7cb42370-48f6-4a8f-84f4-c6eee4d9f0ca) to a shared line group. A [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) allows Zoom Phone admins to share a phone number and extension with a group of phone users or common areas. This gives members of the shared line group access to the group's direct phone number and voicemail.  Note that a member can only be added to one shared line group. \n\n**Prerequisites:**   \n \n* Pro or higher account with Zoom Phone license.\n* A valid Shared Line Group\n* Account owner or admin privileges \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:shared_line_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "addMembersToSharedLineGroup",
        "parameters": [
          {
            "name": "slgId",
            "in": "path",
            "description": "The shared line group ID.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "members": {
                    "type": "object",
                    "properties": {
                      "common_area_ids": {
                        "type": "array",
                        "description": "The unique identifier of the [common area](https://marketplace.zoom.us/docs/api-reference/phone/methods/#operation/listCommonAreas), retrievable from the List Common Areas API.",
                        "items": {
                          "type": "string",
                          "example": "iewGNg-LSYa0ghhkr4d0Hg"
                        }
                      },
                      "users": {
                        "type": "array",
                        "description": "The Zoom Phone users on the account.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "email": {
                              "type": "string",
                              "description": "The email address of the user.",
                              "example": "largepbx3_018638@largepbx3.com"
                            },
                            "id": {
                              "type": "string",
                              "description": "The unique identifier of the user.",
                              "example": "gLGURYbRTSup_z4CkSwKuA"
                            }
                          }
                        }
                      }
                    },
                    "description": "The members can comprise of users on the account as well as common areas. You can add a maximum of 10 members at once."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created** \nMembers added successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n  <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User not found: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:shared_line_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:shared_line_member:admin"]
        }
      },
      "delete": {
        "tags": ["Shared Line Group"],
        "summary": "Unassign members from a shared line group",
        "description": "Unassigns **all** existing members from a shared line group. Members of the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) have access to the group's phone number and voicemail. \n\n**Prerequisites:** \n\n* Pro or higher account with Zoom Phone license.\n* A valid Shared Line Group\n* Account owner or admin privileges\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:shared_line_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteMembersOfSLG",
        "parameters": [
          {
            "name": "slgId",
            "in": "path",
            "description": "The shared line group ID.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\n\nMembers unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n  <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:shared_line_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:shared_line_member:admin"]
        }
      }
    },
    "/phone/shared_line_groups/{slgId}/members/{memberId}": {
      "delete": {
        "tags": ["Shared Line Group"],
        "summary": "Unassign a member from a shared line group",
        "description": "Unassigns **a specific member** from a shared line group. Members of the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) have access to the group's phone number and voicemail. \n\n**Prerequisites:**   \n \n* Pro or higher account with Zoom Phone license.\n* A valid Shared Line Group\n* Account owner or admin privileges\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:shared_line_member:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteAMemberSLG",
        "parameters": [
          {
            "name": "slgId",
            "in": "path",
            "description": "The unique identifier of the shared line group from which you would like to remove a member.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          },
          {
            "name": "memberId",
            "in": "path",
            "description": "The unique identifier of the member who is to be removed.",
            "required": true,
            "schema": { "type": "string", "example": "DnEopNmXQEGU2uvvzjgojw" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \n\nMembers unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n  <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:shared_line_member:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:shared_line_member:admin"]
        }
      }
    },
    "/phone/shared_line_groups/{slgId}/phone_numbers": {
      "post": {
        "tags": ["Shared Line Group"],
        "summary": "Assign phone numbers",
        "description": "Assigns phone numbers to a shared line groups. These direct phone numbers will be shared among members of the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups).\n\n**Prerequisites:**   \n * Pro or higher account with Zoom Phone license.\n * A valid Shared Line Group\n * Account owner or admin privileges\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:shared_line_group_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "assignPhoneNumbersSLG",
        "parameters": [
          {
            "name": "slgId",
            "in": "path",
            "description": "The shared line group ID.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone_numbers": {
                    "type": "array",
                    "description": "The phone number(s) to be assigned to the shared line group.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The unique identifier of the phone number.",
                          "example": "---M1padRvSUtw7YihN7sA"
                        },
                        "number": {
                          "type": "string",
                          "description": "The phone number.",
                          "example": "14232058798"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \nPhone number(s) assigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Phone number does not exist<br><br> <br>\n**Error Code:** `300` <br>\n  <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Phone number does not belong to this account <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:shared_line_group_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:shared_line_group_number:admin"]
        }
      },
      "delete": {
        "tags": ["Shared Line Group"],
        "summary": "Unassign all phone numbers",
        "description": "Unassigns all the phone numbers that have been assigned to the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups).\n\n**Prerequisites:** \n\n* Pro or higher account with Zoom Phone license.\n* A valid Shared Line Group\n* Account owner or admin privileges\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:shared_line_group_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deletePhoneNumbersSLG",
        "parameters": [
          {
            "name": "slgId",
            "in": "path",
            "description": "The shared line group ID.",
            "required": true,
            "schema": { "type": "string", "example": "uvsOCaiDQR2M-NviKFHo0w" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nPhone Numbers unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Phone number does not exist <br>\n**Error Code:** `300` <br>\n  <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Phone number does not belong to this account <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:shared_line_group_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:shared_line_group_number:admin"]
        }
      }
    },
    "/phone/shared_line_groups/{slgId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "tags": ["Shared Line Group"],
        "summary": "Unassign a phone number",
        "description": "Unassigns a specific phone number that was assigned to the [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792-Setting-up-shared-line-groups).\n\n**Prerequisites:**   \n \n* Pro or higher account with Zoom Phone license.\n* A valid shared line group\n* Account owner or admin privileges\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:shared_line_group_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "deleteAPhoneNumberSLG",
        "parameters": [
          {
            "name": "slgId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "phoneNumberId",
            "in": "path",
            "description": "The unique identifier of the phone number which is to be unassigned. This can be retrieved from Get a Shared Line Group API.",
            "required": true,
            "schema": { "type": "string", "example": "---M1padRvSUtw7YihN7sA" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nPhone Numbers unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Phone number does not exist<br><br> <br>\n**Error Code:** `300` <br>\n  <br>\n"
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Phone number does not belong to this account <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:shared_line_group_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:shared_line_group_number:admin"]
        }
      }
    },
    "/phone/shared_line_groups/{slgId}/policies/{policyType}": {
      "post": {
        "tags": ["Shared Line Group"],
        "summary": "Add a policy setting to a shared line group",
        "description": "Adds the policy sub-setting for a specific [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) according to the `policyType`. For example, you can use this API to set up shared access members. **Prerequisites:** * Pro or higher account with Zoom Phone license.* Account owner or admin privileges \n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:shared_line_group_policy:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "addSLGPolicySubSetting",
        "parameters": [
          {
            "name": "slgId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "policyType",
            "in": "path",
            "description": "This setting corresponds to tbe policy item you wish to add. Allowed values: `voice_mail`.",
            "required": true,
            "schema": { "type": "string", "example": "voice_mail" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "voicemail_access_members": {
                    "uniqueItems": true,
                    "type": "array",
                    "description": "The shared voicemail access member list.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "access_user_id": {
                          "type": "string",
                          "description": "The Zoom user ID, email, or common area ID of which to share or update the access permissions.",
                          "example": "w0RChiauQeqRlv5fgxYULQ"
                        },
                        "allow_download": {
                          "type": "boolean",
                          "description": "Whether the member has download permissions. Not applicable to `commonArea`. The default is **false**.",
                          "example": false
                        },
                        "allow_delete": {
                          "type": "boolean",
                          "description": "Whether the member has delete permissions. The default is **false**.",
                          "example": false
                        },
                        "allow_sharing": {
                          "type": "boolean",
                          "description": "Whether the member has permission to share. The default is **false**.",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code** `201`   \n \nCreated Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "voicemail_access_members": {
                      "uniqueItems": true,
                      "type": "array",
                      "description": "The shared access member list.",
                      "items": {
                        "allOf": [
                          {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "access_user_id": {
                                    "type": "string",
                                    "description": "The Zoom user ID, email, or common area ID of which to share or update the access permissions.",
                                    "example": "w0RChiauQeqRlv5fgxYULQ"
                                  },
                                  "allow_download": {
                                    "type": "boolean",
                                    "description": "Whether the member has download permissions. Not applicable to `commonArea`. The default is **false**.",
                                    "example": false
                                  },
                                  "allow_delete": {
                                    "type": "boolean",
                                    "description": "Whether the member has delete permissions. The default is **false**.",
                                    "example": false
                                  },
                                  "allow_sharing": {
                                    "type": "boolean",
                                    "description": "Whether the member has permission to share. The default is **false**.",
                                    "example": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "shared_id": {
                                    "type": "string",
                                    "description": "The shared voicemail ID that the member can access.",
                                    "example": "--e8ugg0SeS-9clgrDkn2w"
                                  }
                                }
                              }
                            ]
                          },
                          {
                            "type": "object",
                            "properties": {
                              "access_user_type": {
                                "type": "string",
                                "description": "The type of access member: `user` or `commonArea`.",
                                "example": "user",
                                "enum": ["user", "commonArea"]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:shared_line_group_policy:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:shared_line_group_policy:admin"]
        }
      },
      "delete": {
        "tags": ["Shared Line Group"],
        "summary": "Delete an SLG policy setting",
        "description": "Removes the policy sub-setting for a specific [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) according to the `policyType`. For example, you can use this API to remove shared access members. **Prerequisites:** * Pro or higher account with Zoom Phone license.* Account owner or admin privileges \n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:shared_line_group_policy:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "removeSLGPolicySubSetting",
        "parameters": [
          {
            "name": "slgId",
            "in": "path",
            "description": "The shared line group ID.",
            "required": true,
            "schema": { "type": "string", "example": "" }
          },
          {
            "name": "policyType",
            "in": "path",
            "description": "This setting corresponds to tbe policy item you wish to remove. Allowed values: `voice_mail`.",
            "required": true,
            "schema": { "type": "string", "example": "voice_mail" }
          },
          {
            "name": "shared_ids",
            "in": "query",
            "description": "The comma separated list of shared IDs to remove. The number is limited to the minimum value of 10 or the number of allowed access members account setting.",
            "required": true,
            "schema": {
              "maxItems": 20,
              "type": "array",
              "example": [],
              "items": { "type": "string", "example": "8_RkKw9OQ42oYsXqJJjs4A" }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content  \n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:shared_line_group_policy:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:shared_line_group_policy:admin"]
        }
      },
      "patch": {
        "tags": ["Shared Line Group"],
        "summary": "Update an SLG policy setting",
        "description": "Updates the policy sub-setting for a specific [shared line group](https://support.zoom.us/hc/en-us/articles/360038850792) according to the `policyType`. For example, you can use this API to update shared access members. \n\n**Prerequisites:** \n* Pro or higher account with Zoom Phone license.\n* Account owner or admin privileges \n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:shared_line_group_policy:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateSLGPolicySubSetting",
        "parameters": [
          {
            "name": "slgId",
            "in": "path",
            "required": true,
            "schema": { "type": "string" }
          },
          {
            "name": "policyType",
            "in": "path",
            "description": "This setting corresponds to tbe policy item you wish to update. Allowed values: `voice_mail`.",
            "required": true,
            "schema": { "type": "string", "example": "voice_mail" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "voicemail_access_members": {
                    "type": "array",
                    "description": "The shared voicemail access member list.",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "access_user_id": {
                              "type": "string",
                              "description": "The Zoom user ID, email, or common area ID of which to share or update the access permissions.",
                              "example": "w0RChiauQeqRlv5fgxYULQ"
                            },
                            "allow_download": {
                              "type": "boolean",
                              "description": "Whether the member has download permissions. Not applicable to `commonArea`. The default is **false**.",
                              "example": false
                            },
                            "allow_delete": {
                              "type": "boolean",
                              "description": "Whether the member has delete permissions. The default is **false**.",
                              "example": false
                            },
                            "allow_sharing": {
                              "type": "boolean",
                              "description": "Whether the member has permission to share. The default is **false**.",
                              "example": false
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "shared_id": {
                              "type": "string",
                              "description": "The shared voicemail ID that the member can access.",
                              "example": "--e8ugg0SeS-9clgrDkn2w"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content  \n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n "
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:shared_line_group_policy:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:shared_line_group_policy:admin"]
        }
      }
    },
    "/phone/sites": {
      "get": {
        "tags": ["Sites"],
        "summary": "List phone sites",
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to list all the [sites](https://support.zoom.us/hc/en-us/articles/360020809672) that have been created for an account.  \n \n**Prerequisites:**  \n \n* Multiple Sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).\n* Pro or a higher account with Zoom Phone enabled.\n\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_sites:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listPhoneSites",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "nav48KOj42vYPSG4f0cCdT575bZ980did22"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call.",
                      "example": 10
                    },
                    "sites": {
                      "type": "array",
                      "description": "List of site(s).",
                      "items": {
                        "type": "object",
                        "properties": {
                          "country": {
                            "type": "object",
                            "properties": {
                              "code": {
                                "type": "string",
                                "description": "The two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                                "example": "US"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the country.",
                                "example": "United States"
                              }
                            },
                            "description": "The country of the site."
                          },
                          "id": {
                            "type": "string",
                            "description": "The site ID is the unique identifier of the site.",
                            "example": "SQv52YtkRLC2dwrDdYtGsA"
                          },
                          "main_auto_receptionist": {
                            "type": "object",
                            "properties": {
                              "extension_id": {
                                "type": "string",
                                "description": "The extension ID",
                                "example": "pl1XprjhTQK1CCMVKTqCFA"
                              },
                              "extension_number": {
                                "type": "integer",
                                "description": "The extension number",
                                "format": "int64",
                                "example": 12345
                              },
                              "id": {
                                "type": "string",
                                "description": "The identifier of the [auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Interactive-Voice-Response-IVR-).",
                                "example": "Kbdc9lv_SBCuPMjj_lhxVA"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the auto receptionist.",
                                "example": "ApiTA_R_2020_07_12_00_41_57_145"
                              }
                            },
                            "description": "The auto receptionist for each site."
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the site.",
                            "example": "ApiTA_Site_2020_07_12_00_41_57_141"
                          },
                          "site_code": {
                            "type": "integer",
                            "description": "The site code",
                            "example": 1
                          }
                        }
                      }
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 20
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_sites:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_sites:admin"]
        }
      },
      "post": {
        "tags": ["Sites"],
        "summary": "Create a phone site",
        "description": "Creates a [site](https://support.zoom.us/hc/en-us/articles/360020809672) that allows you to organize the Zoom Phone users in your organization.\n\n**Prerequisites:**\n* Multiple sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15). \n* Pro or a higher account with Zoom Phone enabled.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:site:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "createPhoneSite",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": [
                  "auto_receptionist_name",
                  "default_emergency_address",
                  "name"
                ],
                "type": "object",
                "properties": {
                  "auto_receptionist_name": {
                    "type": "string",
                    "description": "The display name of the [auto-receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-) for the site.",
                    "example": "ApiTA_R_2020_07_12_00_41_57_145"
                  },
                  "source_auto_receptionist_id": {
                    "type": "string",
                    "description": "The ID of the [auto-receptionist](https://support.zoom.us/hc/en-us/articles/360021121312-Managing-Auto-Receptionists-and-Integrated-Voice-Response-IVR-) that you can copy.",
                    "example": "0m0dGevHR2ulyMgxFLeVEA"
                  },
                  "default_emergency_address": {
                    "required": [
                      "address_line1",
                      "city",
                      "country",
                      "state_code",
                      "zip"
                    ],
                    "type": "object",
                    "properties": {
                      "address_line1": {
                        "type": "string",
                        "description": "The address Line 1 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that contains the house number and street name.",
                        "example": "55 Almaden Boulevard"
                      },
                      "address_line2": {
                        "type": "string",
                        "description": "The address Line 2 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that contains the building number, floor number, unit, and others.",
                        "example": "8 Floor"
                      },
                      "city": {
                        "type": "string",
                        "description": "The city of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                        "example": "SAN JOSE"
                      },
                      "country": {
                        "maxLength": 2,
                        "minLength": 2,
                        "type": "string",
                        "description": "The two-lettered country code (Alpha-2 code in ISO-3166 format) of the site's [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                        "example": "US"
                      },
                      "state_code": {
                        "type": "string",
                        "description": "The state code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                        "example": "CA"
                      },
                      "zip": {
                        "type": "string",
                        "description": "The zip code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                        "example": "95113"
                      }
                    },
                    "description": "The default emergency address. If the address provided is not an exact match, it uses the system generated corrected address."
                  },
                  "name": {
                    "maxLength": 255,
                    "minLength": 1,
                    "type": "string",
                    "description": "The name of the site.",
                    "example": "Main site"
                  },
                  "short_extension": {
                    "type": "object",
                    "properties": {
                      "length": {
                        "type": "integer",
                        "description": "The length of short extension numbers for the site.\n\nSince there is a default 6-digit limit on extensions, the short extension can be two to five digits. The length of site code added to the length of short extension cannot exceed a value of `6` For example, the length of `site_code`+ length of `short_extension` should always be less than or equal to 6.",
                        "example": 4,
                        "default": 3
                      }
                    },
                    "description": "The short extension of the phone site."
                  },
                  "site_code": {
                    "type": "integer",
                    "description": "The identifier for a site. This field is required when the site code is enabled.\n\n",
                    "example": 2
                  },
                  "sip_zone": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The SIP zone ID.",
                        "example": "2J9UXzGuTaqCdZ8sw_0jBw"
                      }
                    },
                    "description": "If the account enabled the `Display Custom SIP Zone Options on Web Portal` feature, then selecting a SIP zone nearest to your site might help reduce latency and improve call quality."
                  },
                  "force_off_net": {
                    "type": "object",
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "By enabling Force Off-Net, calls from users or extensions between sites route through the PSTN network. Users in this site are only allowed to be part of the advanced functionality (eg. Auto Receptionists, Call Queues) configured in this site. ",
                        "example": true
                      },
                      "allow_extension_only_users_call_users_outside_site": {
                        "type": "boolean",
                        "description": "This setting allows extension only users to call to users outside the site.",
                        "example": true
                      }
                    },
                    "description": "It requires the account to enable the `Force Calls out to the PSTN network` feature. "
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**   Site created successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": " The site ID is the unique identifier of a site.",
                      "example": "SQv52YtkRLC2dwrDdYtGsA"
                    },
                    "name": {
                      "type": "string",
                      "description": " The name of the site.",
                      "example": "ApiTA_Site_2020_07_12_00_41_57_141"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `400` <br>\n Invalid site code length.<br>Country information is invalid.<br>This address could not be validated or geocoded. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:write:admin", "phone:write:site:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:site:admin"]
        }
      }
    },
    "/phone/sites/{siteId}": {
      "get": {
        "tags": ["Sites"],
        "summary": "Get phone site details",
        "description": "Returns information on a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672). Sites allow you to organize Zoom Phone users in your organization. \n\n**Prerequisites:** \n* Account must have a Pro or a higher plan with Zoom Phone license.\n* Multiple sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:site:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getASite",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The unique identifier of the site.",
            "required": true,
            "schema": { "type": "string", "example": "SQv52YtkRLC2dwrDdYtGsA" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nSite information retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "country": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                          "example": "US"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the country.",
                          "example": "United States"
                        }
                      },
                      "description": "The country of the site."
                    },
                    "id": {
                      "type": "string",
                      "description": "The site ID is the unique identifier of the site.",
                      "example": "SQv52YtkRLC2dwrDdYtGsA"
                    },
                    "main_auto_receptionist": {
                      "type": "object",
                      "properties": {
                        "extension_id": {
                          "type": "string",
                          "description": "The extension ID.",
                          "example": "pl1XprjhTQK1CCMVKTqCFA"
                        },
                        "extension_number": {
                          "type": "integer",
                          "description": "The extension number.",
                          "format": "int64",
                          "example": 12345
                        },
                        "id": {
                          "type": "string",
                          "description": "The unique identifier of the auto receptionist.",
                          "example": "Kbdc9lv_SBCuPMjj_lhxVA"
                        },
                        "name": {
                          "type": "string",
                          "description": "The name of the auto receptionist.",
                          "example": "ApiTA_R_2020_07_12_00_41_57_145"
                        }
                      },
                      "description": " The [main auto receptionist](https://support.zoom.us/hc/en-us/articles/360021121312#h_bc7ff1d5-0e6c-40cd-b889-62010cb98c57) for each site."
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the site.",
                      "example": "ApiTA_Site_2020_07_12_00_41_57_141"
                    },
                    "short_extension": {
                      "type": "object",
                      "properties": {
                        "length": {
                          "type": "integer",
                          "description": "The length of the short extension number for the site.",
                          "example": 3,
                          "default": 3
                        }
                      },
                      "description": "The short extension of the phone site."
                    },
                    "site_code": {
                      "type": "integer",
                      "description": "The [site code](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b).",
                      "example": 321
                    },
                    "policy": {
                      "type": "object",
                      "properties": {
                        "select_outbound_caller_id": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow the current extension to change the outbound caller ID when placing calls.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset. The settings display when using the new policy framework.",
                              "example": true
                            },
                            "allow_hide_outbound_caller_id": {
                              "type": "boolean",
                              "description": "Whether to allow the current extension to hide outbound caller ID.",
                              "example": true
                            }
                          }
                        },
                        "personal_audio_library": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "This field allows users to access, share, download, or delete voicemail or videomail.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset. The settings display when using the new policy framework.",
                              "example": true
                            },
                            "allow_music_on_hold_customization": {
                              "type": "boolean",
                              "description": "Whether to allow music on hold customization.",
                              "example": true
                            },
                            "allow_voicemail_and_message_greeting_customization": {
                              "type": "boolean",
                              "description": "Whether to allow voicemail and message greeting customization.",
                              "example": true
                            }
                          }
                        },
                        "voicemail": {
                          "type": "object",
                          "properties": {
                            "allow_delete": {
                              "type": "boolean",
                              "description": "This setting allows users to delete their own voicemail. It displays only when using the new policy framework.",
                              "example": true
                            },
                            "allow_download": {
                              "type": "boolean",
                              "description": "This setting allows users to download their own voicemail. It displays only when using the new policy framework.",
                              "example": false
                            },
                            "allow_videomail": {
                              "type": "boolean",
                              "description": "This setting allows users to access, share, download or delete video mail",
                              "example": true
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "This setting allows users to access, receive, or share voicemail and video mail.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator can prohibit users to modify the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset. The settings display when using the new policy framework.",
                              "example": true
                            }
                          }
                        },
                        "voicemail_transcription": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to access transcriptions of voicemails from the Zoom client, the Zoom web portal, and email notifications.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset. The settings display when using the new policy framework.",
                              "example": true
                            }
                          }
                        },
                        "voicemail_notification_by_email": {
                          "type": "object",
                          "properties": {
                            "include_voicemail_file": {
                              "type": "boolean",
                              "description": "Whether to include the voicemail file.",
                              "example": true
                            },
                            "include_voicemail_transcription": {
                              "type": "boolean",
                              "description": "Whether to include the voicemail transcription.",
                              "example": false
                            },
                            "forward_voicemail_to_email": {
                              "type": "boolean",
                              "description": "Whether to forward the voicemail to email.",
                              "example": true
                            },
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset. The settings display when using the new policy framework.",
                              "example": true
                            }
                          },
                          "description": "Once enabled, users receive email notifications when there is a new voicemail from users, call queues, auto receptionists, or shared line groups. Users who disabled the shared voicemail notification by email policy receive notifications. They display when the voicemail policy uses the new policy framework."
                        },
                        "shared_voicemail_notification_by_email": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator can prohibit users to modify the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            }
                          },
                          "description": "Once enabled, users will receive email notification when there is a new shared voicemail/videomail. If the extension that shares the voicemail or videomail has disabled the voicemail or videomail notification by email policy, users will not receive notifications. They only display when the voicemail policy uses the new policy framework."
                        },
                        "international_calling": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator can prohibit users to modify the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset. The settings display when using the new policy framework.",
                              "example": true
                            }
                          },
                          "description": "Whether to allow extensions to place international calls outside of the calling plan."
                        },
                        "zoom_phone_on_mobile": {
                          "type": "object",
                          "properties": {
                            "allow_calling_sms_mms": {
                              "type": "boolean",
                              "description": "This field allows calling and SMS/MMS functions on mobile.",
                              "example": true
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "This field allows users to use Zoom Phone on mobile clients (iOS, iPad OS and Android).",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, you can reset settings to display when using the new policy framework.",
                              "example": true
                            }
                          }
                        },
                        "sms": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users, call queues, and auto receptionists to send and receive messages. You need to assign a valid calling plan and phone number to each user for them to send and receive messages.",
                              "example": true
                            },
                            "international_sms": {
                              "type": "boolean",
                              "description": "Whether the user can send and receive international messages.",
                              "example": true
                            },
                            "international_sms_countries": {
                              "type": "array",
                              "description": "The country to which users can send and receive international messages. The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                              "items": { "type": "string", "example": "US" }
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset. The settings display when using the new policy framework.",
                              "example": true
                            }
                          }
                        },
                        "elevate_to_meeting": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to elevate their phone calls to a meeting.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator can prohibit users to modify the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            }
                          }
                        },
                        "hand_off_to_room": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to send a call to a Zoom Room.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator can prohibit users to modify the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset. The settings display when using the new policy framework.",
                              "example": true
                            }
                          }
                        },
                        "mobile_switch_to_carrier": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow the user to switch from a Zoom Phone to their native carrier.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            }
                          }
                        },
                        "delegation": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            }
                          },
                          "description": "Whether the user can use [call delegation](https://support.zoom.us/hc/en-us/articles/360032881731-Setting-up-call-delegation-shared-lines-appearance-)."
                        },
                        "ad_hoc_call_recording": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether the current extension can record and save calls to the cloud.",
                              "example": true
                            },
                            "recording_start_prompt": {
                              "type": "boolean",
                              "description": "Whether a prompt plays to call participants when the recording has started.",
                              "example": false
                            },
                            "recording_transcription": {
                              "type": "boolean",
                              "description": "Whether the call recording transcription is enabled.",
                              "example": true
                            },
                            "play_recording_beep_tone": {
                              "type": "object",
                              "properties": {
                                "enable": {
                                  "type": "boolean",
                                  "description": "Whether to play the side tone beep for recorded users while recording. It displays only when ad hoc call recording policy uses the new framework.",
                                  "example": true
                                },
                                "play_beep_volume": {
                                  "type": "integer",
                                  "description": "The side tone beep volume. It displays only when `enable` is set to `true`.",
                                  "example": 60,
                                  "enum": [0, 20, 40, 60, 80, 100]
                                },
                                "play_beep_time_interval": {
                                  "type": "integer",
                                  "description": "The beep time interval in seconds. It displays only when `enable` is set to true.",
                                  "example": 15,
                                  "enum": [5, 10, 15, 20, 25, 30, 60, 120]
                                },
                                "play_beep_member": {
                                  "type": "string",
                                  "description": "The beep sides. It displays only when `enable` is set to true.",
                                  "example": "allMember",
                                  "enum": ["allMember", "recordingSide"]
                                }
                              }
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            }
                          },
                          "description": "A list of ad hoc call recording settings."
                        },
                        "auto_call_recording": {
                          "type": "object",
                          "properties": {
                            "allow_stop_resume_recording": {
                              "type": "boolean",
                              "description": "Whether the stop and resume of automatic call recording is enabled.",
                              "example": true
                            },
                            "disconnect_on_recording_failure": {
                              "type": "boolean",
                              "description": "Whether a call disconnects when there is an issue with the automatic call recording and the call cannot reconnect after five seconds. This does **not** include emergency calls.",
                              "example": true
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "Whether automatic call recording is enabled.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            },
                            "recording_calls": {
                              "type": "string",
                              "description": "The type of calls automatically recorded: \n* `inbound` \n* `outbound` \n* `both`",
                              "example": "inbound",
                              "enum": ["inbound", "outbound", "both"]
                            },
                            "recording_explicit_consent": {
                              "type": "boolean",
                              "description": "Whether the `Press 1 option that provides recording consent` is enabled.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` to operate inbound and outbound prompt separately.\n\n<b>Note:</b> \n* If customers opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent` and `inbound_audio_notification.recording_explicit_consent` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_explicit_consent` will be also updated.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent. When the field is updated, the `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` will be also updated.",
                              "example": true,
                              "deprecated": true
                            },
                            "recording_start_prompt": {
                              "type": "boolean",
                              "description": "Whether a prompt plays to call participants when the recording has started.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` to operate inbound and outbound prompt separately.\n\n<b>Note:</b> \n* If customers opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt` and `inbound_audio_notification.recording_start_prompt` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt` will be also updated.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` will be also updated.",
                              "example": true,
                              "deprecated": true
                            },
                            "recording_transcription": {
                              "type": "boolean",
                              "description": "Whether the call recording transcription is enabled.",
                              "example": true
                            },
                            "play_recording_beep_tone": {
                              "type": "object",
                              "properties": {
                                "enable": {
                                  "type": "boolean",
                                  "description": "Whether to play the side tone beep for recorded users while recording. It displays only when auto call recording policy uses the new framework.",
                                  "example": true
                                },
                                "play_beep_volume": {
                                  "type": "integer",
                                  "description": "The side tone beep volume. It displays only when `enable` is set to `true`.",
                                  "example": 60,
                                  "enum": [0, 20, 40, 60, 80, 100]
                                },
                                "play_beep_time_interval": {
                                  "type": "integer",
                                  "description": "The beep time interval in seconds. It displays only when the `enable` is set to true.",
                                  "example": 15,
                                  "enum": [5, 10, 15, 20, 25, 30, 60, 120]
                                },
                                "play_beep_member": {
                                  "type": "string",
                                  "description": "The beep sides. It displays only when the `enable` is set to true.",
                                  "example": "allMember",
                                  "enum": ["allMember", "recordingSide"]
                                }
                              }
                            },
                            "inbound_audio_notification": {
                              "type": "object",
                              "properties": {
                                "recording_start_prompt": {
                                  "type": "boolean",
                                  "description": "Whether a prompt plays to call participants when the recording has started for inbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                                  "example": true
                                },
                                "recording_explicit_consent": {
                                  "type": "boolean",
                                  "description": "Whether the **Press 1** option that provides recording consent for inbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` with the same value.",
                                  "example": true
                                }
                              }
                            },
                            "outbound_audio_notification": {
                              "type": "object",
                              "properties": {
                                "recording_start_prompt": {
                                  "type": "boolean",
                                  "description": "Whether a prompt plays to call participants when the recording has started for outbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                                  "example": true
                                },
                                "recording_explicit_consent": {
                                  "type": "boolean",
                                  "description": "Whether the **Press 1** option that provides recording consent for outbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` with the same value.",
                                  "example": true
                                }
                              }
                            }
                          },
                          "description": "A list of the site's automatic call recording settings."
                        },
                        "call_handling_forwarding_to_other_users": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "call_forwarding_type": {
                              "type": "integer",
                              "description": "`1` - Low restriction (external numbers not allowed)\n`2` - Medium restriction (external numbers and external contacts not allowed)\n `3` - High restriction (external numbers, external contacts and internal extensions without inbound automatic call recording not allowed)\n`4` - No restriction",
                              "example": 1,
                              "enum": [1, 2, 3, 4]
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            }
                          },
                          "description": "Whether to allow users to forward their calls to other numbers."
                        },
                        "check_voicemails_over_phone": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator can prohibit users to modify the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            }
                          },
                          "description": "Whether to allow extension owners or members of a shared line group to check voicemails for extension numbers over the phone using PIN code."
                        },
                        "call_queue_pickup_code": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            }
                          },
                          "description": "After enabling the feature, a unique pickup code generates for each queue, which can be customized in the `Call Queue` profile. Queued calls can be answered with the pickup code by the users under the same site."
                        },
                        "call_queue_opt_out_reason": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            },
                            "call_queue_opt_out_reasons_list": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "code": {
                                    "type": "string",
                                    "example": "Break"
                                  },
                                  "system": {
                                    "type": "boolean",
                                    "description": "The system default reason. It cannot be edited.",
                                    "example": true
                                  },
                                  "enable": {
                                    "type": "boolean",
                                    "example": true
                                  }
                                }
                              }
                            }
                          },
                          "description": "The opt-out reasons for call queues. When enabled, call queue members need to select an opt-out reason when they turn off the `receive queue call` feature."
                        },
                        "show_user_last_transferred_call": {
                          "type": "boolean",
                          "description": "Whether to show the user who last transferred the call. Viewing preferences display on the incoming call panel. Selections made here do not affect the information shown in call logs.",
                          "example": true
                        },
                        "auto_delete_data_after_retention_duration": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "This field allows Zoom to automatically delete data after the retention duration has lapsed.",
                              "example": true
                            },
                            "reset": {
                              "type": "boolean",
                              "description": "Whether the current settings will use the phone account's settings if the current settings use the new policy framework.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "items": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "type": {
                                    "type": "string",
                                    "description": "The data types.",
                                    "example": "callLog",
                                    "enum": [
                                      "callLog",
                                      "onDemandRecording",
                                      "automaticRecording",
                                      "voicemail",
                                      "videomail",
                                      "sms"
                                    ]
                                  },
                                  "duration": {
                                    "type": "integer",
                                    "description": "The retention duration where -1 means unlimited. For units of time, see the `time_unit` below. For `year`, the duration:-1, 1-10; for `day`, the duration:-1, 1-60; for `month`, the duration:-1, 1-18.",
                                    "example": -1
                                  },
                                  "time_unit": {
                                    "type": "string",
                                    "description": "The unit of time.",
                                    "example": "year",
                                    "enum": ["year", "month", "day"]
                                  }
                                }
                              }
                            },
                            "delete_type": {
                              "type": "integer",
                              "description": "The delete policy.  \n * 1 - soft delete   \n * 2 - permanent delete",
                              "example": 1,
                              "enum": [1, 2]
                            }
                          }
                        },
                        "call_park": {
                          "type": "object",
                          "properties": {
                            "call_not_picked_up_action": {
                              "type": "integer",
                              "description": "The action when a parked call is not picked up. \n `100` - Ring back to parker \n`0` - Forward to voicemail of the parker \n`9` - Disconnect \n `50` - Forward to another extension",
                              "example": 50
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow calls placed on hold to be resumed from another location with a retrieval code.",
                              "example": true
                            },
                            "expiration_period": {
                              "type": "integer",
                              "description": "A time limit for parked calls in minutes. After the expiration period ends, the retrieval code is no longer valid and a new code generates.",
                              "example": 3,
                              "enum": [
                                1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30,
                                35, 40, 45, 50, 55, 60
                              ]
                            },
                            "forward_to": {
                              "type": "object",
                              "properties": {
                                "display_name": {
                                  "type": "string",
                                  "description": "The extension's name.",
                                  "example": "ZOOM_API Test"
                                },
                                "extension_id": {
                                  "type": "string",
                                  "description": "The extension ID.",
                                  "example": "TO586CYlQFC_WCUvPRXytA"
                                },
                                "extension_number": {
                                  "type": "integer",
                                  "description": "The extension number.",
                                  "format": "int64",
                                  "example": 100014
                                },
                                "extension_type": {
                                  "type": "string",
                                  "description": "The type of extension: \n* `user` \n* `zoomRoom` \n* `commonArea`\n* `ciscoRoom/polycomRoom` \n* `autoReceptionist` \n* `sharedLineGroup` \n* `callQueue`",
                                  "example": "user",
                                  "enum": [
                                    "user",
                                    "zoomRoom",
                                    "commonArea",
                                    "ciscoRoom/polycomRoom",
                                    "autoReceptionist",
                                    "callQueue",
                                    "sharedLineGroup"
                                  ]
                                },
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the extension `user`, `zoomRoom`, `commonArea`, `ciscoRoom/polycomRoom`, `autoReceptionist`, `callQueue` or `sharedLineGroup`.",
                                  "example": "oG_nYRFuTJiY1tu0Fur_4Q"
                                }
                              },
                              "description": "The extension's forwarding information."
                            },
                            "sequence": {
                              "type": "integer",
                              "description": "This field chooses how parked calls are assigned to a BLF (Busy Lamp Field) key. Sequential assignment parks the call at the next available BLF key. Random assignment parks the call at a randomly selected BLF key. \n`0` - Random \n`1` - Sequential",
                              "example": 1,
                              "enum": [0, 1]
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            }
                          }
                        },
                        "call_overflow": {
                          "type": "object",
                          "properties": {
                            "call_overflow_type": {
                              "type": "integer",
                              "description": "`1` - Can forward to internal extensions and to external contacts \n`2` - Can forward only to internal extensions \n`3` - Can forward only to internal extensions that require inbound Automatic Call Recording \n`4` - Can forward to internal extensions, external contacts, and external numbers",
                              "example": 1,
                              "enum": [1, 2, 3, 4]
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to forward their calls to other numbers.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator can prohibit users from modifying the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            }
                          }
                        },
                        "call_transferring": {
                          "type": "object",
                          "properties": {
                            "call_transferring_type": {
                              "type": "integer",
                              "description": "1-No restriction \n2-Medium restriction (external numbers and external contacts not allowed) \n3-High restriction (external numbers, unrecorded external contacts, and internal extensions without inbound automatic recording not allowed) \n4-Low restriction (external numbers not allowed)",
                              "example": 1,
                              "enum": [1, 2, 3, 4]
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to warm or blind transfer their calls. This does not apply to warm transfer on IP Phones except for Yealink.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            }
                          }
                        },
                        "audio_intercom": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            }
                          },
                          "description": "Whether to allow hands-free peer-to-peer conversations. When you receive an intercom call, the phone beeps to notify the user of the incoming intercom call, and the user's phone automatically answers the intercom call."
                        },
                        "block_calls_without_caller_id": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                              "example": true
                            }
                          },
                          "description": "Whether to calls without caller ID will be blocked."
                        },
                        "block_external_calls": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "site",
                              "enum": ["invalid", "account", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset and display when using old or new policy framework.",
                              "example": true
                            },
                            "block_business_hours": {
                              "type": "boolean",
                              "example": true
                            },
                            "block_closed_hours": {
                              "type": "boolean",
                              "example": true
                            },
                            "block_holiday_hours": {
                              "type": "boolean",
                              "example": true
                            },
                            "block_call_action": {
                              "type": "integer",
                              "description": "The action when a call is blocked. `9` - Disconnect, `0`- Forward to voicemail or videomail.",
                              "example": 0,
                              "enum": [0, 9]
                            },
                            "block_call_change_type": {
                              "type": "integer",
                              "description": "This setting applies only in the old policy framework. It applies changes to new extensions or all extensions. `1` - All extension, `0` - New extensions.",
                              "example": 0,
                              "enum": [0, 1]
                            },
                            "e2e_encryption": {
                              "type": "object",
                              "properties": {
                                "enable": {
                                  "type": "boolean",
                                  "description": "Whether to allow users to switch their calls to `End-to-End Encryption`. If users have `Automatic Call Recording` turned on, they cannot use `End-to-End Encryption`.",
                                  "example": true
                                },
                                "locked": {
                                  "type": "boolean",
                                  "description": "Whether the senior administrator allows users to modify the current settings.",
                                  "example": true
                                },
                                "locked_by": {
                                  "type": "string",
                                  "description": "Which level of administrator prohibits modifying the current settings.",
                                  "example": "site",
                                  "enum": ["invalid", "account", "site"]
                                },
                                "modified": {
                                  "type": "boolean",
                                  "description": "Whether the current settings have been modified. If modified, they can be reset and display when using the new policy framework.",
                                  "example": true
                                }
                              }
                            }
                          },
                          "description": "Set rules for blocking external calls during business, closed, and holiday hours. This feature is only available for user, Zoom Room and common areas."
                        },
                        "force_off_net": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "By enabling Force Off-Net, calls from users or extensions between sites route through the PSTN network. Users within this site can only be part of advanced functionality (eg. Auto Receptionists, Call Queues) for this site. Users require a paid Zoom license and BYOC-P phone numbers to call between sites.",
                              "example": true
                            },
                            "allow_extension_only_users_call_users_outside_site": {
                              "type": "boolean",
                              "description": "This setting allows extension only users to call to users outside the site.",
                              "example": true
                            }
                          },
                          "description": "It requires the account to enable the `Force Calls out to the PSTN network` feature. "
                        }
                      },
                      "description": "The [site policy setting](https://support.zoom.us/hc/en-us/articles/360033511872-Changing-Zoom-Phone-policy-settings#h_af4d1935-9cb1-44d2-9a10-9bfba10d58a7)."
                    },
                    "sip_zone": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "The SIP Zone ID.",
                          "example": "2J9UXzGuTaqCdZ8sw_0jBw"
                        },
                        "name": {
                          "type": "string",
                          "description": "The SIP Zone name.",
                          "example": "sip-zone01"
                        }
                      },
                      "description": "When you select a SIP zone nearest to your site, it might help reduce latency and improve call quality."
                    },
                    "caller_id_name": {
                      "type": "string",
                      "description": "When you place an outbound call with a number as the caller ID, the caller ID name and the number display to the called party. The caller ID name can be up to 15 characters.",
                      "example": "CallerIdName"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n The site does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:read:admin", "phone:read:site:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:site:admin"]
        }
      },
      "delete": {
        "tags": ["Sites"],
        "summary": "Delete a phone site",
        "description": " Use this API to delete a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672) in a Zoom account. To delete a site, in the query parameter, you must provide the site ID of another site where the assets of current site (users, numbers and phones) can be transferred to.  You cannot use this API to delete the main site.\n\n**Prerequisites:** \n\n* Account must have a Pro or a higher plan with Zoom Phone license. \n* [Multiple sites](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) must be enabled.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:site:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deletePhoneSite",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The unique identifier of the site.",
            "required": true,
            "schema": { "type": "string", "example": "SQv52YtkRLC2dwrDdYtGsA" }
          },
          {
            "name": "transfer_site_id",
            "in": "query",
            "description": "The site ID of another site where the assets of the current site (users, numbers and phones) can be transferred.",
            "required": true,
            "schema": { "type": "string", "example": "8f71O6rWT8KFUGQmJIFAdQ" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nSite deleted."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nUnable to transfer to the same site.<br>\nMain company number can not change {phoneNumber}.<br>\nSite does not exist.\n\n"
          },
          "409": {
            "description": "**HTTP Status Code:** `409` <br>\n Conflict\n\n**Error Code:** `409` <br>\nConflict target extension number, try later.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:write:admin", "phone:delete:site:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:site:admin"]
        }
      },
      "patch": {
        "tags": ["Sites"],
        "summary": "Update phone site details",
        "description": "Updates information about a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672). It allows you to organize Zoom Phone users in your organization. \n\n\n**Prerequisites:** \n* Account must have a Pro or a higher plan with Zoom Phone license.\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:site:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateSiteDetails",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The unique identifier of the site.",
            "required": true,
            "schema": { "type": "string", "example": "NjHmTu16Qfe8yOiNJuekXA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "The name of the site.",
                    "example": "The SJ site"
                  },
                  "site_code": {
                    "type": "integer",
                    "description": "The [site code](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_79ca9c8f-c97b-4486-aa59-d0d9d31a525b).",
                    "example": 2341
                  },
                  "short_extension": {
                    "type": "object",
                    "properties": {
                      "length": {
                        "type": "integer",
                        "description": "This setting specifies the length of short extension numbers for the site.",
                        "example": 3
                      },
                      "ranges": {
                        "type": "array",
                        "description": "The range list. After adding a short extension range, the newly assigned extension numbers start from the `range_from` value.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "range_from": {
                              "type": "string",
                              "description": "The short extension's starting range number, which can be a non-negative value. This value **must** be less than the `range_to` value.",
                              "example": "123"
                            },
                            "range_to": {
                              "type": "string",
                              "description": "The short extension's ending range number, which can be a non-negative value. This value **cannot** be less than or equal to  the `range_from` value.",
                              "example": "456"
                            }
                          }
                        }
                      }
                    },
                    "description": "The short extension of the phone site."
                  },
                  "default_emergency_address": {
                    "required": [
                      "address_line1",
                      "city",
                      "country",
                      "state_code",
                      "zip"
                    ],
                    "type": "object",
                    "properties": {
                      "address_line1": {
                        "type": "string",
                        "description": "The address Line 1 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that contains the house number and street name.",
                        "example": "55 Almaden Blvd"
                      },
                      "address_line2": {
                        "type": "string",
                        "description": "The address Line 2 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that contains the building number, floor number, unit, and others",
                        "example": "Test 3"
                      },
                      "city": {
                        "type": "string",
                        "description": "The city of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                        "example": "San Jose"
                      },
                      "country": {
                        "maxLength": 2,
                        "minLength": 2,
                        "type": "string",
                        "description": "The two-lettered country code (Aplha-2 code in ISO-3166 format) of the site's [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                        "example": "US"
                      },
                      "state_code": {
                        "type": "string",
                        "description": "The state code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                        "example": "CA"
                      },
                      "zip": {
                        "type": "string",
                        "description": "The zip code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                        "example": "95113"
                      }
                    },
                    "description": "The default emergency address. If the address is not an exact match, we use the system generated corrected address."
                  },
                  "sip_zone": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "The SIP zone ID.",
                        "example": "2J9UXzGuTaqCdZ8sw_0jBw"
                      }
                    },
                    "description": "If the account enabled the `Display Custom SIP Zone Options on Web Portal` feature, then selecting a SIP zone nearest to your site helps reduce latency and improve call quality."
                  },
                  "caller_id_name": {
                    "type": "string",
                    "description": "When an outbound call uses a number as the caller ID, the caller ID name and the number display to the called party. The caller ID name can be up to 15 characters. The user can reset the caller ID name by setting it to  &quot;&quot;.",
                    "example": "CallerIdName"
                  },
                  "policy": {
                    "type": "object",
                    "properties": {
                      "select_outbound_caller_id": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow the current extension to change the outbound caller ID when placing calls.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          },
                          "allow_hide_outbound_caller_id": {
                            "type": "boolean",
                            "description": "Whether to allow the current extension to hide outbound caller ID.",
                            "example": true
                          }
                        }
                      },
                      "personal_audio_library": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "This setting allows users to access, share, download, or delete voicemail or videomail.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          },
                          "allow_music_on_hold_customization": {
                            "type": "boolean",
                            "description": "Whether to allow music on hold customization.",
                            "example": true
                          },
                          "allow_voicemail_and_message_greeting_customization": {
                            "type": "boolean",
                            "description": "Whether to allow voicemail and message greeting customization.",
                            "example": true
                          }
                        }
                      },
                      "voicemail": {
                        "type": "object",
                        "properties": {
                          "allow_delete": {
                            "type": "boolean",
                            "description": "This setting allows users to delete their own voicemail. It displays only when using the new policy framework.",
                            "example": true
                          },
                          "allow_download": {
                            "type": "boolean",
                            "description": "This setting allows users to download their own voicemail. It displays only when using the new policy framework.",
                            "example": false
                          },
                          "allow_videomail": {
                            "type": "boolean",
                            "description": "Whether to allow users to access, share, download, or delete the videomail",
                            "example": true
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users to access, receive, or share voicemail and videomail.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        }
                      },
                      "voicemail_transcription": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users to access transcriptions of voicemails from the Zoom client, Zoom web portal, and email notifications.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        }
                      },
                      "voicemail_notification_by_email": {
                        "type": "object",
                        "properties": {
                          "include_voicemail_file": {
                            "type": "boolean",
                            "description": "Whether to include the voicemail file.",
                            "example": true
                          },
                          "include_voicemail_transcription": {
                            "type": "boolean",
                            "description": "Whether to include the voicemail transcription.",
                            "example": false
                          },
                          "forward_voicemail_to_email": {
                            "type": "boolean",
                            "description": "Whether to forward the voicemail to email.",
                            "example": true
                          },
                          "enable": { "type": "boolean", "example": true },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        },
                        "description": "Once enabled, users receive email notifications when there is a new voicemail from users, call queues, auto receptionists, or shared line groups. Users who disabled the shared voicemail notification by email policy will not receive notifications. This setting only displays when the voicemail policy uses the new policy framework."
                      },
                      "shared_voicemail_notification_by_email": {
                        "type": "object",
                        "properties": {
                          "enable": { "type": "boolean", "example": true },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        },
                        "description": "Once enabled, users receive email notification when there is a new shared voicemail or videomail. If the extension that shares the voicemail or videomail has disabled the voicemail or videomail notification by email policy, users will not receive notifications. This setting only displays when the voicemail policy uses the new policy framework."
                      },
                      "international_calling": {
                        "type": "object",
                        "properties": {
                          "enable": { "type": "boolean", "example": true },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        },
                        "description": "Whether to allow extensions to place international calls outside of the calling plan."
                      },
                      "zoom_phone_on_mobile": {
                        "type": "object",
                        "properties": {
                          "allow_calling_sms_mms": {
                            "type": "boolean",
                            "description": "Whether to allow calling and SMS/MMS functions on mobile.",
                            "example": true
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users to use Zoom Phone on mobile clients (iOS, iPad OS and Android).",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        }
                      },
                      "sms": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users, call queues, and auto receptionists to send and receive messages. You need to assign a valid calling plan and phone number to each user for them to send and receive messages.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          },
                          "international_sms": {
                            "type": "boolean",
                            "description": "Whether the user can send and receive international messages.",
                            "example": true
                          },
                          "international_sms_countries": {
                            "type": "array",
                            "description": "The country which users can send and receive international messages. The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                            "items": { "type": "string", "example": "US" }
                          }
                        }
                      },
                      "elevate_to_meeting": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users to elevate their phone calls to a meeting.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        }
                      },
                      "hand_off_to_room": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users to send a call to a Zoom Room.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        }
                      },
                      "mobile_switch_to_carrier": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow the user to switch from a Zoom Phone to their native carrier.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        }
                      },
                      "delegation": {
                        "type": "object",
                        "properties": {
                          "enable": { "type": "boolean", "example": true },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        },
                        "description": "Whether the user can use [call delegation](https://support.zoom.us/hc/en-us/articles/360032881731-Setting-up-call-delegation-shared-lines-appearance-)."
                      },
                      "ad_hoc_call_recording": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether the current extension can record and save calls to the cloud.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          },
                          "recording_start_prompt": {
                            "type": "boolean",
                            "description": "Whether a prompt plays to call participants when the recording has started.",
                            "example": false
                          },
                          "recording_transcription": {
                            "type": "boolean",
                            "description": "Whether call recording transcription is enabled.",
                            "example": true
                          },
                          "play_recording_beep_tone": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean",
                                "description": "Whether to play a side tone beep for recorded users while recording. It displays only when ad hoc call recording policy uses the new framework.",
                                "example": true
                              },
                              "play_beep_volume": {
                                "type": "integer",
                                "description": "The volume of the side tone beep. It displays only when `enable` is set to `true`.",
                                "example": 60,
                                "enum": [0, 20, 40, 60, 80, 100]
                              },
                              "play_beep_time_interval": {
                                "type": "integer",
                                "description": "The beep time interval in seconds. It displays only when `enable` is true.",
                                "example": 15,
                                "enum": [5, 10, 15, 20, 25, 30, 60, 120]
                              },
                              "play_beep_member": {
                                "type": "string",
                                "description": "The beep sides. It displays only when `enable` is true.",
                                "example": "allMember",
                                "enum": ["allMember", "recordingSide"]
                              }
                            }
                          }
                        },
                        "description": "A list of ad hoc call recording settings."
                      },
                      "auto_call_recording": {
                        "type": "object",
                        "properties": {
                          "allow_stop_resume_recording": {
                            "type": "boolean",
                            "description": "Whether the stop and resume of automatic call recording is enabled.",
                            "example": true
                          },
                          "disconnect_on_recording_failure": {
                            "type": "boolean",
                            "description": "Whether a call disconnects when there is an issue with the automatic call recording and the call cannot reconnect after five seconds. This does **not** include emergency calls.",
                            "example": true
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Whether automatic call recording is enabled.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          },
                          "recording_calls": {
                            "type": "string",
                            "description": "The type of calls automatically recorded: \n* `inbound` \n* `outbound` \n* `both`",
                            "example": "inbound",
                            "enum": ["inbound", "outbound", "both"]
                          },
                          "recording_explicit_consent": {
                            "type": "boolean",
                            "description": "Whether the `Press 1 to provide recording consent` is enabled.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` to operate the inbound and outbound prompt separately.\n\n<b>Note:</b> \n* if customers who opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent` and `inbound_audio_notification.recording_explicit_consent` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_explicit_consent` will be also updated.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent. when the field is updated, the `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` will be also updated.",
                            "example": true,
                            "deprecated": true
                          },
                          "recording_start_prompt": {
                            "type": "boolean",
                            "description": "Whether a prompt plays to call participants when the recording has started.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` to operate the inbound and outbound prompt separately.\n\n<b>Note:</b> \n* if customers who opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt` and `inbound_audio_notification.recording_start_prompt` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt` will be also updated.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent. when the field is updated, the `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` will be also updated.",
                            "example": true,
                            "deprecated": true
                          },
                          "recording_transcription": {
                            "type": "boolean",
                            "description": "Whether call recording transcription is enabled.",
                            "example": true
                          },
                          "play_recording_beep_tone": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean",
                                "description": "Whether to play a side tone beep for recorded users while recording. It only displays when auto call recording policy uses the new framework.",
                                "example": true
                              },
                              "play_beep_volume": {
                                "type": "integer",
                                "description": "The volume of the side tone beep. It displays only when `enable` is set to `true`.",
                                "example": 60,
                                "enum": [0, 20, 40, 60, 80, 100]
                              },
                              "play_beep_time_interval": {
                                "type": "integer",
                                "description": "The beep time interval in seconds. It displays only when `enable` is true.",
                                "example": 15,
                                "enum": [5, 10, 15, 20, 25, 30, 60, 120]
                              },
                              "play_beep_member": {
                                "type": "string",
                                "description": "The beep sides. It displays only when `enable` is true.",
                                "example": "allMember",
                                "enum": ["allMember", "recordingSide"]
                              }
                            }
                          },
                          "inbound_audio_notification": {
                            "type": "object",
                            "properties": {
                              "recording_start_prompt": {
                                "type": "boolean",
                                "description": "Whether a prompt plays to call participants when the recording has started for inbound call is enabled.\n\n<b>Note:</b> \n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                                "example": true
                              },
                              "recording_explicit_consent": {
                                "type": "boolean",
                                "description": "Whether the **Press 1** option that provides recording consent for inbound call is enabled.\n\n<b>Note:</b> \n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` with the same value.",
                                "example": true
                              }
                            }
                          },
                          "outbound_audio_notification": {
                            "type": "object",
                            "properties": {
                              "recording_start_prompt": {
                                "type": "boolean",
                                "description": "Whether a prompt plays to call participants when the recording has started for outbound call is enabled.\n\n<b>Note:</b> \n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                                "example": true
                              },
                              "recording_explicit_consent": {
                                "type": "boolean",
                                "description": "Whether the **Press 1** option that provides recording consent for outbound call is enabled.\n\n<b>Note:</b> \n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` with the same value.",
                                "example": true
                              }
                            }
                          }
                        },
                        "description": "A list of the site's automatic call recording settings."
                      },
                      "call_handling_forwarding_to_other_users": {
                        "type": "object",
                        "properties": {
                          "enable": { "type": "boolean", "example": true },
                          "call_forwarding_type": {
                            "type": "integer",
                            "description": "`1` - Low restriction (external numbers not allowed)\n`2` - Medium restriction (external numbers and external contacts not allowed)\n `3` - High restriction (external numbers, external contacts and internal extensions without inbound automatic call recording not allowed)\n`4` - No restriction",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        },
                        "description": "Whether to allow users to forward their calls to other numbers."
                      },
                      "check_voicemails_over_phone": {
                        "type": "object",
                        "properties": {
                          "enable": { "type": "boolean", "example": true },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        },
                        "description": "Whether to allow extension owners or members of a shared line group to check voicemails for extension numbers over the phone using the PIN code."
                      },
                      "call_queue_pickup_code": {
                        "type": "object",
                        "properties": {
                          "enable": { "type": "boolean", "example": true },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings when the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        },
                        "description": "After enabling the feature, a unique pickup code generates for each queue. It can be customized in the Call Queue profile. Queue calls can be answered with the pickup code by the users under the same site."
                      },
                      "call_queue_opt_out_reason": {
                        "type": "object",
                        "properties": {
                          "enable": { "type": "boolean", "example": true },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          },
                          "call_queue_opt_out_reasons_list": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "code": {
                                  "type": "string",
                                  "example": "Break"
                                },
                                "system": {
                                  "type": "boolean",
                                  "description": "The reason for the system default. It cannot be edited.",
                                  "example": true
                                },
                                "enable": { "type": "boolean", "example": true }
                              }
                            }
                          }
                        },
                        "description": "The opt-out reasons for call queues. When enabled, call queue members need to select an opt-out reason when they turn off the `receive queue call` feature."
                      },
                      "show_user_last_transferred_call": {
                        "type": "boolean",
                        "description": "Whether to show the user who last transferred the call. Viewing preferences display on the incoming call panel. Selections made here will not affect the information shown in call logs.",
                        "example": true
                      },
                      "auto_delete_data_after_retention_duration": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "This setting allows Zoom to automatically delete data after the retention duration has lapsed.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          },
                          "items": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": {
                                  "type": "string",
                                  "description": "The data types.",
                                  "example": "callLog",
                                  "enum": [
                                    "callLog",
                                    "onDemandRecording",
                                    "automaticRecording",
                                    "voicemail",
                                    "videomail",
                                    "sms"
                                  ]
                                },
                                "duration": {
                                  "type": "integer",
                                  "description": "The retention duration where -1 means unlimited. For units of time, see the `time_unit` below. For `year`, the duration:-1, 1-10; for `day`, the duration:-1, 1-60; for `month`, the duration:-1, 1-18.",
                                  "example": -1
                                },
                                "time_unit": {
                                  "type": "string",
                                  "description": "The unit of time.",
                                  "example": "year",
                                  "enum": ["year", "month", "day"]
                                }
                              }
                            }
                          },
                          "delete_type": {
                            "type": "integer",
                            "description": " The delete policy.   \n * 1 - soft delete   \n * 2 - permanent delete",
                            "example": 1,
                            "enum": [1, 2]
                          }
                        }
                      },
                      "call_park": {
                        "type": "object",
                        "properties": {
                          "call_not_picked_up_action": {
                            "type": "integer",
                            "description": "The action when a parked call is not picked up. \n `100` - Ring back to parker \n`0` - Forward to voicemail of the parker \n`9` - Disconnect \n `50` - Forward to another extension",
                            "example": 50
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow calls on hold to be resumed from another location with a retrieval code.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          },
                          "expiration_period": {
                            "type": "integer",
                            "description": "A time limit for parked calls in minutes. After the expiration period ends, the retrieval code is no longer valid and a new code generates.",
                            "example": 3,
                            "enum": [
                              1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30, 35,
                              40, 45, 50, 55, 60
                            ]
                          },
                          "forward_to_extension_id": {
                            "type": "string",
                            "description": "The extension's forwarding information when `call_not_picked_up_action` uses the `50` - Forward to another extension.",
                            "example": "TO586CYlQFC_WCUvPRXytA"
                          },
                          "sequence": {
                            "type": "integer",
                            "description": " This field chooses how parked calls are assigned to a BLF (Busy Lamp Field) key. Sequential assignment parks the call at the next available BLF key. Random assignment parks the call at a randomly selected BLF key. \n`0` - Random \n`1` - Sequential",
                            "example": 1,
                            "enum": [0, 1]
                          }
                        }
                      },
                      "call_overflow": {
                        "type": "object",
                        "properties": {
                          "call_overflow_type": {
                            "type": "integer",
                            "description": "`1` - Can forward to internal extensions and to external contacts \n`2` - Can forward only to internal extensions\n`3` - Can forward only to internal extensions that require inbound Automatic Call Recording \n`4` - Can forward to internal extensions, external contacts, and external numbers",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users to forward their calls to other numbers.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings when the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        }
                      },
                      "call_transferring": {
                        "type": "object",
                        "properties": {
                          "call_transferring_type": {
                            "type": "integer",
                            "description": "1-No restriction \n2-Medium restriction (external numbers and external contacts not allowed) \n3-High restriction (external numbers, unrecorded external contacts, and internal extensions without inbound automatic recording not allowed) \n4-Low restriction (external numbers not allowed)",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users to warm or blind transfer their calls. This does not apply to warm transfer on IP Phones except for Yealink.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings when the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        }
                      },
                      "audio_intercom": {
                        "type": "object",
                        "properties": {
                          "enable": { "type": "boolean", "example": true },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings when the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        },
                        "description": "Whether to allow hands-free peer-to-peer conversations. When an intercom call is received, the phone beeps to notify the user of the incoming intercom call, and the user's phone automatically answers the intercom call."
                      },
                      "block_calls_without_caller_id": {
                        "type": "object",
                        "properties": {
                          "enable": { "type": "boolean", "example": true },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings if the current settings use the new policy framework.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          }
                        },
                        "description": "Whether to calls without a caller ID are blocked."
                      },
                      "block_external_calls": {
                        "type": "object",
                        "properties": {
                          "enable": { "type": "boolean", "example": true },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings use the phone account's settings, which are compatible with the old or new policy frameworks.",
                            "example": true
                          },
                          "locked": {
                            "type": "boolean",
                            "description": "Whether the senior administrator allows users to modify the current settings.",
                            "example": true
                          },
                          "block_business_hours": {
                            "type": "boolean",
                            "example": true
                          },
                          "block_closed_hours": {
                            "type": "boolean",
                            "example": true
                          },
                          "block_holiday_hours": {
                            "type": "boolean",
                            "example": true
                          },
                          "block_call_action": {
                            "type": "integer",
                            "description": "The action when a call is blocked. 9-Disconnect, 0-Forward to voicemail/videomail.",
                            "example": 0,
                            "enum": [0, 9]
                          },
                          "block_call_change_type": {
                            "type": "integer",
                            "description": "This setting applies only in the old policy framework. It applies changes to new extensions or all extensions. `1` - All extension, `0` - New extensions.",
                            "example": 0,
                            "enum": [0, 1]
                          },
                          "e2e_encryption": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean",
                                "description": "Whether to allow users to switch their calls to `End-to-End Encryption`. If users have `Automatic Call Recording` turned on, they cannot use `End-to-End Encryption`.",
                                "example": true
                              },
                              "locked": {
                                "type": "boolean",
                                "description": "Whether the senior administrator allows users to modify the current settings.",
                                "example": true
                              },
                              "locked_by": {
                                "type": "string",
                                "description": "Which level of administrator prohibits modifying the current settings.",
                                "example": "site",
                                "enum": ["invalid", "account", "site"]
                              },
                              "modified": {
                                "type": "boolean",
                                "description": "Whether the current settings have been modified. If modified, they can be reset. The settings display in the new policy framework.",
                                "example": true
                              }
                            }
                          }
                        },
                        "description": "The rules for blocking external calls during business, closed, and holiday hours. This feature is only available for User, Zoom Room, and Common Area."
                      },
                      "force_off_net": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "By enabling Force Off-Net, calls from users or extensions between sites route through the PSTN network. Users in this site can only be allowed to be part of advanced functionality (eg. Auto Receptionists, Call Queues) that is configured in this site. Users require a paid Zoom license and BYOC-P phone numbers to call between sites.",
                            "example": true
                          },
                          "allow_extension_only_users_call_users_outside_site": {
                            "type": "boolean",
                            "description": "This setting allows extension only users to call to users outside the site.",
                            "example": true
                          }
                        },
                        "description": "It requires the account to enable the `Force Calls out to the PSTN network` feature. "
                      }
                    },
                    "description": " The [site policy setting](https://support.zoom.us/hc/en-us/articles/360033511872-Changing-Zoom-Phone-policy-settings#h_af4d1935-9cb1-44d2-9a10-9bfba10d58a7)."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nSite details updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Validation Failed. Site does not exist.<br>\nAlign the range with the number of digits entered in `length`<br>\n`range_from` value must be smaller than `range_to` value.<br>\nInvalid address: {formattedAddress}.<br>\nChange country is not allowed.<br>\nPersonal emergency address could not be changed to default.<br>\nCannot update emergency address whose status is {status}.<br>\nThis address could not be validated.<br>\nInvalid site code length.<br>\nInvalid short extension number length.<br>\nInvalid site code length.<br>\nEach set of ranges cannot have intersections.<br>\nThe range_from or range_to can not be empty.<br>\nThe range_from or range_to must be digits only. <br>\n**Error Code:** `400` <br>\n Site code is disabled. <br>\n**Error Code:** `13800` <br>\n You do not enable OP flag named 'Enable Caller Based Consent Options', please using same value to update 'inbound_audio_notification.recording_start_prompt' and 'outbound_audio_notification.recording_start_prompt'. <br>\n**Error Code:** `13800` <br>\n You do not enable OP flag named 'Enable Caller Based Consent Options', please using same value to update 'inbound_audio_notification.recording_start_prompt_audio_id' and 'outbound_audio_notification.recording_start_prompt_audio_id'. <br>\n**Error Code:** `13800` <br>\n You do not enable OP flag named 'Enable Caller Based Consent Options', please using same value to update 'inbound_audio_notification.recording_explicit_consent' and 'outbound_audio_notification.recording_explicit_consent'. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:write:admin", "phone:update:site:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:site:admin"]
        }
      }
    },
    "/phone/sites/{siteId}/outbound_caller_id/customized_numbers": {
      "get": {
        "tags": ["Sites"],
        "summary": "List customized outbound caller ID phone numbers",
        "description": "Use this API to retrieve phone numbers that can be used as the `site-level` customized outbound caller ID. \n* Multiple sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15). \n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license.\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_site_customized_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "listSiteCustomizeOutboundCallerNumbers",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The site ID.",
            "required": true,
            "schema": { "type": "string", "example": "kLD4F3WBT-O9LYE31C0tRQ" }
          },
          {
            "name": "selected",
            "in": "query",
            "description": "Status of the phone numbers.  \n `true`- Numbers already added to the custom list.   \n `false`- Numbers not yet added to the custom list",
            "required": false,
            "schema": { "type": "boolean", "example": true }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "For filtering phone numbers that belong to the site.",
            "required": false,
            "schema": { "type": "string", "example": "SQv52YtkRLC2dwrDdYtGsA" }
          },
          {
            "name": "extension_type",
            "in": "query",
            "description": "The type of the extension to which the phone number belongs.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "callQueue",
              "enum": ["autoReceptionist", "callQueue", "sharedLineGroup"]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "A search keyword for phone or extension numbers.",
            "required": false,
            "schema": { "type": "string", "example": "408" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nCustomized numbers for outbound caller ID listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customize_numbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "customize_id": {
                            "type": "string",
                            "description": "The customization ID.",
                            "example": "8_RkKw9OQ42oYsXqJJjs4A"
                          },
                          "phone_number_id": {
                            "type": "string",
                            "description": "ID of the phone number.",
                            "example": "55JUZPwERHuGttd_j4qBsQ"
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number in E164 format.",
                            "example": "+12055437350"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "Name of the phone number.",
                            "example": "test abc"
                          },
                          "incoming": {
                            "type": "boolean",
                            "description": "Whether the incoming policy is enabled for the phone number.",
                            "example": true
                          },
                          "outgoing": {
                            "type": "boolean",
                            "description": "Whether the outgoing policy is enabled for the phone number.",
                            "example": true
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "The extension ID.",
                            "example": "HaSokHMCSeK8taMdv2vnXQ"
                          },
                          "extension_type": {
                            "type": "string",
                            "description": "The extension type.",
                            "example": "callQueue"
                          },
                          "extension_number": {
                            "type": "string",
                            "description": "The extension number.",
                            "example": "10001"
                          },
                          "extension_name": {
                            "type": "string",
                            "description": "The extension name.",
                            "example": "SJ CQ"
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "Name of the site.",
                                "example": "testSite"
                              }
                            }
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call for each page.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_site_customized_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_site_customized_number:admin"]
        }
      },
      "post": {
        "tags": ["Sites"],
        "summary": "Add customized outbound caller ID phone numbers",
        "description": "Use this API to add the `site-level` customized outbound caller ID phone numbers. \n* Multiple sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15). \n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:site_customized_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addSiteOutboundCallerNumbers",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The site ID.",
            "required": true,
            "schema": { "type": "string", "example": "kLD4F3WBT-O9LYE31C0tRQ" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone_number_ids": {
                    "maximum": 30,
                    "type": "array",
                    "description": "The phone number IDs.",
                    "items": {
                      "type": "string",
                      "example": "55JUZPwERHuGttd_j4qBsQ"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \nCustomized caller ID numbers added successfully.  ",
            "content": { "application/json": { "schema": {} } }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nValidation Failed. Site does not exist.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:site_customized_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:site_customized_number:admin"]
        }
      },
      "delete": {
        "tags": ["Sites"],
        "summary": "Remove customized outbound caller ID phone numbers",
        "description": "Use this API to remove the `site-level` customized outbound caller ID phone numbers. \n* Multiple sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15). \n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license.\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:site_customized_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteSiteOutboundCallerNumbers",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The site ID.",
            "required": true,
            "schema": { "type": "string", "example": "kLD4F3WBT-O9LYE31C0tRQ" }
          },
          {
            "name": "customize_ids",
            "in": "query",
            "description": "The customization IDs.",
            "required": false,
            "schema": {
              "maxItems": 30,
              "type": "array",
              "items": { "type": "string", "example": "8_RkKw9OQ42oYsXqJJjs4A" }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **Created**  \n \nCustomized numbers have been deleted successfully.  "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nValidation Failed. Site does not exist.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:site_customized_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:site_customized_number:admin"]
        }
      }
    },
    "/phone/sites/{siteId}/settings/{settingType}": {
      "get": {
        "tags": ["Sites"],
        "summary": "Get a phone site setting",
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to get site setting about a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672) according to the setting type.\n\n**Prerequisites:** \n\n* Account must have a Pro or a higher plan with Zoom Phone license.\n* Multiple sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).\n\n\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:site_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getSiteSettingForType",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The site ID.",
            "required": true,
            "schema": { "type": "string", "example": "kLD4F3WBT-O9LYE31C0tRQ" }
          },
          {
            "name": "settingType",
            "in": "path",
            "description": "The site setting type: \n* `local_based_routing` \n* `business_hours` \n* `closed_hours` \n* `holiday_hours` \n* `security` \n* `outbound_caller_id` \n* `audio_prompt` \n* `desk_phone` \n* `dial_by_name` \n* `billing_account`",
            "required": true,
            "schema": {
              "type": "string",
              "example": "business_hours",
              "enum": [
                "local_based_routing",
                "business_hours",
                "closed_hours",
                "holiday_hours",
                "security",
                "outbound_caller_id",
                "audio_prompt",
                "desk_phone",
                "dial_by_name",
                "billing_account"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nSite setting information retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "location_based_routing": {
                      "type": "object",
                      "properties": {
                        "enable": {
                          "type": "boolean",
                          "description": "When the policy is enabled, Zoom Phone calls will be subject to the policy options defined.",
                          "example": false
                        },
                        "place_receive_pstn_calls": {
                          "type": "boolean",
                          "description": "Place and receive PSTN (Public Switched Telephone Network) calls only when inside the locations.",
                          "example": false
                        },
                        "enable_media_off_load_pstn_calls": {
                          "type": "boolean",
                          "description": "Enable media offload for extensions to PSTN (Public Switched Telephone Network) calls.",
                          "example": false
                        }
                      },
                      "description": "Location-based routing setting of the site."
                    },
                    "business_hours": {
                      "type": "object",
                      "properties": {
                        "custom_hour_type": {
                          "type": "integer",
                          "description": "Business Hour Type `1`- 24 hours a day, 7 days a week; `2`- Custom hours.",
                          "example": 2,
                          "enum": [1, 2]
                        },
                        "custom_hours": {
                          "type": "array",
                          "description": "The settings for custom business hours.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "from": {
                                "type": "string",
                                "description": "The start time for custom hours in `HH:mm` format.",
                                "example": "09:00"
                              },
                              "to": {
                                "type": "string",
                                "description": "The end time custom hours in `HH:mm` format.",
                                "example": "18:00"
                              },
                              "type": {
                                "type": "integer",
                                "description": "The type of custom hours: \n* `0` &mdash; Disabled. \n* `1` &mdash; 24 hours. \n* `2` &mdash; Customized hours.",
                                "example": 0,
                                "enum": [0, 1, 2]
                              },
                              "weekday": {
                                "type": "integer",
                                "description": "The day of the week: \n* `1` &mdash; Sunday \n* `2` &mdash; Monday \n* `3` &mdash; Tuesday \n* `4` &mdash; Wednesday \n* `5` &mdash; Thursday \n* `6` &mdash; Friday \n* `7` &mdash; Saturday",
                                "example": 1,
                                "enum": [1, 2, 3, 4, 5, 6, 7]
                              }
                            }
                          }
                        },
                        "overflow": {
                          "type": "object",
                          "properties": {
                            "allow_caller_to_reach_operator": {
                              "type": "boolean",
                              "description": "Whether to allow callers to reach an operator.",
                              "example": true
                            },
                            "operator": {
                              "type": "object",
                              "properties": {
                                "extension_id": {
                                  "type": "string",
                                  "description": "The extension ID.",
                                  "example": "FGAMaMWESMCNF0jmEU1emw"
                                },
                                "extension_number": {
                                  "type": "integer",
                                  "description": "The extension number.",
                                  "format": "int64",
                                  "example": 1000001018
                                },
                                "display_name": {
                                  "type": "string",
                                  "description": "The display name of extension.",
                                  "example": "Test_callQueue"
                                },
                                "extension_type": {
                                  "type": "string",
                                  "description": "The extension type. \n* `user` \n* `callQueue` \n* `autoReceptionist` \n* `commonArea` \n* `zoomRoom` \n* `ciscoRoom/PolycomRoom` \n* `sharedLineGroup`",
                                  "example": "callQueue",
                                  "enum": [
                                    "user",
                                    "callQueue",
                                    "autoReceptionist",
                                    "commonArea",
                                    "zoomRoom",
                                    "ciscoRoom/PolycomRoom",
                                    "sharedLineGroup"
                                  ]
                                }
                              },
                              "description": "This field enables the operator to allow callers to reach."
                            },
                            "allow_caller_to_check_voicemail": {
                              "type": "boolean",
                              "description": "Whether to allow callers to check voicemail.",
                              "example": false
                            }
                          },
                          "description": "Whether to set the default overflow for business hours for users, call queues, and shared line groups."
                        }
                      },
                      "description": "Set the default business hours for all users, Zoom Rooms and Common Areas for the site."
                    },
                    "closed_hours": {
                      "type": "object",
                      "properties": {
                        "overflow": {
                          "type": "object",
                          "properties": {
                            "allow_caller_to_reach_operator": {
                              "type": "boolean",
                              "description": "Whether to allow callers to reach an operator.",
                              "example": true
                            },
                            "operator": {
                              "type": "object",
                              "properties": {
                                "extension_id": {
                                  "type": "string",
                                  "description": "The extension ID.",
                                  "example": "FGAMaMWESMCNF0jmEU1emw"
                                },
                                "extension_number": {
                                  "type": "integer",
                                  "description": "The extension number.",
                                  "format": "int64",
                                  "example": 1000001018
                                },
                                "display_name": {
                                  "type": "string",
                                  "description": "The display name of extension.",
                                  "example": "Test_callQueue"
                                },
                                "extension_type": {
                                  "type": "string",
                                  "description": "The extension type. \n* `user` \n* `callQueue` \n* `autoReceptionist` \n* `commonArea` \n* `zoomRoom` \n* `ciscoRoom/PolycomRoom` \n* `sharedLineGroup`",
                                  "example": "callQueue",
                                  "enum": [
                                    "user",
                                    "callQueue",
                                    "autoReceptionist",
                                    "commonArea",
                                    "zoomRoom",
                                    "ciscoRoom/PolycomRoom",
                                    "sharedLineGroup"
                                  ]
                                }
                              },
                              "description": "This field enables the operator to allow callers to reach."
                            },
                            "allow_caller_to_check_voicemail": {
                              "type": "boolean",
                              "description": "Whether to allow callers to check voicemail.",
                              "example": false
                            }
                          },
                          "description": "Whether to set the default overflow for business hours for users, call queues, and shared line groups."
                        }
                      },
                      "description": "Set the default closed hours for all users, Zoom Rooms, Common Areas, Auto Receptionists, Call Queues and Shared Line Groups for the site."
                    },
                    "holiday_hours": {
                      "type": "object",
                      "properties": {
                        "holidays": {
                          "type": "array",
                          "description": "The settings for holiday hours.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "holiday_id": {
                                "type": "string",
                                "description": "The holiday ID.",
                                "example": "i3gP6xFUTHqSFrIE6nHs7Q"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the holiday.",
                                "example": "Holiday 1"
                              },
                              "from": {
                                "type": "string",
                                "description": "The holiday start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.",
                                "format": "date-time",
                                "example": "2022-03-08T16:00:00Z"
                              },
                              "to": {
                                "type": "string",
                                "description": "The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.",
                                "format": "date-time",
                                "example": "2022-03-09T16:00:00Z"
                              }
                            }
                          }
                        },
                        "overflow": {
                          "type": "object",
                          "properties": {
                            "allow_caller_to_reach_operator": {
                              "type": "boolean",
                              "description": "Whether to allow callers to reach an operator.",
                              "example": true
                            },
                            "operator": {
                              "type": "object",
                              "properties": {
                                "extension_id": {
                                  "type": "string",
                                  "description": "The extension ID.",
                                  "example": "FGAMaMWESMCNF0jmEU1emw"
                                },
                                "extension_number": {
                                  "type": "integer",
                                  "description": "The extension number.",
                                  "format": "int64",
                                  "example": 1000001018
                                },
                                "display_name": {
                                  "type": "string",
                                  "description": "The display name of extension.",
                                  "example": "Test_callQueue"
                                },
                                "extension_type": {
                                  "type": "string",
                                  "description": "The extension type. \n* `user` \n* `callQueue` \n* `autoReceptionist` \n* `commonArea` \n* `zoomRoom` \n* `ciscoRoom/PolycomRoom` \n* `sharedLineGroup`",
                                  "example": "callQueue",
                                  "enum": [
                                    "user",
                                    "callQueue",
                                    "autoReceptionist",
                                    "commonArea",
                                    "zoomRoom",
                                    "ciscoRoom/PolycomRoom",
                                    "sharedLineGroup"
                                  ]
                                }
                              },
                              "description": "This field enables the operator to allow callers to reach."
                            },
                            "allow_caller_to_check_voicemail": {
                              "type": "boolean",
                              "description": "Whether to allow callers to check voicemail.",
                              "example": false
                            }
                          },
                          "description": "Whether to set the default overflow for business hours for users, call queues, and shared line groups."
                        }
                      },
                      "description": "Set the default holiday hours for all users, Zoom Rooms, Common Areas, Auto Receptionists, Call Queues and Shared Line Groups for the site."
                    },
                    "security": {
                      "type": "object",
                      "properties": {
                        "device_types": {
                          "type": "array",
                          "description": "The effective device types.",
                          "items": {
                            "type": "string",
                            "example": "Poly trioc60"
                          }
                        }
                      },
                      "description": "Upgrade devices from current site to use the SRTP with AES-256 bit encryption. After adding or removing a device type, devices of the corresponding type will get resynced. For more information, see [Zoom Phone Encryption](https://support.zoom.us/hc/en-us/articles/360042578911#h_36a22ca1-89f1-4614-8d7e-3c6a957b261c)."
                    },
                    "outbound_caller_id": {
                      "type": "object",
                      "properties": {
                        "auto_receptionists_numbers": {
                          "type": "boolean",
                          "description": "When checked, auto receptionists members will use the numbers as the outbound caller ID",
                          "example": false
                        },
                        "call_queue_numbers": {
                          "type": "boolean",
                          "description": "When checked, call queue members will use the numbers as the outbound caller ID.",
                          "example": false
                        },
                        "share_line_group_numbers": {
                          "type": "boolean",
                          "description": "When checked, share line group members will use the numbers as the outbound caller ID.",
                          "example": false
                        },
                        "show_outbound_caller_id_for_internal_call": {
                          "type": "boolean",
                          "description": "When a call is made to an internal extension that uses the numbers associated with Auto Receptionist or Call Queue as the caller ID, the receiver will see an outbound caller ID selected by the caller.",
                          "example": false
                        }
                      },
                      "description": "The outbound caller ID setting."
                    },
                    "audio_prompt": {
                      "type": "object",
                      "properties": {
                        "language": {
                          "type": "string",
                          "description": "Audio prompt language code.  \n  American English: `en-US`  \n \nBritish English: `en-GB`  \n \nEspa&ntilde;ol americano: `es-US`  \n \nFran&ccedil;ais canadien: `fr-CA`  \n \nDansk: `da-DK`  \n \nDeutsch: `de-DE`  \n \nEspa&ntilde;ol: `es-ES`  \n \nFran&ccedil;ais: `fr-FR`  \n \nItaliano: `it-IT`  \n \nNederlands: `nl-NL`  \n \nPortugues portugal: `pt-PT`  \n \nJapanese: `ja-JP`  \n \nKorean: `ko-KO`  \n \nPortugues brasil: `pt-BR`  \n \nChinese: `zh-CN`  \n \nTaiwanese: `zh-TW`  \n ",
                          "example": "en-GB"
                        },
                        "greeting_leave_voicemail_instruction": {
                          "type": "object",
                          "properties": {
                            "business_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            },
                            "closed_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            },
                            "holiday_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            }
                          }
                        },
                        "greeting_menu_leave_or_check_voicemail": {
                          "type": "object",
                          "properties": {
                            "business_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            },
                            "closed_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            },
                            "holiday_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            }
                          }
                        },
                        "greeting_menu_connect_to_operator_or_leave_voicemail": {
                          "type": "object",
                          "properties": {
                            "business_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            },
                            "closed_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            },
                            "holiday_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            }
                          }
                        },
                        "greeting_menu_connect_to_operator_leave_or_check_voicemail": {
                          "type": "object",
                          "properties": {
                            "business_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            },
                            "closed_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            },
                            "holiday_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            }
                          }
                        },
                        "leave_voicemail_introduction": {
                          "type": "object",
                          "properties": {
                            "business_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            },
                            "closed_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            },
                            "holiday_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            }
                          }
                        },
                        "message_greeting": {
                          "type": "object",
                          "properties": {
                            "business_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            },
                            "closed_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            },
                            "holiday_hours": {
                              "type": "object",
                              "properties": {
                                "audio_id": {
                                  "type": "string",
                                  "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                                  "example": "yCT14TwySDGVUypVlKNEyA"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the audio item.",
                                  "example": "hello.mp3"
                                }
                              },
                              "description": "The audio prompt setting for respective hours."
                            }
                          }
                        },
                        "audio_while_connecting": {
                          "type": "object",
                          "properties": {
                            "audio_id": {
                              "type": "string",
                              "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                              "example": "yCT14TwySDGVUypVlKNEyA"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the audio item.",
                              "example": "hello.mp3"
                            }
                          },
                          "description": "The audio prompt setting for respective hours."
                        },
                        "hold_music": {
                          "type": "object",
                          "properties": {
                            "audio_id": {
                              "type": "string",
                              "description": "The audio item ID. If the audio was removed from the user's audio library, it will be marked with a prefix, `removed_vWby3OZaQlS1nAdmEAqgwA` for example. You can still use this audio ID to get the audio information in [Get an audio item](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Audio-Library/operation/GetAudioItem) API.",
                              "example": "yCT14TwySDGVUypVlKNEyA"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the audio item.",
                              "example": "hello.mp3"
                            }
                          },
                          "description": "The audio prompt setting for respective hours."
                        }
                      },
                      "description": "The audio prompt setting."
                    },
                    "desk_phone": {
                      "properties": {
                        "hot_desking_session_timeout": {
                          "required": ["number"],
                          "type": "object",
                          "properties": {
                            "number": {
                              "type": "integer",
                              "example": 5,
                              "enum": [
                                1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
                                15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 30
                              ]
                            },
                            "unit": {
                              "type": "string",
                              "description": "`minutes` - available if the `number` values are: '5, 10, 15, 30'  \n`hours` - not available if the `number` value is '30'",
                              "example": "minutes",
                              "default": "hours",
                              "enum": ["minutes", "hours"]
                            }
                          },
                          "description": "The set duration after which users are signed out of hot desking devices."
                        }
                      },
                      "description": "The desk phone setting."
                    },
                    "dial_by_name": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "boolean",
                          "description": "Whether to allow callers to search for an extension by the first or last name. Currently supports English only.",
                          "example": true
                        },
                        "inherit": {
                          "type": "boolean",
                          "description": "Whether to inherit the dial by name directory maintained at the account level. This directory is read-only to sites.",
                          "example": false
                        },
                        "rule": {
                          "type": "string",
                          "description": "Search extensions by first or last name. Callers must enter at least 2 characters to perform a name search.",
                          "example": "last_name",
                          "enum": ["first_name", "last_name"]
                        }
                      },
                      "description": "The dial by name directory setting."
                    },
                    "billing_account": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Billing account ID.",
                          "example": "3WWAEiEjTj2IQuyDiKMd_A"
                        },
                        "name": {
                          "type": "string",
                          "description": "Billing account name.",
                          "example": "Delhi billing"
                        }
                      },
                      "description": "Billing account setting."
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `400` <br>\nSite does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:site_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:site_setting:admin"]
        }
      },
      "post": {
        "tags": ["Sites"],
        "summary": "Add a site setting",
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to add a site setting to a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672) according to the setting type.\n\n**Prerequisites:** \n* Account must have a Pro or a higher plan with Zoom Phone license.\n* Multiple sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:site_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "addSiteSetting",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The site ID.",
            "required": true,
            "schema": { "type": "string", "example": "kLD4F3WBT-O9LYE31C0tRQ" }
          },
          {
            "name": "settingType",
            "in": "path",
            "description": "The site setting type: \n* `holiday_hours` \n* `security`.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "security",
              "enum": ["holiday_hours", "security"]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "device_type": {
                    "type": "string",
                    "description": "The device type. Enable SRTP AES-256 encryption on the site for the specified device type. Used for `device_security` setting type.",
                    "example": "Poly trioc60"
                  },
                  "holidays": {
                    "type": "array",
                    "description": "The holiday hours settings.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "name": {
                          "type": "string",
                          "description": "The name of the holiday.",
                          "example": "Holiday 1"
                        },
                        "from": {
                          "type": "string",
                          "description": "The holiday start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.",
                          "format": "date-time",
                          "example": "2022-03-08T16:00:00Z"
                        },
                        "to": {
                          "type": "string",
                          "description": "The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.",
                          "format": "date-time",
                          "example": "2022-03-09T16:00:00Z"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code** `201`   \n \nCreated Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "holidays": {
                      "type": "array",
                      "description": "The settings for holiday hours.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "holiday_id": {
                            "type": "string",
                            "description": "The holiday ID.",
                            "example": "i3gP6xFUTHqSFrIE6nHs7Q"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the holiday.",
                            "example": "Holiday 1"
                          },
                          "from": {
                            "type": "string",
                            "description": "The holiday start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.",
                            "format": "date-time",
                            "example": "2022-03-08T16:00:00Z"
                          },
                          "to": {
                            "type": "string",
                            "description": "The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.",
                            "format": "date-time",
                            "example": "2022-03-09T16:00:00Z"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nValidation Failed. Site does not exist.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:site_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:site_setting:admin"]
        }
      },
      "delete": {
        "tags": ["Sites"],
        "summary": "Delete a site setting",
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to delete the site setting of a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672).\n\n**Prerequisites:** \n* Account must have a Pro or a higher plan with Zoom Phone license.\n* Multiple sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:site_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteSiteSetting",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The site ID.",
            "required": true,
            "schema": { "type": "string", "example": "kLD4F3WBT-O9LYE31C0tRQ" }
          },
          {
            "name": "settingType",
            "in": "path",
            "description": "The site setting type: \n* `holiday_hours` \n* `security`.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "security",
              "enum": ["holiday_hours", "security"]
            }
          },
          {
            "name": "device_type",
            "in": "query",
            "description": "The device type. Enable SRTP AES-256 encryption on the site for the specified device type. Used for `security` setting type.",
            "required": false,
            "schema": { "type": "string", "example": "Poly trioc60" }
          },
          {
            "name": "holiday_id",
            "in": "query",
            "description": "The holiday hour setting ID.  Used for `holiday_hours` setting type.",
            "required": false,
            "schema": { "type": "string", "example": "n6wfnyoFSmWwY121cPe66g" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nThe site setting have been deleted successfully.  "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nValidation Failed. Site does not exist.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:site_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:site_setting:admin"]
        }
      },
      "patch": {
        "tags": ["Sites"],
        "summary": "Update the site setting",
        "description": "Sites allow you to organize Zoom Phone users in your organization. Use this API to update the site setting of a specific [site](https://support.zoom.us/hc/en-us/articles/360020809672) according to the setting type.\n\n**Prerequisites:** \n* Account must have a Pro or a higher plan with Zoom Phone license.\n* Multiple sites must be [enabled](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites#h_05c88e35-1593-491f-b1a8-b7139a75dc15).\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:site_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateSiteSetting",
        "parameters": [
          {
            "name": "siteId",
            "in": "path",
            "description": "The site ID.",
            "required": true,
            "schema": { "type": "string", "example": "kLD4F3WBT-O9LYE31C0tRQ" }
          },
          {
            "name": "settingType",
            "in": "path",
            "description": "The site setting type: \n* `local_based_routing` \n* `business_hours` \n* `closed_hours` \n* `holiday_hours`\n* `outbound_caller_id` \n* `audio_prompt` \n* `desk_phone` \n* `dial_by_name` \n* `billing_account`",
            "required": true,
            "schema": {
              "type": "string",
              "example": "business_hours",
              "enum": [
                "local_based_routing",
                "business_hours",
                "closed_hours",
                "holiday_hours",
                "outbound_caller_id",
                "audio_prompt",
                "desk_phone",
                "dial_by_name",
                "billing_account"
              ]
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "location_based_routing": {
                    "type": "object",
                    "properties": {
                      "enable": {
                        "type": "boolean",
                        "description": "When the policy is enabled, Zoom Phone calls will be subject to the policy options defined.",
                        "example": false
                      },
                      "place_receive_pstn_calls": {
                        "type": "boolean",
                        "description": "Place and receive PSTN (Public Switched Telephone Network) calls only when inside the locations.",
                        "example": false
                      },
                      "enable_media_off_load_pstn_calls": {
                        "type": "boolean",
                        "description": "Enable media offload for extensions to PSTN (Public Switched Telephone Network) calls.",
                        "example": false
                      }
                    },
                    "description": "Location-based routing setting of the site. Used for `local_based_routing` setting type."
                  },
                  "business_hours": {
                    "type": "object",
                    "properties": {
                      "custom_hour_type": {
                        "type": "integer",
                        "description": "Business Hour Type `1`- 24 hours a Day, 7 days a week, `2`- Custom hours.",
                        "example": 2,
                        "enum": [1, 2]
                      },
                      "custom_hours": {
                        "type": "array",
                        "description": "The settings for custom business hours.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "from": {
                              "type": "string",
                              "description": "The start time for custom hours in `HH:mm` format.",
                              "example": "09:00"
                            },
                            "to": {
                              "type": "string",
                              "description": "The end time custom hours in `HH:mm` format.",
                              "example": "18:00"
                            },
                            "type": {
                              "type": "integer",
                              "description": "The type of custom hours: \n* `0` &mdash; Disabled. \n* `1` &mdash; 24 hours. \n* `2` &mdash; Customized hours.",
                              "example": 0,
                              "enum": [0, 1, 2]
                            },
                            "weekday": {
                              "type": "integer",
                              "description": "The day of the week: \n* `1` &mdash; Sunday \n* `2` &mdash; Monday \n* `3` &mdash; Tuesday \n* `4` &mdash; Wednesday \n* `5` &mdash; Thursday \n* `6` &mdash; Friday \n* `7` &mdash; Saturday",
                              "example": 1,
                              "enum": [1, 2, 3, 4, 5, 6, 7]
                            }
                          }
                        }
                      },
                      "overflow": {
                        "type": "object",
                        "properties": {
                          "allow_caller_to_reach_operator": {
                            "type": "boolean",
                            "description": "Option to allow callers to reach an operator.",
                            "example": true
                          },
                          "operator": {
                            "type": "object",
                            "properties": {
                              "extension_id": {
                                "type": "string",
                                "description": "The extension id.",
                                "example": "p4O_BLMGS7ejPPMaBzgpcQ"
                              }
                            },
                            "description": "The operator to allow callers to reach."
                          },
                          "allow_caller_to_check_voicemail": {
                            "type": "boolean",
                            "description": "Option to allow callers to check voicemail.",
                            "example": false
                          }
                        },
                        "description": "Set the default overflow for business hours for users, Call Queues and Shared Line Groups."
                      }
                    },
                    "description": "Set the default business hours for all users, Zoom Rooms and Common Areas for the site. Used for `business_hours` setting type."
                  },
                  "closed_hours": {
                    "type": "object",
                    "properties": {
                      "overflow": {
                        "type": "object",
                        "properties": {
                          "allow_caller_to_reach_operator": {
                            "type": "boolean",
                            "description": "Option to allow callers to reach an operator.",
                            "example": true
                          },
                          "operator": {
                            "type": "object",
                            "properties": {
                              "extension_id": {
                                "type": "string",
                                "description": "The extension id.",
                                "example": "p4O_BLMGS7ejPPMaBzgpcQ"
                              }
                            },
                            "description": "The operator to allow callers to reach."
                          },
                          "allow_caller_to_check_voicemail": {
                            "type": "boolean",
                            "description": "Option to allow callers to check voicemail.",
                            "example": false
                          }
                        },
                        "description": "Set the default overflow for business hours for users, Call Queues and Shared Line Groups."
                      }
                    },
                    "description": "Set the default closed hours for all users, Zoom Rooms, Common Areas, Auto Receptionists, Call Queues and Shared Line Groups for the site. Used for `closed_hours` setting type."
                  },
                  "holiday_hours": {
                    "type": "object",
                    "properties": {
                      "holidays": {
                        "type": "array",
                        "description": "The settings for holiday hours.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "holiday_id": {
                              "type": "string",
                              "description": "The holiday ID.",
                              "example": "i3gP6xFUTHqSFrIE6nHs7Q"
                            },
                            "name": {
                              "type": "string",
                              "description": "The name of the holiday.",
                              "example": "Holiday 1"
                            },
                            "from": {
                              "type": "string",
                              "description": "The holiday start date and time in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.",
                              "format": "date-time",
                              "example": "2022-03-08T16:00:00Z"
                            },
                            "to": {
                              "type": "string",
                              "description": "The holiday end date and time, in `yyyy-MM-dd'T'HH:mm:ss'Z'` format.",
                              "format": "date-time",
                              "example": "2022-03-09T16:00:00Z"
                            }
                          }
                        }
                      },
                      "overflow": {
                        "type": "object",
                        "properties": {
                          "allow_caller_to_reach_operator": {
                            "type": "boolean",
                            "description": "Option to allow callers to reach an operator.",
                            "example": true
                          },
                          "operator": {
                            "type": "object",
                            "properties": {
                              "extension_id": {
                                "type": "string",
                                "description": "The extension id.",
                                "example": "p4O_BLMGS7ejPPMaBzgpcQ"
                              }
                            },
                            "description": "The operator to allow callers to reach."
                          },
                          "allow_caller_to_check_voicemail": {
                            "type": "boolean",
                            "description": "Option to allow callers to check voicemail.",
                            "example": false
                          }
                        },
                        "description": "Set the default overflow for business hours for users, Call Queues and Shared Line Groups."
                      }
                    },
                    "description": "Set the default holiday hours for all users, Zoom Rooms, Common Areas, Auto Receptionists, Call Queues and Shared Line Groups for the site. Used for `holiday_hours` setting type."
                  },
                  "outbound_caller_id": {
                    "type": "object",
                    "properties": {
                      "auto_receptionists_numbers": {
                        "type": "boolean",
                        "description": "When checked, auto receptionists members will use the numbers as the outbound caller ID",
                        "example": false
                      },
                      "call_queue_numbers": {
                        "type": "boolean",
                        "description": "When checked, call queue members will use the numbers as the outbound caller ID.",
                        "example": false
                      },
                      "share_line_group_numbers": {
                        "type": "boolean",
                        "description": "When checked, share line group members will use the numbers as the outbound caller ID.",
                        "example": false
                      },
                      "show_outbound_caller_id_for_internal_call": {
                        "type": "boolean",
                        "description": "When a call is made to an internal extension that uses the numbers associated with Auto Receptionist or Call Queue as the caller ID, the receiver will see an outbound caller ID selected by the caller.",
                        "example": false
                      }
                    },
                    "description": "The outbound caller ID setting. Used for `outbound_caller_id` setting type."
                  },
                  "audio_prompt": {
                    "type": "object",
                    "properties": {
                      "language": {
                        "type": "string",
                        "description": "Audio prompt language code.  \n  American English: `en-US`  \n \nBritish English: `en-GB`  \n \nEspa&ntilde;ol americano: `es-US`  \n \nFran&ccedil;ais canadien: `fr-CA`  \n \nDansk: `da-DK`  \n \nDeutsch: `de-DE`  \n \nEspa&ntilde;ol: `es-ES`  \n \nFran&ccedil;ais: `fr-FR`  \n \nItaliano: `it-IT`  \n \nNederlands: `nl-NL`  \n \nPortugues portugal: `pt-PT`  \n \nJapanese: `ja-JP`  \n \nKorean: `ko-KO`  \n \nPortugues brasil: `pt-BR`  \n \nChinese: `zh-CN`  \n \nTaiwanese: `zh-TW`  \n ",
                        "example": "en-GB"
                      },
                      "greeting_leave_voicemail_instruction": {
                        "type": "object",
                        "properties": {
                          "business_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          },
                          "closed_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          },
                          "holiday_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          }
                        }
                      },
                      "greeting_menu_leave_or_check_voicemail": {
                        "type": "object",
                        "properties": {
                          "business_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          },
                          "closed_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          },
                          "holiday_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          }
                        }
                      },
                      "greeting_menu_connect_to_operator_or_leave_voicemail": {
                        "type": "object",
                        "properties": {
                          "business_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          },
                          "closed_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          },
                          "holiday_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          }
                        }
                      },
                      "greeting_menu_connect_to_operator_leave_or_check_voicemail": {
                        "type": "object",
                        "properties": {
                          "business_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          },
                          "closed_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          },
                          "holiday_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          }
                        }
                      },
                      "leave_voicemail_introduction": {
                        "type": "object",
                        "properties": {
                          "business_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          },
                          "closed_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          },
                          "holiday_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          }
                        }
                      },
                      "message_greeting": {
                        "type": "object",
                        "properties": {
                          "business_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          },
                          "closed_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          },
                          "holiday_hours": {
                            "type": "object",
                            "properties": {
                              "audio_id": {
                                "type": "string",
                                "description": "The unique identifier of the audio item.",
                                "example": "yCT14TwySDGVUypVlKNEyA"
                              }
                            },
                            "description": "The audio prompt setting for respective hours."
                          }
                        }
                      },
                      "audio_while_connecting": {
                        "type": "object",
                        "properties": {
                          "audio_id": {
                            "type": "string",
                            "description": "The unique identifier of the audio item.",
                            "example": "yCT14TwySDGVUypVlKNEyA"
                          }
                        },
                        "description": "The audio prompt setting for respective hours."
                      },
                      "hold_music": {
                        "type": "object",
                        "properties": {
                          "audio_id": {
                            "type": "string",
                            "description": "The unique identifier of the audio item.",
                            "example": "yCT14TwySDGVUypVlKNEyA"
                          }
                        },
                        "description": "The audio prompt setting for respective hours."
                      }
                    },
                    "description": "The audio prompt setting. Used for `audio_prompt` setting type."
                  },
                  "desk_phone": {
                    "properties": {
                      "hot_desking_session_timeout": {
                        "required": ["number"],
                        "type": "object",
                        "properties": {
                          "number": {
                            "type": "integer",
                            "example": 5,
                            "enum": [
                              1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
                              16, 17, 18, 19, 20, 21, 22, 23, 24, 30
                            ]
                          },
                          "unit": {
                            "type": "string",
                            "description": "`minutes` - available if the `number` values are: '5, 10, 15, 30'  \n`hours` - not available if the `number` value is '30'",
                            "example": "minutes",
                            "default": "hours",
                            "enum": ["minutes", "hours"]
                          }
                        },
                        "description": "The set duration after which users are signed out of hot desking devices."
                      }
                    },
                    "description": "The desk phone setting."
                  },
                  "dial_by_name": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "type": "boolean",
                        "description": "Whether to allow callers to search for an extension by the first or last name. Currently supports English only.",
                        "example": true
                      },
                      "inherit": {
                        "type": "boolean",
                        "description": "Whether to inherit the dial by name directory maintained at the account level. This directory is read-only to sites.",
                        "example": false
                      },
                      "rule": {
                        "type": "string",
                        "description": "Search extensions by first or last name. Callers must enter at least 2 characters to perform a name search.",
                        "example": "last_name",
                        "enum": ["first_name", "last_name"]
                      }
                    },
                    "description": "The dial by name directory setting."
                  },
                  "billing_account": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string",
                        "description": "Billing account ID.",
                        "example": "3WWAEiEjTj2IQuyDiKMd_A"
                      }
                    },
                    "description": "Billing account setting."
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content  \n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nValidation Failed. Site does not exist.<br>Prompt files do not exist, audio ids: {0}.<br>Hot-desking session timeout setting is invalid.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:site_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:site_setting:admin"]
        }
      }
    },
    "/phone/users": {
      "get": {
        "tags": ["Users"],
        "summary": "List phone users",
        "description": "Returns a list of all of an account's users who are assigned a Zoom Phone license.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_users:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listPhoneUsers",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned from a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The unique identifier of the site. Get it from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.",
            "required": false,
            "schema": { "type": "string", "example": "8f71O6rWT8KFUGQmJIFAdQ" }
          },
          {
            "name": "calling_type",
            "in": "query",
            "description": " The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of calling plan.",
            "required": false,
            "schema": { "type": "integer", "example": 200 }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the Zoom Phone user. \n\n `pending`: The users have been assigned the Zoom Workplace license, but not been assigned Zoom Phone feature.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "Active",
              "enum": ["activate", "deactivate", "pending"]
            }
          },
          {
            "name": "department",
            "in": "query",
            "description": "The department where the user belongs.",
            "required": false,
            "schema": { "type": "string", "example": "Phone department" }
          },
          {
            "name": "cost_center",
            "in": "query",
            "description": "The cost center where the user belongs.",
            "required": false,
            "schema": { "type": "string", "example": "Phone cost center" }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The partial string of user's name, extension number, or phone number.",
            "required": false,
            "schema": { "type": "string", "example": "test@zoom.us" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nPhone users retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "nav48KOj42vYPSG4f0cCdT575bZ980did22"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned from a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total records found for this query.",
                      "example": 45
                    },
                    "users": {
                      "maxItems": 100,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "calling_plans": {
                            "maxItems": 150,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "The name of the user's calling plan.",
                                  "example": "US/CA Metered Calling Plan"
                                },
                                "type": {
                                  "type": "integer",
                                  "description": "The type of calling plan where the user is enrolled.",
                                  "example": 100
                                },
                                "billing_account_id": {
                                  "type": "string",
                                  "description": "The billing account ID. It displays when the user is located in India.",
                                  "example": "3WWAEiEjTj2IQuyDiKMd_A"
                                },
                                "billing_account_name": {
                                  "type": "string",
                                  "description": "The billing account name. It displays when the user is located in India.",
                                  "example": "Delhi billing"
                                }
                              }
                            }
                          },
                          "email": {
                            "type": "string",
                            "description": "The email address of the user.",
                            "format": "email",
                            "example": "202007160003@testapi.com"
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "The extension ID.",
                            "example": "V4UobpuxRxCwN_8iNf7k4w"
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "The extension number assigned to the user's Zoom phone number.",
                            "format": "int64",
                            "example": 1000001036
                          },
                          "id": {
                            "type": "string",
                            "description": "The unique identifier of the user (userId).",
                            "example": "w0RChiauQeqRlv5fgxYULQ"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the user.",
                            "example": "APITA AUTO"
                          },
                          "phone_user_id": {
                            "type": "string",
                            "description": "The Zoom phone identifier of the user.",
                            "example": "BOSr0vUiTl61WLR-Q_7bUw"
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                                "example": "IjJ2D75SQJit1VdDvkK_mQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the site.",
                                "example": "ApiTA_Site_2020_07_12_02_33_45_707"
                              }
                            }
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the user's Zoom Phone license. The value can be either of the following:  \n \n`activate`: Active Zoom phone user.  \n \n`deactivate`: User with Zoom phone license disabled. This type of user can't make or receive calls.",
                            "example": "activate"
                          },
                          "phone_numbers": {
                            "maxItems": 10,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The phone number ID.",
                                  "example": "---M1padRvSUtw7YihN7sA"
                                },
                                "number": {
                                  "type": "string",
                                  "description": "The phone number.",
                                  "example": "14232058798"
                                }
                              }
                            }
                          },
                          "department": {
                            "type": "string",
                            "description": "The department where the user belongs.",
                            "example": "Phone department"
                          },
                          "cost_center": {
                            "type": "string",
                            "description": "The cost center where the user belongs.",
                            "example": "Phone cost center"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n The next page token is invalid or expired.\r\nPlease enter at least {0} valid characters. <br>\n**Error Code:** `124` <br>\n You do not have permission, because the current site `{0}` does not belong to the target sites. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_users:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_users:admin"]
        }
      }
    },
    "/phone/users/batch": {
      "put": {
        "tags": ["Users"],
        "summary": "Update multiple users' properties in batch",
        "description": "Updates multiple users' properties in batch. For example, you can update the users' [site](https://support.zoom.us/hc/en-us/articles/360020809672) when `batchType` is equal to `move_site`. You can update 10 users at a time. \n\n**Prerequisites:**\n* Business, or Education account\n* Zoom Phone license \n\n\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:batch_users:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateUsersPropertiesInBatch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "batch_type": {
                    "type": "string",
                    "description": "The type that updates in batch. \n\n You must enter `move_site`: `user_ids` and `site_id` into the current request body. \n\n `assign_pending_user`: Assign user to the Zoom Phone feature of the Zoom One license. `site_id` is not required.",
                    "example": "move_site",
                    "enum": ["move_site", "assign_pending_user"]
                  },
                  "user_ids": {
                    "maxItems": 10,
                    "type": "array",
                    "description": "The IDs of user.",
                    "items": {
                      "type": "string",
                      "example": "DYHrdpjrS3uaOf7dPkkg8w"
                    }
                  },
                  "site_id": {
                    "type": "string",
                    "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672) where the user should be moved or assigned. ",
                    "example": "8f71O6rWT8KFUGQmJIFAdQ"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**\n\nSuccessfully update multiple users' properties in batch."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n Current batch type does not support, batch type:{0}. <br>\n**Error Code:** `12007` <br>\n The user in Trash cannot be assigned Zoom One license. <br>\n**Error Code:** `12008` <br>\n The Zoom Phone feature of the Zoom One license cannot be supported for users assigned to India sites. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:update:batch_users:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:batch_users:admin"]
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Batch add users",
        "description": "Adds phone users in batch. You can add up to 10 users at a time.\n\n**Prerequisites:**\n* The users must be active in your [Zoom account](https://marketplace.zoom.us/docs/api-reference/zoom-api/methods#tag/Users/operation/users). \n* Pro or higher account plan with Zoom phone license\n* Account owner or admin permissions\n\n\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:batch_users:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "batchAddUsers",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "users": {
                    "maxItems": 10,
                    "type": "array",
                    "items": {
                      "required": [
                        "calling_plans",
                        "email",
                        "extension_number"
                      ],
                      "type": "object",
                      "properties": {
                        "email": {
                          "type": "string",
                          "description": "The user email. It ensures the users are active in your Zoom account.",
                          "example": "user@example.com"
                        },
                        "first_name": {
                          "type": "string",
                          "description": "The user's first name. It ensures the users are active in your Zoom account.",
                          "example": "Zeb"
                        },
                        "last_name": {
                          "type": "string",
                          "description": "The user's last name. It ensures the users are active in your Zoom account.",
                          "example": "Zoomie"
                        },
                        "calling_plans": {
                          "maxItems": 150,
                          "type": "array",
                          "description": "The calling plan.   \n \n* Type &quot;AU/NZ Metered&quot; if the assigned package is &quot;Australia/New Zealand Metered Calling Plan&quot;.  \n \n* Type &quot;AU/NZ Unlimited&quot; if the assigned package is &quot;Australia/New Zealand Unlimited Calling Plan&quot;.  \n \n* Type &quot;UK/Ireland Metered&quot; if the assigned package is &quot;United Kingdom/Ireland Metered Calling Plan&quot;.  \n \n* Type &quot;UK/Ireland Unlimited&quot; if the assigned package is &quot;United Kingdom/Ireland Unlimited Calling Plan&quot;.  \n \n* Type &quot;US/CA Metered&quot; if the assigned package is &quot;United States/Canada Metered Calling Plan&quot;.  \n \n* Type &quot;US/CA Unlimited&quot; if the assigned package is &quot;United States/Canada Unlimited Calling Plan&quot;.  \n \n* Type &quot;Europe Zone A Metered&quot; if the assigned package is &quot;Europe Zone A Metered Calling Plan&quot;.  \n \n* Type &quot;Europe Zone A Unlimited&quot; if the assigned package is &quot;Europe Zone A Unlimited Calling Plan&quot;.  \n \n* Type &quot;Europe Zone B Metered&quot; if the assigned package is &quot;Europe Zone B Metered Calling Plan&quot;.  \n \n* Type &quot;Europe Zone B Unlimited&quot; if the assigned package is &quot;Europe Zone B Unlimited Calling Plan&quot;.  \n \n* Type &quot;JP Metered&quot; if the assigned package is &quot;Japan Metered Calling Plan&quot;.  \n \n* Type &quot;JP Unlimited&quot; if the assigned package is &quot;Japan Unlimited Calling Plan&quot;.  \n \n* Type &quot;IN Metered&quot; if the assigned package is &quot;India Metered Calling Plan&quot;.  \n \n* Type &quot;IN Unlimited&quot; if the assigned package is &quot;India Unlimited Calling Plan&quot;.  \n \n* Type &quot;IN Pro&quot; if the assigned package is &quot;Zoom Phone India Pro&quot;.  \n \n* Type &quot;IN International Calling Add-On&quot; if the assigned package is &quot;India International Calling Add-On&quot;.  \n \n* Type &quot;Global Select Metered&quot; if the assigned package is &quot;Global Select Metered Calling Plan&quot;.  \n \n* Type &quot;Global Select&quot; if the assigned package is &quot;Global Select Calling Plan&quot;.  \n \n* Type &quot;International Calling Add-On&quot; if the assigned package is &quot;International Calling Add-On&quot;.  \n \n* Type &quot;Beta&quot; if the assigned package is &quot;Beta Calling Plan&quot;.  \n \n* Type &quot;Pro&quot; if the assigned package is &quot;Zoom Phone Pro&quot;.  \n \n* Type &quot;Power Pack&quot; if the assigned package is &quot;Zoom Phone Power Pack&quot;.\nLeave this section blank if no package has been assigned.",
                          "items": {
                            "type": "string",
                            "example": "AU/NZ Metered"
                          }
                        },
                        "site_code": {
                          "type": "string",
                          "description": "The site code. It's required if the site name is not provided or if Indian plans are assigned.",
                          "example": "1"
                        },
                        "site_name": {
                          "type": "string",
                          "description": "The site name. It's required if the site code is not provided or if Indian plans are assigned.",
                          "example": "Main Site"
                        },
                        "template_name": {
                          "type": "string",
                          "description": "The template name. Configure the user setting according to the specified template. The template must belong to the same site as the user.",
                          "example": "account_user_template_01"
                        },
                        "extension_number": {
                          "type": "string",
                          "description": "The extension number. Do not include the site code in an extension number if the site code is enabled.",
                          "example": "100012345"
                        },
                        "phone_numbers": {
                          "maxItems": 10,
                          "type": "array",
                          "description": "The phone numbers in E164 format. Separate multiple phone number entries with commas. Make sure that these numbers have been ported to your account as unassigned phone numbers.",
                          "items": {
                            "type": "string",
                            "example": "+12055437350"
                          }
                        },
                        "outbound_caller_id": {
                          "type": "string",
                          "description": "The outbound caller ID. Hides the caller ID if left blank. You can set an extension's phone number or any company number as the outbound caller ID.",
                          "example": "+12055437350"
                        },
                        "select_outbound_caller_id": {
                          "type": "boolean",
                          "description": "Whether to allow this extension to change the outbound caller ID when placing calls.",
                          "example": true
                        },
                        "sms": {
                          "type": "boolean",
                          "description": "Whether to enable SMS for this user.",
                          "example": true
                        },
                        "desk_phones": {
                          "maxItems": 10,
                          "type": "array",
                          "description": "Required: brand, model, and MAC address of each desk phone. \nOptional: provision template. Skips the provision template not supported by the device. For more information, see [supported devices](https://support.zoom.us/hc/en-us/articles/360001299063-Zoom-Voice-Supported-Devices).\n\nEach user can be assigned up to 3 desk phones.\n\nAll users must belong to the same site if a desk phone is assigned to multiple users.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "brand": {
                                "type": "string",
                                "description": "The manufacturer (brand) name of the device.",
                                "example": "Yealink"
                              },
                              "model": {
                                "type": "string",
                                "description": "The model name of the device.",
                                "example": "405hd"
                              },
                              "mac": {
                                "type": "string",
                                "description": "The MAC address of the desk phone.",
                                "example": "80-5e-c0-3d-eb-c4"
                              },
                              "provision_template": {
                                "type": "string",
                                "description": "The provision template name. Supported by select devices.",
                                "example": "TestProvisionTemplate"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nCreated.",
            "content": {
              "application/json": {
                "schema": {
                  "maxItems": 10,
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "email": {
                        "type": "string",
                        "description": "The imported user email.",
                        "example": "ta_test_import_user_01@example.com"
                      },
                      "id": {
                        "type": "string",
                        "description": "The user ID.",
                        "example": "FwOAeL4TRmqQrmF0jOfzkQ"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n User size must be less than 10.\r\nYou need to have administrative privileges to edit this site. <br>\n**Error Code:** `300` <br>\n Validation Failed. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Template is invalid <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:batch_users:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:batch_users:admin"]
        }
      }
    },
    "/phone/users/{userId}": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user's profile",
        "description": "Returns a user's [Zoom phone](https://support.zoom.us/hc/en-us/articles/360001297663-Quickstart-Guide-for-Zoom-Phone-Administrators) profile. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read`,`phone:read:admin`\n\n**Granular Scopes:** `phone:read:user`,`phone:read:user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "phoneUser",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "required": true,
            "schema": { "type": "string", "example": "DYHrdpjrS3uaOf7dPkkg8w" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`   \n User profile object returned. ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "calling_plans": {
                      "maxItems": 150,
                      "type": "array",
                      "description": "The calling plan of the user",
                      "items": {
                        "type": "object",
                        "properties": {
                          "type": {
                            "type": "integer",
                            "description": "The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of calling plan. ",
                            "example": 600
                          },
                          "billing_account_id": {
                            "type": "string",
                            "description": "The billing account ID. It displays when the user is located in India.",
                            "example": "3WWAEiEjTj2IQuyDiKMd_A"
                          },
                          "billing_account_name": {
                            "type": "string",
                            "description": "The billing account name. It displays when the user is located in India.",
                            "example": "Delhi billing"
                          }
                        }
                      }
                    },
                    "cost_center": {
                      "type": "string",
                      "description": "The cost center name.",
                      "example": "testCostCenter"
                    },
                    "department": {
                      "type": "string",
                      "description": "The department name.",
                      "example": "testDepartment"
                    },
                    "email": {
                      "type": "string",
                      "description": "The email address of the user.",
                      "example": "suesu_test_delete3@testapi.com"
                    },
                    "emergency_address": {
                      "type": "object",
                      "properties": {
                        "address_line1": {
                          "type": "string",
                          "description": "The address Line 1 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that contains the house number and street name.",
                          "example": "55 Almaden Boulevard"
                        },
                        "address_line2": {
                          "type": "string",
                          "description": "The address Line 2 of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address) that contains the building number, floor number, unit, and others",
                          "example": "1002 Airport Way S"
                        },
                        "city": {
                          "type": "string",
                          "description": "The city of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "example": "SAN JOSE"
                        },
                        "country": {
                          "maxLength": 2,
                          "minLength": 2,
                          "type": "string",
                          "description": "The two-lettered country code (Alpha-2 code in ISO-3166 format) standard of the site's [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "example": "US"
                        },
                        "id": {
                          "type": "string",
                          "description": "The emergency address ID.",
                          "example": "CCc8zYT1SN60i7uDMzDbXA"
                        },
                        "state_code": {
                          "type": "string",
                          "description": "The state code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "example": "CA"
                        },
                        "zip": {
                          "type": "string",
                          "description": "The zip code of the [emergency address](https://support.zoom.us/hc/en-us/articles/360021062871-Setting-an-Emergency-Address).",
                          "example": "95113"
                        }
                      }
                    },
                    "extension_id": {
                      "type": "string",
                      "description": "The extension ID.",
                      "example": "nNGsNx2zRDyiIXWVI23FCQ"
                    },
                    "extension_number": {
                      "type": "integer",
                      "description": "The extension number.",
                      "format": "int64",
                      "example": 100012347
                    },
                    "id": {
                      "type": "string",
                      "description": "The Zoom user ID.",
                      "example": "NL3cEpSdRc-c2t8aLoZqiw"
                    },
                    "phone_numbers": {
                      "maxItems": 10,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The phone number ID.",
                            "example": "---M1padRvSUtw7YihN7sA"
                          },
                          "number": {
                            "type": "string",
                            "description": "The phone number.",
                            "example": "14232058798"
                          }
                        }
                      }
                    },
                    "phone_user_id": {
                      "type": "string",
                      "description": "The Zoom phone user ID.",
                      "example": "u7pnC468TaS46OuNoEw6GA"
                    },
                    "policy": {
                      "type": "object",
                      "properties": {
                        "ad_hoc_call_recording": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether the current extension can record and save calls to the cloud.",
                              "example": true
                            },
                            "recording_start_prompt": {
                              "type": "boolean",
                              "description": "Whether a prompt plays to call participants when the recording has started.",
                              "example": true
                            },
                            "recording_transcription": {
                              "type": "boolean",
                              "description": "Whether the call recording transcription is enabled.",
                              "example": true
                            },
                            "play_recording_beep_tone": {
                              "type": "object",
                              "properties": {
                                "enable": {
                                  "type": "boolean",
                                  "description": "Whether to play the side tone beep for recorded users while recording. It displays only when ad hoc call recording policy uses the new framework.",
                                  "example": true
                                },
                                "play_beep_volume": {
                                  "type": "integer",
                                  "description": "The side tone beep volume. It displays only when `enable` is set to `true`.",
                                  "example": 60,
                                  "enum": [0, 20, 40, 60, 80, 100]
                                },
                                "play_beep_time_interval": {
                                  "type": "integer",
                                  "description": "The beep time interval in seconds. It displays only when the `enable` is set to true.",
                                  "example": 15,
                                  "enum": [5, 10, 15, 20, 25, 30, 60, 120]
                                },
                                "play_beep_member": {
                                  "type": "string",
                                  "description": "The beep sides. It displays only when the `enable` is set to true.",
                                  "example": "allMember",
                                  "enum": ["allMember", "recordingSide"]
                                }
                              }
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allow users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            }
                          },
                          "description": "A list of ad hoc call recording settings."
                        },
                        "ad_hoc_call_recording_access_members": {
                          "maxItems": 50,
                          "uniqueItems": true,
                          "type": "array",
                          "description": "The shared ad hoc call recording access member list.",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "access_user_id": {
                                    "type": "string",
                                    "description": "The Zoom user ID to share access permissions.",
                                    "example": "w0RChiauQeqRlv5fgxYULQ"
                                  },
                                  "allow_delete": {
                                    "type": "boolean",
                                    "description": "Whether the user has delete permissions. The default is **false**.",
                                    "example": false
                                  },
                                  "allow_download": {
                                    "type": "boolean",
                                    "description": "Whether the user has download permissions. The default is **false**.",
                                    "example": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "shared_id": {
                                    "type": "string",
                                    "description": "The unique identifier of the shared sub-setting that the user can access.",
                                    "example": "--e8ugg0SeS-9clgrDkn2w"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "auto_call_recording": {
                          "type": "object",
                          "properties": {
                            "allow_stop_resume_recording": {
                              "type": "boolean",
                              "description": "Whether the stop of and resuming of automatic call recording is enabled.",
                              "example": true
                            },
                            "disconnect_on_recording_failure": {
                              "type": "boolean",
                              "description": "Whether a call disconnects when there is an issue with automatic call recording and the call cannot reconnect after five seconds. It does **not** include emergency calls.",
                              "example": true
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "Whether the automatic call recording is enabled.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            },
                            "recording_calls": {
                              "type": "string",
                              "description": "The type of calls automatically recorded: \n* `inbound` \n* `outbound` \n* `both`",
                              "example": "inbound",
                              "enum": ["inbound", "outbound", "both"]
                            },
                            "recording_explicit_consent": {
                              "type": "boolean",
                              "description": "Whether the **Press 1** option that provides recording consent is enabled.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` to operate inbound and outbound prompt separately.\n\n<b>Note:</b> \n* if customers who opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent` and `inbound_audio_notification.recording_explicit_consent` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_explicit_consent` will be also updated.\n* If customers do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent. When the field is updated, the `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` will be also updated.",
                              "example": true,
                              "deprecated": true
                            },
                            "recording_start_prompt": {
                              "type": "boolean",
                              "description": "Whether a prompt plays to call participants when the recording has started.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` to operate inbound and outbound prompt separately.\n\n<b>Note:</b> \n* If customers who opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt` and `inbound_audio_notification.recording_start_prompt` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt` will be also updated.\n* If customers do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` will be also updated.",
                              "example": true,
                              "deprecated": true
                            },
                            "recording_transcription": {
                              "type": "boolean",
                              "description": "Whether the call recording transcription is enabled.",
                              "example": true
                            },
                            "play_recording_beep_tone": {
                              "type": "object",
                              "properties": {
                                "enable": {
                                  "type": "boolean",
                                  "description": "Whether to play the side tone beep for recorded users while recording. It displays only when auto call recording policy uses the new framework.",
                                  "example": true
                                },
                                "play_beep_volume": {
                                  "type": "integer",
                                  "description": "The side tone beep volume. It displays only when `enable` is set to `true`.",
                                  "example": 60,
                                  "enum": [0, 20, 40, 60, 80, 100]
                                },
                                "play_beep_time_interval": {
                                  "type": "integer",
                                  "description": "The beep time interval in seconds. It displays only when the `enable` is set to true.",
                                  "example": 15,
                                  "enum": [5, 10, 15, 20, 25, 30, 60, 120]
                                },
                                "play_beep_member": {
                                  "type": "string",
                                  "description": "The beep sides. It displays only when the `enable` is set to true.",
                                  "example": "allMember",
                                  "enum": ["allMember", "recordingSide"]
                                }
                              }
                            },
                            "inbound_audio_notification": {
                              "type": "object",
                              "properties": {
                                "recording_start_prompt": {
                                  "type": "boolean",
                                  "description": "Whether a prompt plays to call participants when the recording has started for inbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* If customers do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                                  "example": true
                                },
                                "recording_explicit_consent": {
                                  "type": "boolean",
                                  "description": "Whether the **Press 1** option that provides recording consent for outbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent.\n* If customers do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` with the same value.",
                                  "example": true
                                }
                              }
                            },
                            "outbound_audio_notification": {
                              "type": "object",
                              "properties": {
                                "recording_start_prompt": {
                                  "type": "boolean",
                                  "description": "Whether a prompt plays to call participants when the recording has started for outbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* If customers do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                                  "example": true
                                },
                                "recording_explicit_consent": {
                                  "type": "boolean",
                                  "description": "Whether the **Press 1** option that provides recording consent for outbound call is enabled.\n\n<b>Note:</b> \n* If customers  do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent.\n* If customers do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` with the same value.",
                                  "example": true
                                }
                              }
                            }
                          },
                          "description": "A list of the user's automatic call recording settings."
                        },
                        "auto_call_recording_access_members": {
                          "maxItems": 50,
                          "uniqueItems": true,
                          "type": "array",
                          "description": "The shared automatic call recording access member list.",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "access_user_id": {
                                    "type": "string",
                                    "description": "The Zoom user ID to share access permissions.",
                                    "example": "w0RChiauQeqRlv5fgxYULQ"
                                  },
                                  "allow_delete": {
                                    "type": "boolean",
                                    "description": "Whether the user has delete permissions. The default is **false**.",
                                    "example": false
                                  },
                                  "allow_download": {
                                    "type": "boolean",
                                    "description": "Whether the user has download permissions. The default is **false**.",
                                    "example": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "shared_id": {
                                    "type": "string",
                                    "description": "The unique identifier of the shared sub-setting that the user can access.",
                                    "example": "--e8ugg0SeS-9clgrDkn2w"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "call_overflow": {
                          "type": "object",
                          "properties": {
                            "call_overflow_type": {
                              "type": "integer",
                              "description": "`1` - Low restriction (external numbers not allowed)\n`2` - Medium restriction (external numbers and external contacts not allowed)\n `3` - High restriction (external numbers, external contacts and internal extensions without inbound automatic call recording not allowed)\n`4` - No restriction",
                              "example": 1,
                              "enum": [1, 2, 3, 4]
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow the user to forward calls to other numbers.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "site",
                              "enum": ["account", "user_group", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                              "example": true
                            }
                          }
                        },
                        "call_park": {
                          "type": "object",
                          "properties": {
                            "call_not_picked_up_action": {
                              "type": "integer",
                              "description": "The action when a parked call is not picked up. 100-Ring back to parker, 0-Forward to voicemail of the parker, 9-Disconnect, 50-Forward to another extension.",
                              "example": 9
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow calls placed on hold to be resumed from another location using a retrieval code.",
                              "example": true
                            },
                            "expiration_period": {
                              "type": "integer",
                              "description": "A time limit for parked calls and unit minutes. After the expiration period ends, the retrieval code is no longer valid and a new code will be generated.",
                              "example": 10,
                              "enum": [
                                1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30,
                                35, 40, 45, 50, 55, 60
                              ]
                            },
                            "forward_to": {
                              "type": "object",
                              "properties": {
                                "display_name": {
                                  "type": "string",
                                  "description": "The extension's name.",
                                  "example": "test extension name"
                                },
                                "extension_id": {
                                  "type": "string",
                                  "description": "The extension ID.",
                                  "example": "CcrEGgmeQem1uyJsuIRKwA"
                                },
                                "extension_number": {
                                  "type": "integer",
                                  "description": "The extension number.",
                                  "format": "int64",
                                  "example": 1000123477
                                },
                                "extension_type": {
                                  "type": "string",
                                  "description": "The type of extension: \n* `user` \n* `zoomRoom` \n* `commonArea`\n* `ciscoRoom/polycomRoom` \n* `autoReceptionist` \n* `sharedLineGroup` \n* `callQueue`",
                                  "example": "user",
                                  "enum": [
                                    "user",
                                    "zoomRoom",
                                    "commonArea",
                                    "ciscoRoom/polycomRoom",
                                    "autoReceptionist",
                                    "callQueue",
                                    "sharedLineGroup"
                                  ]
                                },
                                "id": {
                                  "type": "string",
                                  "description": "The ID of the extension `user`, `zoomRoom`, `commonArea`, `ciscoRoom/polycomRoom`, `autoReceptionist`, `callQueue` or `sharedLineGroup`.",
                                  "example": "fWOgOALdT1ei4vjXK-QYsA"
                                }
                              },
                              "description": "The extension's forwarding information."
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            }
                          }
                        },
                        "call_transferring": {
                          "type": "object",
                          "properties": {
                            "call_transferring_type": {
                              "type": "integer",
                              "description": "This field contains these settings: 1-No restriction.\n2-Medium restriction (external numbers and external contacts not allowed).\n3-High restriction (external numbers, unrecorded external contacts, and internal extensions without inbound automatic recording not allowed).\n4-Low restriction (external numbers not allowed).",
                              "example": 2,
                              "enum": [1, 2, 3, 4]
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow user to warm or blind transfer their calls. This does not apply to warm transfer on IP Phones except for Yealink.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            }
                          }
                        },
                        "delegation": {
                          "type": "boolean",
                          "description": "Whether the user can use [call delegation](https://support.zoom.us/hc/en-us/articles/360032881731-Setting-up-call-delegation-shared-lines-appearance-).",
                          "example": true
                        },
                        "elevate_to_meeting": {
                          "type": "boolean",
                          "description": "Whether the user can elevate their phone calls to a meeting.",
                          "example": true
                        },
                        "emergency_address_management": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow the current extension to manage its own emergency addresses.",
                              "example": true
                            },
                            "prompt_default_address": {
                              "type": "boolean",
                              "description": "Whether to prompt the user to set or confirm a default address.",
                              "example": true
                            }
                          }
                        },
                        "emergency_calls_to_psap": {
                          "type": "boolean",
                          "description": "When disabled, emergency calls placed by the user will not be delivered to the Public Safety Answering Point(PSAP), but still will be delivered to the Internal Safety Response Team based on the settings.",
                          "example": true
                        },
                        "forwarding_to_external_numbers": {
                          "type": "boolean",
                          "description": "Whether call forwarding to external numbers is enabled. Use the `call_handling_forwarding_to_other_users` instead.",
                          "example": true,
                          "deprecated": true
                        },
                        "call_handling_forwarding_to_other_users": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "call_forwarding_type": {
                              "type": "integer",
                              "description": "`1` - Low restriction (external numbers not allowed)\n`2` - Medium restriction (external numbers and external contacts not allowed)\n `3` - High restriction (external numbers, external contacts and internal extensions without inbound automatic call recording not allowed)\n`4` - No restriction",
                              "example": 1,
                              "enum": [1, 2, 3, 4]
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "site",
                              "enum": ["account", "user_group", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                              "example": true
                            }
                          },
                          "description": "Whether to allow the user to forward calls to other numbers."
                        },
                        "hand_off_to_room": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to send a call to a Zoom Room.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            }
                          }
                        },
                        "international_calling": {
                          "type": "boolean",
                          "description": "Whether the current extension can make international calls outside of their calling plan.",
                          "example": true
                        },
                        "mobile_switch_to_carrier": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow the user to switch from a Zoom Phone to their native carrier.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            }
                          }
                        },
                        "select_outbound_caller_id": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow the current extension to change the outbound caller ID when placing calls.",
                              "example": true
                            },
                            "allow_hide_outbound_caller_id": {
                              "type": "boolean",
                              "description": "Whether to allow the current extension to hide outbound caller id.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            }
                          }
                        },
                        "sms": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether the user can send and receive messages.",
                              "example": true
                            },
                            "international_sms": {
                              "type": "boolean",
                              "description": "Whether the user can send and receive international messages.",
                              "example": true
                            },
                            "international_sms_countries": {
                              "maxItems": 100,
                              "type": "array",
                              "description": "The country that can send and receive international messages. The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                              "items": { "type": "string", "example": "US" }
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            }
                          }
                        },
                        "voicemail": {
                          "type": "object",
                          "properties": {
                            "allow_delete": {
                              "type": "boolean",
                              "description": "This field allows the user to delete his own voicemail.",
                              "example": true
                            },
                            "allow_download": {
                              "type": "boolean",
                              "description": "This field allows the user to download their voicemail.",
                              "example": true
                            },
                            "allow_transcription": {
                              "type": "boolean",
                              "description": "Whether the voicemail transcription is enabled.",
                              "example": true
                            },
                            "allow_videomail": {
                              "type": "boolean",
                              "description": "Whether to allow users to access, share, download, or delete the video mail",
                              "example": true
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "Whether the current extension can access, receive, or share voicemail.",
                              "example": true
                            }
                          }
                        },
                        "voicemail_access_members": {
                          "maxItems": 50,
                          "type": "array",
                          "description": "The shared voicemail access member list.",
                          "items": {
                            "allOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "access_user_id": {
                                    "type": "string",
                                    "description": "The Zoom user ID to share the voicemail access permissions with.",
                                    "example": "w0RChiauQeqRlv5fgxYULQ"
                                  },
                                  "allow_delete": {
                                    "type": "boolean",
                                    "description": "Whether the user has delete permissions. The default is **false**.",
                                    "example": false
                                  },
                                  "allow_download": {
                                    "type": "boolean",
                                    "description": "Whether the user has download permissions. The default is **false**.",
                                    "example": false
                                  },
                                  "allow_sharing": {
                                    "type": "boolean",
                                    "description": "Whether the user has permission to share. The default is **false**.",
                                    "example": false
                                  }
                                }
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "shared_id": {
                                    "type": "string",
                                    "description": " The unique identifier of the shared sub-setting that the user can access.",
                                    "example": "--e8ugg0SeS-9clgrDkn2w"
                                  }
                                }
                              }
                            ]
                          }
                        },
                        "zoom_phone_on_mobile": {
                          "type": "object",
                          "properties": {
                            "allow_calling_sms_mms": {
                              "type": "boolean",
                              "description": "Whether to allow calling and SMS/MMS functions on mobile.",
                              "example": true
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow user to use Zoom Phone on mobile clients (iOS, iPad OS, and Android).",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            }
                          }
                        },
                        "personal_audio_library": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to change their own audio library.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits the modification of the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset in the update call.",
                              "example": true
                            },
                            "allow_music_on_hold_customization": {
                              "type": "boolean",
                              "description": "Whether to allow music on hold customization.",
                              "example": true
                            },
                            "allow_voicemail_and_message_greeting_customization": {
                              "type": "boolean",
                              "description": "Whether to allow voicemail and message greeting customization.",
                              "example": true
                            }
                          }
                        },
                        "voicemail_transcription": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow the user to access transcriptions of voicemails.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset in the update call.",
                              "example": true
                            }
                          }
                        },
                        "voicemail_notification_by_email": {
                          "type": "object",
                          "properties": {
                            "include_voicemail_file": {
                              "type": "boolean",
                              "description": "Whether to include the voicemail file.",
                              "example": true
                            },
                            "include_voicemail_transcription": {
                              "type": "boolean",
                              "description": "Whether to include the voicemail transcription.",
                              "example": false
                            },
                            "enable": {
                              "type": "boolean",
                              "description": "If enabled, the user will receive email notifications when there is a new voicemail from users, call queues, auto receptionists, or shared line groups.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset in the update call.",
                              "example": true
                            }
                          }
                        },
                        "shared_voicemail_notification_by_email": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "If enabled, the user will receive email notification when there is a new shared voicemail.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset in the update call.",
                              "example": true
                            }
                          }
                        },
                        "check_voicemails_over_phone": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset in the update call.",
                              "example": true
                            }
                          },
                          "description": "Whether the user can check voicemails of users and shared line groups over phone using a PIN code."
                        },
                        "audio_intercom": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset in the update call.",
                              "example": true
                            }
                          },
                          "description": "Whether the user can use audio intercom."
                        },
                        "peer_to_peer_media": {
                          "type": "object",
                          "properties": {
                            "enable": { "type": "boolean", "example": true },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "account",
                              "enum": ["account", "user_group", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset in the update call.",
                              "example": true
                            }
                          },
                          "description": "Whether to allow Zoom clients to send media directly to each other. Users or devices that have certain features like recording or monitoring enabled may not be able to use the peer to peer media sharing feature."
                        },
                        "e2e_encryption": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to switch their calls to `End-to-End Encryption`. If users have the `Automatic Call Recording` turned on, they will not be able to use the `End-to-End Encryption`.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "site",
                              "enum": ["account", "user_group", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                              "example": true
                            }
                          }
                        },
                        "outbound_calling": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to define calling rules to restrict the user or extension from calling specific countries, cities, or numbers.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                              "example": true
                            }
                          }
                        },
                        "outbound_sms": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to send and receive messages. You will still need to assign a valid calling plan and phone number to each user for them to send and receive messages.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                              "example": true
                            }
                          }
                        },
                        "allow_end_user_edit_call_handling": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to be able to edit their call handling settings on the web portal or enable call forwarding on the client.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                              "example": true
                            }
                          }
                        },
                        "voicemail_intent_based_prioritization": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to prioritize urgent voicemails based on predefined priority topics. Users need to have voicemail transcription policy enabled.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "site",
                              "enum": ["account", "user_group", "site"]
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                              "example": true
                            }
                          }
                        },
                        "voicemail_tasks": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Whether to allow users to extract tasks from English voicemail transcriptions. Users need to have voicemail transcription policy enabled.",
                              "example": true
                            },
                            "locked": {
                              "type": "boolean",
                              "description": "Whether the senior administrator allows users to modify the current settings.",
                              "example": true
                            },
                            "modified": {
                              "type": "boolean",
                              "description": "Whether the current settings have been modified. If modified, they can be reset (displayed when using the new policy framework).",
                              "example": true
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "site",
                              "enum": ["account", "user_group", "site"]
                            }
                          }
                        }
                      },
                      "description": "A list of the user's policies. Policies are exceptions to the user's calling plan restrictions."
                    },
                    "site_admin": {
                      "type": "boolean",
                      "description": "Whether the user is a [site admin](https://support.zoom.us/hc/en-us/articles/360042099012) or not.",
                      "example": true
                    },
                    "site_id": {
                      "type": "string",
                      "description": "The unique identifier of a [site](https://support.zoom.us/hc/en-us/articles/360020809672).",
                      "example": "8f71O6rWT8KFUGQmJIFAdQ"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the user.  \n \n`activate`: An active user.   \n \n`deactivate`: User has been deactivated from the Zoom Phone system.",
                      "example": "activate",
                      "enum": ["activate", "deactivate"]
                    }
                  },
                  "description": "The Zoom user profile."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n**Error Code:** `2001` <br>\n Account does not exist. <br>\n**Error Code:** `404` <br>\n Site does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read",
              "phone:read:admin",
              "phone:read:user",
              "phone:read:user:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read", "phone:read:admin"],
          "x-granular-scopes": ["phone:read:user", "phone:read:user:admin"]
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Update a user's profile",
        "description": "Updates a user's [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone) profile. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nTo add, update or remove the shared access members for voicemail and call recordings, use the [Add](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Users/operation/addUserSetting)/[Update](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Users/operation/updateUserSetting)/[Delete](https://marketplace.zoom.us/docs/api-reference/phone/methods#tag/Users/operation/deleteUserSetting) a user's shared access setting API. \n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write`,`phone:write:admin`\n\n**Granular Scopes:** `phone:update:user`,`phone:update:user:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateUserProfile",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "required": true,
            "schema": { "type": "string", "example": "DYHrdpjrS3uaOf7dPkkg8w" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "emergency_address_id": {
                    "type": "string",
                    "description": "The emergency address ID.",
                    "example": "CCc8zYT1SN60i7uDMzDbXA"
                  },
                  "extension_number": {
                    "type": "string",
                    "description": "The extension number of the user. The number must be complete (i.e. site number + short extension).",
                    "example": "1000123477"
                  },
                  "policy": {
                    "type": "object",
                    "properties": {
                      "ad_hoc_call_recording": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether the current extension can record and save calls to the cloud.",
                            "example": true
                          },
                          "recording_start_prompt": {
                            "type": "boolean",
                            "description": "Whether a prompt plays to call participants when the recording has started.",
                            "example": true
                          },
                          "recording_transcription": {
                            "type": "boolean",
                            "description": "Whether call recording transcription is enabled.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the user's ad hoc recording reset option will use the phone site's settings.",
                            "example": true
                          },
                          "play_recording_beep_tone": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean",
                                "description": "Whether to play a side tone beep for recorded users while recording. Only displayed when ad hoc call recording policy uses the new framework.",
                                "example": true
                              },
                              "play_beep_volume": {
                                "type": "integer",
                                "description": "The volume of the side tone beep. It displays only when `enable` is set to `true`.",
                                "example": 60,
                                "enum": [0, 20, 40, 60, 80, 100]
                              },
                              "play_beep_time_interval": {
                                "type": "integer",
                                "description": "The beep time interval in seconds. It displays only when `enable` is true.",
                                "example": 15,
                                "enum": [5, 10, 15, 20, 25, 30, 60, 120]
                              },
                              "play_beep_member": {
                                "type": "string",
                                "description": "The beep sides. It displays only when `enable` is true.",
                                "example": "allMember",
                                "enum": ["allMember", "recordingSide"]
                              }
                            }
                          }
                        },
                        "description": "A list of ad hoc call recording settings."
                      },
                      "auto_call_recording": {
                        "type": "object",
                        "properties": {
                          "allow_stop_resume_recording": {
                            "type": "boolean",
                            "description": "Whether the stop of and resuming of automatic call recording is enabled.",
                            "example": true
                          },
                          "disconnect_on_recording_failure": {
                            "type": "boolean",
                            "description": "Whether a call disconnects when there is an issue with automatic call recording and the call cannot reconnect after five seconds. This does **not** include emergency calls.",
                            "example": true
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Whether automatic call recording is enabled.",
                            "example": true
                          },
                          "recording_calls": {
                            "type": "string",
                            "description": "The type of calls automatically recorded: \n* `inbound` \n* `outbound` \n* `both`",
                            "example": "inbound",
                            "enum": ["inbound", "outbound", "both"]
                          },
                          "recording_explicit_consent": {
                            "type": "boolean",
                            "description": "Whether press 1 to provide recording consent is enabled.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` to operate inbound and outbound prompt separately.\n\n<b>Note:</b> \n* If customers opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent` and `inbound_audio_notification.recording_explicit_consent` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_explicit_consent` will be also updated.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent. When the field is updated, the `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` will be also updated.",
                            "example": true,
                            "deprecated": true
                          },
                          "recording_start_prompt": {
                            "type": "boolean",
                            "description": "Whether a prompt plays to call participants when the recording has started.\n\n<b>Deprecated:</b> This field will be deprecated in a future release. As an alternative, use the `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` to operate inbound and outbound prompt separately.\n\n<b>Note:</b> \n* if customers who opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt` and `inbound_audio_notification.recording_start_prompt` will remain consistent. When the field is updated, the `inbound_audio_notification.recording_start_prompt` will be also updated.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent. when the field is updated, the `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` will be also updated.",
                            "example": true,
                            "deprecated": true
                          },
                          "recording_transcription": {
                            "type": "boolean",
                            "description": "Whether call recording transcription is enabled.",
                            "example": true
                          },
                          "play_recording_beep_tone": {
                            "type": "object",
                            "properties": {
                              "enable": {
                                "type": "boolean",
                                "description": "Whether to play a side tone beep for recorded users while recording. Only displayed when auto call recording policy uses the new framework.",
                                "example": true
                              },
                              "play_beep_volume": {
                                "type": "integer",
                                "description": "The volume of the side tone beep. It displays only when `enable` is set to `true`.",
                                "example": 60,
                                "enum": [0, 20, 40, 60, 80, 100]
                              },
                              "play_beep_time_interval": {
                                "type": "integer",
                                "description": "The beep time interval in seconds. It displays only when `enable` is true.",
                                "example": 15,
                                "enum": [5, 10, 15, 20, 25, 30, 60, 120]
                              },
                              "play_beep_member": {
                                "type": "string",
                                "description": "The beep sides. It displays only when `enable` is true.",
                                "example": "allMember",
                                "enum": ["allMember", "recordingSide"]
                              }
                            }
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the user's automatic call recording reset option will use the phone site's settings.",
                            "example": true
                          },
                          "inbound_audio_notification": {
                            "type": "object",
                            "properties": {
                              "recording_start_prompt": {
                                "type": "boolean",
                                "description": "Whether a prompt plays to call participants when the recording has started for inbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* If customers who do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                                "example": true
                              },
                              "recording_explicit_consent": {
                                "type": "boolean",
                                "description": "Whether the **Press 1** option that provides recording consent for inbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent.\n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` with the same value.",
                                "example": true
                              }
                            }
                          },
                          "outbound_audio_notification": {
                            "type": "object",
                            "properties": {
                              "recording_start_prompt": {
                                "type": "boolean",
                                "description": "Whether a prompt plays to call participants when the recording has started for outbound call is enabled.\n\n<b>Note:</b> \n* If customers do not opt for an OP flag named `Enable Caller Based Consent Options`, the values of `recording_start_prompt`, `inbound_audio_notification.recording_start_prompt`, and `outbound_audio_notification.recording_start_prompt` always remain consistent.\n* If customers do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_start_prompt` and `outbound_audio_notification.recording_start_prompt` with the same value.",
                                "example": true
                              },
                              "recording_explicit_consent": {
                                "type": "boolean",
                                "description": "Whether the **Press 1** option that provides recording consent for outbound call is enabled.\n\n<b>Note:</b> \n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, the values of `recording_explicit_consent`, `inbound_audio_notification.recording_explicit_consent`, and `outbound_audio_notification.recording_explicit_consent` always remain consistent.\n* if customers who do not opt OP flag named `Enable Caller Based Consent Options`, update both `inbound_audio_notification.recording_explicit_consent` and `outbound_audio_notification.recording_explicit_consent` with the same value.",
                                "example": true
                              }
                            }
                          }
                        },
                        "description": "A list of the user's automatic call recording settings."
                      },
                      "call_overflow": {
                        "type": "object",
                        "properties": {
                          "call_overflow_type": {
                            "type": "integer",
                            "description": "`1` - Low restriction (external numbers not allowed)\n`2` - Medium restriction (external numbers and external contacts not allowed)\n `3` - High restriction (external numbers, external contacts and internal extensions without inbound automatic call recording not allowed)\n`4` - No restriction",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow user to forward calls to other numbers.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings will use the phone site's settings (applicable if the current settings are using the new policy framework).",
                            "example": true
                          }
                        }
                      },
                      "call_park": {
                        "type": "object",
                        "properties": {
                          "call_not_picked_up_action": {
                            "type": "integer",
                            "description": "The action when a parked call is not picked up. 100-Ring back to parker, 0-Forward to voicemail of the parker, 9-Disconnect, 50-Forward to another extension.",
                            "example": 50
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow calls placed on hold to be resumed from another location using a retrieval code.",
                            "example": true
                          },
                          "expiration_period": {
                            "type": "integer",
                            "description": "A time limit for parked calls, unit minutes. After the expiration period ends, the retrieval code is no longer valid and a new code will be generated.",
                            "example": 10,
                            "enum": [
                              1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 15, 20, 25, 30, 35,
                              40, 45, 50, 55, 60
                            ]
                          },
                          "forward_to_extension_id": {
                            "type": "string",
                            "description": "The extension ID.",
                            "example": "CcrEGgmeQem1uyJsuIRKwA"
                          }
                        }
                      },
                      "call_transferring": {
                        "type": "object",
                        "properties": {
                          "call_transferring_type": {
                            "type": "integer",
                            "description": "1-No restriction.\n2-Medium restriction (external numbers and external contacts not allowed).\n3-High restriction (external numbers, unrecorded external contacts, and internal extensions without inbound automatic recording not allowed).\n4-Low restriction (external numbers not allowed).",
                            "example": 2,
                            "enum": [1, 2, 3, 4]
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow the user to warm or blind transfer their calls. This does not apply to warm transfer on IP Phones except for Yealink.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings will use the phone site's settings (applicable if the current settings are using the new policy framework).",
                            "example": true
                          }
                        }
                      },
                      "delegation": {
                        "type": "boolean",
                        "description": "Whether the user can use [call delegation](https://support.zoom.us/hc/en-us/articles/360032881731-Setting-up-call-delegation-shared-lines-appearance-).",
                        "example": true
                      },
                      "elevate_to_meeting": {
                        "type": "boolean",
                        "description": "Whether the user can elevate their phone calls to a meeting.",
                        "example": true
                      },
                      "emergency_address_management": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow the current extension to manage its own emergency addresses.",
                            "example": true
                          },
                          "prompt_default_address": {
                            "type": "boolean",
                            "description": "Whether to prompt the user to set or confirm a default address.",
                            "example": true
                          }
                        }
                      },
                      "emergency_calls_to_psap": {
                        "type": "boolean",
                        "description": "When disabled, emergency calls placed by the user will not be delivered to the Public Safety Answering Point(PSAP), but still will be delivered to the Internal Safety Response Team based on the settings.",
                        "example": true
                      },
                      "forwarding_to_external_numbers": {
                        "type": "boolean",
                        "description": "Whether to allow call forwarding to external numbers. Use the `call_handling_forwarding_to_other_users` instead.",
                        "example": true,
                        "deprecated": true
                      },
                      "call_handling_forwarding_to_other_users": {
                        "type": "object",
                        "properties": {
                          "enable": { "type": "boolean", "example": true },
                          "call_forwarding_type": {
                            "type": "integer",
                            "description": "`1` - Low restriction (external numbers not allowed)\n`2` - Medium restriction (external numbers and external contacts not allowed)\n `3` - High restriction (external numbers, external contacts and internal extensions without inbound automatic call recording not allowed)\n`4` - No restriction",
                            "example": 1,
                            "enum": [1, 2, 3, 4]
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings will use the phone site's settings (applicable if the current settings are using the new policy framework).",
                            "example": true
                          }
                        },
                        "description": "Whether to allow user to forward calls to other numbers."
                      },
                      "hand_off_to_room": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users to send a call to a Zoom Room.",
                            "example": true
                          }
                        }
                      },
                      "international_calling": {
                        "type": "boolean",
                        "description": "Whether the current extension can make international calls outside of their calling plan.",
                        "example": true
                      },
                      "mobile_switch_to_carrier": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow the user to switch from a Zoom Phone to their native carrier.",
                            "example": true
                          }
                        }
                      },
                      "select_outbound_caller_id": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow the current extension to change the outbound caller ID when placing calls.",
                            "example": true
                          },
                          "allow_hide_outbound_caller_id": {
                            "type": "boolean",
                            "description": "Whether to allow the current extension to hide outbound caller id.",
                            "example": true
                          }
                        }
                      },
                      "sms": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether the user can send and receive messages.",
                            "example": true
                          },
                          "international_sms": {
                            "type": "boolean",
                            "description": "Whether the user can send and receive international messages.",
                            "example": true
                          },
                          "international_sms_countries": {
                            "maxItems": 100,
                            "type": "array",
                            "description": "The country which can send and receive international messages. The [country iso code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                            "items": { "type": "string", "example": "US" }
                          }
                        }
                      },
                      "voicemail": {
                        "type": "object",
                        "properties": {
                          "allow_delete": {
                            "type": "boolean",
                            "description": "This field allows the user to delete his own voicemail.",
                            "example": true
                          },
                          "allow_download": {
                            "type": "boolean",
                            "description": "This field allows the user to download his own voicemail.",
                            "example": true
                          },
                          "allow_transcription": {
                            "type": "boolean",
                            "description": "Whether to allow voicemail transcription.",
                            "example": true
                          },
                          "allow_videomail": {
                            "type": "boolean",
                            "description": "Whether to allow users to access, share, download or delete the videomail.",
                            "example": true
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Whether the current extension can access, receive, or share voicemail.",
                            "example": true
                          }
                        }
                      },
                      "voicemail_access_members": {
                        "maxItems": 50,
                        "uniqueItems": true,
                        "type": "array",
                        "description": "This field updates a voicemail setting. &lt;b&gt;Deprecated:&lt;/b&gt; we will completely deprecate this property in a future release. Use `Add/Update/Delete a user's shared access setting` API instead, with settingType 'voice-mail' to manage the voicemail access members.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "access_user_id": {
                              "type": "string",
                              "description": "The Zoom user ID to share the voicemail access permissions with.",
                              "example": "w0RChiauQeqRlv5fgxYULQ"
                            },
                            "allow_delete": {
                              "type": "boolean",
                              "description": "Whether the user has delete permissions. The default is **false**.",
                              "example": false
                            },
                            "allow_download": {
                              "type": "boolean",
                              "description": "Whether the user has download permissions. The default is **false**.",
                              "example": false
                            },
                            "allow_sharing": {
                              "type": "boolean",
                              "description": "Whether the user has permission to share. The default is **false**.",
                              "example": false
                            }
                          }
                        }
                      },
                      "zoom_phone_on_mobile": {
                        "type": "object",
                        "properties": {
                          "allow_calling_sms_mms": {
                            "type": "boolean",
                            "description": "Whether to allow Calling and SMS/MMS functions on Mobile.",
                            "example": true
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow user to use Zoom Phone on mobile clients (iOS, iPad OS and Android).",
                            "example": true
                          }
                        }
                      },
                      "personal_audio_library": {
                        "type": "object",
                        "properties": {
                          "allow_music_on_hold_customization": {
                            "type": "boolean",
                            "description": "Whether to allow the user to customize allow music on hold.",
                            "example": true
                          },
                          "allow_voicemail_and_message_greeting_customization": {
                            "type": "boolean",
                            "description": "Whether to allow the user to customize voicemail and message greeting.",
                            "example": true
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users to change their own audio library.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the user's personal audio library reset option will use the phone site's settings.",
                            "example": true
                          }
                        }
                      },
                      "voicemail_transcription": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow the user to access transcriptions of voicemails`.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the user's voicemail transcription reset option will use the phone site's settings.",
                            "example": true
                          }
                        }
                      },
                      "voicemail_notification_by_email": {
                        "type": "object",
                        "properties": {
                          "include_voicemail_file": {
                            "type": "boolean",
                            "description": "Whether to include voicemail file.",
                            "example": true
                          },
                          "include_voicemail_transcription": {
                            "type": "boolean",
                            "description": "Whether to include voicemail transcription.",
                            "example": true
                          },
                          "enable": {
                            "type": "boolean",
                            "description": "If enabled, user will receive email notifications when there is a new voicemail from users, call queues, auto receptionists or shared line groups.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the user's voicemail notification by email reset option will use the phone site's settings.",
                            "example": true
                          }
                        }
                      },
                      "shared_voicemail_notification_by_email": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "If enabled, the user will receive email notification when there is a new shared voicemail.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the user's share voicemail notification by email reset option will use the phone site's settings.",
                            "example": true
                          }
                        }
                      },
                      "check_voicemails_over_phone": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "If enabled, user can check voicemails over phone using a PIN code.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the user's check voicemail over phone reset option will use the phone site's settings.",
                            "example": true
                          }
                        }
                      },
                      "audio_intercom": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "If enabled, user can use audio intercom.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the user's audio intercom reset option will use the phone site's settings.",
                            "example": true
                          }
                        }
                      },
                      "e2e_encryption": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Whether to allow users to switch their calls to `End-to-End Encryption`. If users have the `Automatic Call Recording` turned on, they will not be able to use the `End-to-End Encryption`.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Whether the current settings will use the phone account's settings (applicable if the current settings are using the new policy framework).",
                            "example": true
                          }
                        }
                      }
                    },
                    "description": "A list of the user's policies."
                  },
                  "site_id": {
                    "type": "string",
                    "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672) where the user should be moved or assigned. ",
                    "example": "8f71O6rWT8KFUGQmJIFAdQ"
                  },
                  "template_id": {
                    "type": "string",
                    "description": "The settings template ID. If the `site_id` field is set, look for the template site with the value of the `site_id` field. The template ID has precedence and the policy will be ignored even if the `policy` field is set.",
                    "example": "Dv4YdINdTk+Z5RToadh5ug=="
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`\n\nProfile updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `13800` <br>\n You do not enable OP flag named 'Enable Caller Based Consent Options', use the same value to update 'inbound_audio_notification.recording_start_prompt' and 'outbound_audio_notification.recording_start_prompt'. <br>\n**Error Code:** `13800` <br>\n You do not enable OP flag named 'Enable Caller Based Consent Options', use the same value to update 'inbound_audio_notification.recording_explicit_consent' and 'outbound_audio_notification.recording_explicit_consent'. <br>\n**Error Code:** `300` <br>\n Invalid user id. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n**Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write",
              "phone:write:admin",
              "phone:update:user",
              "phone:update:user:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write", "phone:write:admin"],
          "x-granular-scopes": ["phone:update:user", "phone:update:user:admin"]
        }
      }
    },
    "/phone/users/{userId}/calling_plans": {
      "put": {
        "tags": ["Users"],
        "summary": "Update user's calling plan",
        "description": "Switches [calling plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone) user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter. \n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n\n\n**Scopes:** `phone:write:admin`,`phone:write`\n\n**Granular Scopes:** `phone:update:calling_plan`,`phone:update:calling_plan:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateCallingPlan",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "fWOgOALdT1ei4vjXK-QYsA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "required": ["source_type", "target_type"],
                "type": "object",
                "properties": {
                  "source_type": {
                    "type": "integer",
                    "description": "The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan.",
                    "example": 100
                  },
                  "target_type": {
                    "type": "integer",
                    "description": " The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan.",
                    "example": 200
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nCalling plan updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nUser did not subscribe to the source plan.\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser does not exist:{userId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone:update:calling_plan",
              "phone:update:calling_plan:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin", "phone:write"],
          "x-granular-scopes": [
            "phone:update:calling_plan",
            "phone:update:calling_plan:admin"
          ]
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Assign calling plan to a user",
        "description": "Assigns a [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) to a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051-Zoom-Phone) user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write`,`phone:write:admin`\n\n**Granular Scopes:** `phone:write:calling_plan`,`phone:write:calling_plan:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "assignCallingPlan",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "fWOgOALdT1ei4vjXK-QYsA" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "calling_plans": {
                    "maxItems": 150,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "integer",
                          "description": "The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of calling plan.",
                          "example": 100
                        },
                        "billing_account_id": {
                          "type": "string",
                          "description": "The billing account ID. If the user is located in India, this field is required.",
                          "example": "3WWAEiEjTj2IQuyDiKMd_A"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "**HTTP Status code:** `200`  \n \nCalling plan assigned successfully.",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id.\r\nInvalid field. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist:{userId}. <br>\n**Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write",
              "phone:write:admin",
              "phone:write:calling_plan",
              "phone:write:calling_plan:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write", "phone:write:admin"],
          "x-granular-scopes": [
            "phone:write:calling_plan",
            "phone:write:calling_plan:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/calling_plans/{planType}": {
      "delete": {
        "tags": ["Users"],
        "summary": "Unassign user's calling plan",
        "description": "Unassigns a [Zoom Phone](https://support.zoom.us/hc/en-us/categories/360001370051) user's [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans). For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write`,`phone:write:admin`\n\n**Granular Scopes:** `phone:delete:users_calling_plan`,`phone:delete:users_calling_plan:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "unassignCallingPlan",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The ID of the user.",
            "required": true,
            "schema": { "type": "string", "example": "fWOgOALdT1ei4vjXK-QYsA" }
          },
          {
            "name": "planType",
            "in": "path",
            "description": "The type of plan. Refer to the [Plan Number section](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans).",
            "required": true,
            "schema": { "type": "string", "example": "100" }
          },
          {
            "name": "billing_account_id",
            "in": "query",
            "description": "The billing account ID. If the user is located in India, the parameter is required.",
            "required": false,
            "schema": { "type": "string", "example": "3WWAEiEjTj2IQuyDiKMd_A" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nCalling plan unassigned successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id. <br>\n**Error Code:** `400` <br>\n Invalid field. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist:{userId}. <br>\n**Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write",
              "phone:write:admin",
              "phone:delete:users_calling_plan",
              "phone:delete:users_calling_plan:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write", "phone:write:admin"],
          "x-granular-scopes": [
            "phone:delete:users_calling_plan",
            "phone:delete:users_calling_plan:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/outbound_caller_id/customized_numbers": {
      "get": {
        "tags": ["Users"],
        "summary": "List users' phone numbers for a customized outbound caller ID",
        "description": "Retrieves phone numbers that can be the `user-level` customized outbound caller ID. \n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license.\n\n\n\n**Scopes:** `phone:read:admin`,`phone:read`\n\n**Granular Scopes:** `phone:read:list_user_customized_number`,`phone:read:list_user_customized_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "listUserCustomizeOutboundCallerNumbers",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique identifier of the user.",
            "required": true,
            "schema": { "type": "string", "example": "w0RChiauQeqRlv5fgxYULQ" }
          },
          {
            "name": "selected",
            "in": "query",
            "description": "The status of the phone numbers.  \n `true`- Numbers already added to the custom list.   \n `false`- Numbers not yet added to the custom list",
            "required": false,
            "schema": { "type": "boolean", "example": true }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "This field filters phone numbers that belong to the site.",
            "required": false,
            "schema": { "type": "string", "example": "SQv52YtkRLC2dwrDdYtGsA" }
          },
          {
            "name": "extension_type",
            "in": "query",
            "description": "The type of extension where the phone number belongs.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "callQueue",
              "enum": ["autoReceptionist", "callQueue", "sharedLineGroup"]
            }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "A search keyword for phone or extension numbers.",
            "required": false,
            "schema": { "type": "string", "example": "408" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token is used to paginate through large result sets. A next page token will be returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nCustomized numbers for outbound caller ID listed successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "customize_numbers": {
                      "maxItems": 100,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "customize_id": {
                            "type": "string",
                            "description": "The customization ID.",
                            "example": "8_RkKw9OQ42oYsXqJJjs4A"
                          },
                          "phone_number_id": {
                            "type": "string",
                            "description": "The ID of the phone number.",
                            "example": "55JUZPwERHuGttd_j4qBsQ"
                          },
                          "phone_number": {
                            "type": "string",
                            "description": "The phone number in E164 format.",
                            "example": "+12055437350"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "The name of the phone number.",
                            "example": "test abc"
                          },
                          "incoming": {
                            "type": "boolean",
                            "description": "Whether the incoming policy is enabled for the phone number.",
                            "example": true
                          },
                          "outgoing": {
                            "type": "boolean",
                            "description": "Whether the outgoing policy is enabled for the phone number.",
                            "example": true
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "The extension ID.",
                            "example": "HaSokHMCSeK8taMdv2vnXQ"
                          },
                          "extension_type": {
                            "type": "string",
                            "description": "The extension type.",
                            "example": "callQueue"
                          },
                          "extension_number": {
                            "type": "string",
                            "description": "The extension number.",
                            "example": "10001"
                          },
                          "extension_name": {
                            "type": "string",
                            "description": "The extension name.",
                            "example": "SJ CQ"
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                                "example": "8f71O6rWT8KFUGQmJIFAdQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the site.",
                                "example": "testSite"
                              }
                            }
                          }
                        }
                      }
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token is returned whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The number of records returned within a single API call for each page.",
                      "example": 30
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records returned.",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `400` <br>\n The next page token is invalid or expired. <br>\n**Error Code:** `300` <br>\n Invalid user id. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n**Error Code:** `1001` <br>\n User does not exist:{userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read",
              "phone:read:list_user_customized_number",
              "phone:read:list_user_customized_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin", "phone:read"],
          "x-granular-scopes": [
            "phone:read:list_user_customized_number",
            "phone:read:list_user_customized_number:admin"
          ]
        }
      },
      "post": {
        "tags": ["Users"],
        "summary": "Add phone numbers for users' customized outbound caller ID",
        "description": "Adds users' customized outbound caller ID phone numbers. \n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license.\n\n\n\n**Scopes:** `phone:write:admin`,`phone:write`\n\n**Granular Scopes:** `phone:write:user_customized_number`,`phone:write:user_customized_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "addUserOutboundCallerNumbers",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique identifier of the user.",
            "required": true,
            "schema": { "type": "string", "example": "w0RChiauQeqRlv5fgxYULQ" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone_number_ids": {
                    "maxItems": 30,
                    "type": "array",
                    "description": "The phone number IDs.",
                    "items": {
                      "type": "string",
                      "example": "55JUZPwERHuGttd_j4qBsQ"
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201` **Created**  \n \nCustomized caller ID numbers added successfully.  "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id.\r\nAccount level settings cannot be managed until disable multiple sites.\r\nSite not exist. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n**Error Code:** `1001` <br>\n User does not exist:{userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone:write:user_customized_number",
              "phone:write:user_customized_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin", "phone:write"],
          "x-granular-scopes": [
            "phone:write:user_customized_number",
            "phone:write:user_customized_number:admin"
          ]
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Remove users' customized outbound caller ID phone numbers",
        "description": "Removes the users' customized outbound caller ID phone numbers. \n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license.\n\n\n\n**Scopes:** `phone:write:admin`,`phone:write`\n\n**Granular Scopes:** `phone:delete:user_customized_number`,`phone:delete:user_customized_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteUserOutboundCallerNumbers",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique identifier of the user.",
            "required": true,
            "schema": { "type": "string", "example": "w0RChiauQeqRlv5fgxYULQ" }
          },
          {
            "name": "customize_ids",
            "in": "query",
            "description": "The customization IDs.",
            "required": false,
            "schema": {
              "maxItems": 30,
              "type": "array",
              "items": { "type": "string", "example": "8_RkKw9OQ42oYsXqJJjs4A" }
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **Created**  \n \nCustomized numbers have been deleted successfully.  "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nValidation Failed. Site does not exist.<br>\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone:delete:user_customized_number",
              "phone:delete:user_customized_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin", "phone:write"],
          "x-granular-scopes": [
            "phone:delete:user_customized_number",
            "phone:delete:user_customized_number:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/settings": {
      "get": {
        "tags": ["Users"],
        "summary": "Get a user's profile settings",
        "description": "Returns the Zoom Phone [profile settings](https://support.zoom.us/hc/en-us/articles/360021325712-Configuring-Settings) of a user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read`,`phone:read:admin`\n\n**Granular Scopes:** `phone:read:user_setting:admin`,`phone:read:user_setting`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "phoneUserSettings",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "required": true,
            "schema": { "type": "string", "example": "DYHrdpjrS3uaOf7dPkkg8w" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`\n\nUser Setting object returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "area_code": {
                      "type": "string",
                      "description": "The area code of user.",
                      "example": "01"
                    },
                    "audio_prompt_language": {
                      "type": "string",
                      "description": "The audio prompt language code.  \n  American English: `en-US`  \n \nBritish English: `en-GB`  \n \nEspa&ntilde;ol americano: `es-US`  \n \nFran&ccedil;ais canadien: `fr-CA`  \n \nDansk: `da-DK`  \n \nDeutsch: `de-DE`  \n \nEspa&ntilde;ol: `es-ES`  \n \nFran&ccedil;ais: `fr-FR`  \n \nItaliano: `it-IT`  \n \nNederlands: `nl-NL`  \n \nPortugues portugal: `pt-PT`  \n \nJapanese: `ja-JP`  \n \nKorean: `ko-KO`  \n \nPortugues brasil: `pt-BR`  \n \nChinese: `zh-CN`  \n \nTaiwanese: `zh-TW`  \n ",
                      "example": "en-US"
                    },
                    "company_number": {
                      "type": "string",
                      "description": "The [company number](https://support.zoom.us/hc/en-us/articles/360028553691) can be used by external callers to reach your phone users (by dialing the main company number and the user's extension). It can also be used by phone users as their caller ID when making calls.",
                      "example": "+12058945640"
                    },
                    "country": {
                      "type": "object",
                      "properties": {
                        "code": {
                          "type": "string",
                          "description": "The two lettered country [code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries).",
                          "example": "US"
                        },
                        "country_code": {
                          "type": "string",
                          "description": "The country's calling code.",
                          "example": "1"
                        },
                        "name": {
                          "type": "string",
                          "description": "The site's country name.",
                          "example": "United States"
                        }
                      },
                      "description": "The site's country."
                    },
                    "delegation": {
                      "type": "object",
                      "properties": {
                        "assistants": {
                          "maxItems": 15,
                          "type": "array",
                          "description": "The delegation assistants.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "display_name": {
                                "type": "string",
                                "description": "The display name.",
                                "example": "test user delegation"
                              },
                              "extension_id": {
                                "type": "string",
                                "description": "The extension's ID.",
                                "example": "CcrEGgmeQem1uyJsuIRKwA"
                              },
                              "extension_number": {
                                "type": "integer",
                                "description": "The extension's number.",
                                "format": "int64",
                                "example": 1000123477
                              },
                              "extension_type": {
                                "type": "string",
                                "description": "The extension's type: `user` or `commonArea`.",
                                "example": "user"
                              },
                              "id": {
                                "type": "string",
                                "description": "The user or common area ID.",
                                "example": "fWOgOALdT1ei4vjXK-QYsA"
                              }
                            }
                          }
                        },
                        "privacy": {
                          "type": "boolean",
                          "description": "Whether to allow members to prevent others from picking up a held call, and listening, whispering, barging, or taking over a call if it's configured.",
                          "example": true
                        },
                        "privileges": {
                          "maxItems": 10,
                          "type": "array",
                          "description": "The delegation privileges. 1-Place Calls, 2-Answer Calls, 3- Pick Up Hold Calls.",
                          "items": { "type": "integer", "example": 2 },
                          "enum": [1, 2, 3]
                        },
                        "locked": {
                          "type": "boolean",
                          "description": "Whether to allow users to access to the feature of delegation.",
                          "example": true
                        }
                      },
                      "description": "The user delegation."
                    },
                    "desk_phone": {
                      "type": "object",
                      "properties": {
                        "devices": {
                          "maxItems": 10,
                          "type": "array",
                          "description": "The information about the desk phones.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "device_type": {
                                "type": "string",
                                "description": "The device type, including the manufacturer and the model name.",
                                "example": "Yealink t42s"
                              },
                              "display_name": {
                                "type": "string",
                                "description": "The display name of the device.",
                                "example": "ApiTA_Device_2020_12_14_22_59_31_749"
                              },
                              "id": {
                                "type": "string",
                                "description": "The device ID.",
                                "example": "GHFnf5WQe-H-_r0Wwx9iQ"
                              },
                              "policy": {
                                "type": "object",
                                "properties": {
                                  "call_control": {
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "description": "This field allows the call control feature to the current device. Configure the desk phone devices to enable call control, which allows users to perform desk phone's call control actions from the Zoom desktop client, including making and accepting calls. \nOptions include: \n* `unsupported` \n* `on` \n* `off`",
                                        "example": "off",
                                        "enum": ["unsupported", "on", "off"]
                                      }
                                    }
                                  },
                                  "hot_desking": {
                                    "type": "object",
                                    "properties": {
                                      "status": {
                                        "type": "string",
                                        "description": "This field allows the hot desking feature to the current device. It lets the guest user sign in to the desk phone. You can't use the desk phone until the guest user signs out. \nOptions include:\n* `unsupported` \n* `on` \n* `off`",
                                        "example": "off",
                                        "enum": ["unsupported", "on", "off"]
                                      }
                                    }
                                  }
                                },
                                "description": "The device policy."
                              },
                              "status": {
                                "type": "string",
                                "description": "The status of the device: `online` or `offline`.",
                                "example": "online",
                                "enum": ["online", "offline"]
                              },
                              "mac_address": {
                                "type": "string",
                                "description": "The MAC address or serial number of the device.",
                                "example": "203a07240534"
                              },
                              "private_ip": {
                                "type": "string",
                                "description": "The private IP of the registered device.",
                                "example": "192.168.10.13"
                              },
                              "public_ip": {
                                "type": "string",
                                "description": "The public IP of the registered device.",
                                "example": "220.148.231.126"
                              }
                            }
                          }
                        },
                        "keys_positions": {
                          "type": "object",
                          "properties": {
                            "primary_number": {
                              "type": "string",
                              "description": "The primary number of the user.",
                              "example": "+123456789"
                            }
                          }
                        },
                        "phone_screen_lock": {
                          "type": "boolean",
                          "description": "After enabling this option, you can lock your desk phone screen. A PIN code is required to unlock your phone. This feature is not supported on some devices. See [Supported Device Types](https://support.zoom.us/hc/en-us/articles/360029698771) for more information.",
                          "example": true
                        },
                        "pin_code": {
                          "type": "string",
                          "description": "The PIN code to be used to access voicemail, hot desking, and unlocking desk phones.",
                          "example": "0995"
                        }
                      },
                      "description": "This field contains information on phones or devices provisioned for the user."
                    },
                    "extension_number": {
                      "type": "integer",
                      "description": "The owner's extension number.",
                      "format": "int64",
                      "example": 1000001036
                    },
                    "music_on_hold_id": {
                      "type": "string",
                      "description": "The music on hold ID. \n\nOptions: empty char - default and `0` - disable",
                      "example": "NOZ98sQvTimYi0XxL_x-iQ"
                    },
                    "outbound_caller": {
                      "type": "object",
                      "properties": {
                        "number": {
                          "type": "string",
                          "description": "The outbound calling number.",
                          "example": "+123456789"
                        }
                      },
                      "description": "The information about the outbound caller."
                    },
                    "outbound_caller_ids": {
                      "maxItems": 1000,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "is_default": {
                            "type": "boolean",
                            "description": "Whether the outbound caller ID is the default or not. If `true`, the outbound caller ID is the default caller ID.",
                            "example": true
                          },
                          "name": {
                            "type": "string",
                            "description": "The outbound caller's name.",
                            "example": "Outbound caller name."
                          },
                          "number": {
                            "type": "string",
                            "description": "The outbound caller's number.",
                            "example": "+2097392651"
                          }
                        }
                      }
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the user.",
                      "example": "Active",
                      "enum": ["Active", "Inactive"],
                      "x-enum-descriptions": [
                        "Active status",
                        "Inactive status"
                      ]
                    },
                    "voice_mail": {
                      "maxItems": 50,
                      "type": "array",
                      "description": "The shared voicemail access member list. &lt;b&gt;Deprecated&lt;/b&gt;, we will completely deprecate this property in a future release. Instead use policy.voicemail_access_members property from 'Get a user's profile' API.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "access_user_id": {
                            "type": "string",
                            "description": "The user can access voicemail messages for the extension.",
                            "example": "DnEopNmXQEGU2uvvzjgojw"
                          },
                          "delete": {
                            "type": "boolean",
                            "description": "Whether the user has delete permissions. The default is **false**.",
                            "example": true
                          },
                          "download": {
                            "type": "boolean",
                            "description": "Whether the user has download permissions. The default is **false**.",
                            "example": true
                          },
                          "shared_id": {
                            "type": "string",
                            "description": "The unique identifier of the shared voicemail that the user can access.",
                            "example": "--e8ugg0SeS-9clgrDkn2w"
                          }
                        }
                      }
                    },
                    "intercom": {
                      "type": "object",
                      "properties": {
                        "audio_intercoms": {
                          "maxItems": 300,
                          "type": "array",
                          "description": "The extensions invited into the intercom relationship.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "extension_id": {
                                "type": "string",
                                "description": "The extension's ID.",
                                "example": "52OdSKGSSS-EOyJwQncFvA"
                              },
                              "extension_number": {
                                "type": "string",
                                "description": "The extension's number.",
                                "example": "1000001004"
                              },
                              "extension_type": {
                                "type": "string",
                                "description": "The extension's type: `user` or `commonArea`.",
                                "example": "user"
                              },
                              "display_name": {
                                "type": "string",
                                "description": "The display's name.",
                                "example": "test name"
                              },
                              "status": {
                                "type": "string",
                                "description": "The status of the extension: `active` or `pending`.",
                                "example": "pending",
                                "enum": ["active", "pending"]
                              },
                              "device_id": {
                                "type": "string",
                                "description": "The device ID. Applicable when the extension level is `commonArea`.",
                                "example": "GHFnf5WQe-H-_r0Wwx9iQ"
                              },
                              "device_status": {
                                "type": "string",
                                "description": "The status of the device. Applicable when the extension level is `commonArea`.",
                                "example": "offline",
                                "enum": ["online", "offline", "no device"]
                              }
                            }
                          }
                        },
                        "device": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The device's ID.",
                              "example": "JHwOJZ_PRICfVhQlL0x_ww"
                            },
                            "name": {
                              "type": "string",
                              "description": "The device's name.",
                              "example": "Sita's Phone"
                            }
                          },
                          "description": "The selected default device to which all your intercom calls will be routed."
                        }
                      }
                    },
                    "auto_call_recording_access_members": {
                      "maxItems": 50,
                      "uniqueItems": true,
                      "type": "array",
                      "description": "The shared automatic call recording access member list. &lt;b&gt;Deprecated&lt;/b&gt;, we will completely deprecate this property in a future release. Instead use policy.auto_call_recording_access_members property from 'Get a user's profile' API.",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "access_user_id": {
                                "type": "string",
                                "description": "The Zoom user ID to share the access permissions with.",
                                "example": "w0RChiauQeqRlv5fgxYULQ"
                              },
                              "allow_delete": {
                                "type": "boolean",
                                "description": "This field specifies whether the user has delete permissions. The default is **false**.",
                                "example": false
                              },
                              "allow_download": {
                                "type": "boolean",
                                "description": "This field specifies whether the user has download permissions. The default is **false**.",
                                "example": false
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "shared_id": {
                                "type": "string",
                                "description": "The unique identifier of the shared sub-setting that the user can access.",
                                "example": "--e8ugg0SeS-9clgrDkn2w"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "ad_hoc_call_recording_access_members": {
                      "maxItems": 50,
                      "uniqueItems": true,
                      "type": "array",
                      "description": "The shared ad hoc call recording access member list. &lt;b&gt;Deprecated&lt;/b&gt;, we will completely deprecate this property in a future release. Instead use policy.ad_hoc_call_recording_access_members property from 'Get a user's profile' API.",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "access_user_id": {
                                "type": "string",
                                "description": "The Zoom user ID to share the access permissions with.",
                                "example": "w0RChiauQeqRlv5fgxYULQ"
                              },
                              "allow_delete": {
                                "type": "boolean",
                                "description": "This field specifies whether the user has delete permissions. The default is **false**.",
                                "example": false
                              },
                              "allow_download": {
                                "type": "boolean",
                                "description": "This field specifies whether the user has download permissions. The default is **false**.",
                                "example": false
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "shared_id": {
                                "type": "string",
                                "description": "The unique identifier of the shared sub-setting that the user can access.",
                                "example": "--e8ugg0SeS-9clgrDkn2w"
                              }
                            }
                          }
                        ]
                      }
                    }
                  },
                  "description": "The phone user setting."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n**Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read",
              "phone:read:admin",
              "phone:read:user_setting:admin",
              "phone:read:user_setting"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read", "phone:read:admin"],
          "x-granular-scopes": [
            "phone:read:user_setting:admin",
            "phone:read:user_setting"
          ]
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Update a user's profile settings",
        "description": "Updates the Zoom Phone [profile settings](https://support.zoom.us/hc/en-us/articles/360021325712-Configuring-Settings) of a user. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write`,`phone:write:admin`\n\n**Granular Scopes:** `phone:update:user_setting`,`phone:update:user_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateUserSettings",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "required": true,
            "schema": { "type": "string", "example": "DYHrdpjrS3uaOf7dPkkg8w" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "area_code": {
                    "type": "string",
                    "description": "The user's area code.",
                    "example": "01"
                  },
                  "audio_prompt_language": {
                    "type": "string",
                    "description": "The audio prompt language code.  \n  American English: `en-US`  \n \nBritish English: `en-GB`  \n \nEspa&ntilde;ol americano: `es-US`  \n \nFran&ccedil;ais canadien: `fr-CA`  \n \nDansk: `da-DK`  \n \nDeutsch: `de-DE`  \n \nEspa&ntilde;ol: `es-ES`  \n \nFran&ccedil;ais: `fr-FR`  \n \nItaliano: `it-IT`  \n \nNederlands: `nl-NL`  \n \nPortugues portugal: `pt-PT`  \n \nJapanese: `ja-JP`  \n \nKorean: `ko-KO`  \n \nPortugues brasil: `pt-BR`  \n \nChinese: `zh-CN`  \n \nTaiwanese: `zh-TW`  \n ",
                    "example": "en-US"
                  },
                  "country_iso_code": {
                    "type": "string",
                    "description": "The [country ISO code](https://marketplace.zoom.us/docs/api-reference/other-references/abbreviation-lists#countries)",
                    "example": "US"
                  },
                  "music_on_hold_id": {
                    "type": "string",
                    "description": "The music on hold prompt ID. \n\nOptions: empty char - default and `0` - disable",
                    "example": "NOZ98sQvTimYi0XxL_x-iQ"
                  },
                  "outbound_caller_id": {
                    "type": "string",
                    "description": "The user's outbound caller ID phone number, in E164 format. If you hide the caller ID, set the value to an `empty string`",
                    "example": "+123123123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nUser Setting updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id. <br>\n**Error Code:** `400` <br>\n Outbound caller id has been locked.\r\nDo not allow hiding outbound caller id.\r\nInvalid outbound caller ID. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write",
              "phone:write:admin",
              "phone:update:user_setting",
              "phone:update:user_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write", "phone:write:admin"],
          "x-granular-scopes": [
            "phone:update:user_setting",
            "phone:update:user_setting:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/settings/{settingType}": {
      "post": {
        "tags": ["Users"],
        "summary": "Add a user's shared access setting",
        "description": "Adds the user setting according to the setting type, specifically for delegation, intercom and shared access for voicemail, and call recordings. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nTo see the shared access settings in the Zoom web portal, go to **Admin &gt; Phone System Management &gt; Users &amp; Rooms** . Choose **Users** and select **User Policy**. Go to **Voicemail, Automatic Call Recording and Ad Hoc Call Recording**.\n\n To view the delegation and intercom setting in your Zoom web portal, navigate to **Admin &gt; Phone System Management &gt; Users &amp; Rooms**. Choose the **Users** tab and select **User Settings**\n\n **Prerequisites:** \n* A Business or Enterprise account\n\n**Scopes:** `phone:write:admin`,`phone:write`\n\n**Granular Scopes:** `phone:write:shared_setting`,`phone:write:shared_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "addUserSetting",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique identifier of the user.",
            "required": true,
            "schema": { "type": "string", "example": "w0RChiauQeqRlv5fgxYULQ" }
          },
          {
            "name": "settingType",
            "in": "path",
            "description": "This field corresponds to the setting item you wish to modify. Allowed values: `voice_mail`, `delegation`, `desk_phone`, `intercom`, `auto_call_recording`,`ad_hoc_call_recording`",
            "required": true,
            "schema": { "type": "string", "example": "voice_mail" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delegation_assistant_extension_id": {
                    "type": "string",
                    "description": "The extension ID of the delegation assistant: `user` or `common area`.",
                    "example": "CcrEGgmeQem1uyJsuIRKwA"
                  },
                  "device_id": {
                    "type": "string",
                    "description": "The device ID.",
                    "example": "-GHFnf5WQe-H-_r0Wwx9iQ"
                  },
                  "voice_mail": {
                    "type": "object",
                    "properties": {
                      "access_user_id": {
                        "type": "string",
                        "description": "The Zoom user ID to share the voicemail access permissions with.",
                        "example": "w0RChiauQeqRlv5fgxYULQ"
                      },
                      "delete": {
                        "type": "boolean",
                        "description": "Whether the user has delete permissions. The default is **false**.",
                        "example": true
                      },
                      "download": {
                        "type": "boolean",
                        "description": "Whether the user has download permissions. The default is **false**.",
                        "example": true
                      }
                    },
                    "description": "This field allows you to update the voicemail setting. &lt;b&gt;Deprecated:&lt;/b&gt; we will completely deprecate this property in a future release. Use property `voicemail_access_members` instead. "
                  },
                  "voicemail_access_members": {
                    "maxItems": 10,
                    "uniqueItems": true,
                    "type": "array",
                    "description": "The shared voicemail access member list.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "access_user_id": {
                          "type": "string",
                          "description": "The Zoom user ID to share the voicemail access permissions with.",
                          "example": "w0RChiauQeqRlv5fgxYULQ"
                        },
                        "allow_delete": {
                          "type": "boolean",
                          "description": "Whether the user has delete permissions. The default is **false**.",
                          "example": false
                        },
                        "allow_download": {
                          "type": "boolean",
                          "description": "Whether the user has download permissions. The default is **false**.",
                          "example": false
                        },
                        "allow_sharing": {
                          "type": "boolean",
                          "description": "Whether the user has permission to share. The default is **false**.",
                          "example": false
                        }
                      }
                    }
                  },
                  "auto_call_recording_access_members": {
                    "maxItems": 20,
                    "uniqueItems": true,
                    "type": "array",
                    "description": "The shared automatic call recording access member list.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "access_user_id": {
                          "type": "string",
                          "description": "The Zoom user ID to share access permissions.",
                          "example": "w0RChiauQeqRlv5fgxYULQ"
                        },
                        "allow_delete": {
                          "type": "boolean",
                          "description": "Whether the user has delete permissions. The default is **false**.",
                          "example": false
                        },
                        "allow_download": {
                          "type": "boolean",
                          "description": "Whether the user has download permissions. The default is **false**.",
                          "example": false
                        }
                      }
                    }
                  },
                  "ad_hoc_call_recording_access_members": {
                    "maxItems": 20,
                    "uniqueItems": true,
                    "type": "array",
                    "description": "The shared ad hoc call recording access member list.",
                    "items": {
                      "type": "object",
                      "properties": {
                        "access_user_id": {
                          "type": "string",
                          "description": "The Zoom user ID to share access permissions.",
                          "example": "w0RChiauQeqRlv5fgxYULQ"
                        },
                        "allow_delete": {
                          "type": "boolean",
                          "description": "Whether the user has delete permissions. The default is **false**.",
                          "example": false
                        },
                        "allow_download": {
                          "type": "boolean",
                          "description": "Whether the user has download permissions. The default is **false**.",
                          "example": false
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code** `201`   \n \nCreated Successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "delegation": {
                      "type": "object",
                      "properties": {
                        "assistants": {
                          "maxItems": 15,
                          "type": "array",
                          "description": "The delegation assistants.",
                          "items": {
                            "type": "object",
                            "properties": {
                              "display_name": {
                                "type": "string",
                                "description": "The display name.",
                                "example": "test delegation assistants"
                              },
                              "extension_id": {
                                "type": "string",
                                "description": "The extension ID.",
                                "example": "CcrEGgmeQem1uyJsuIRKwA"
                              },
                              "extension_number": {
                                "type": "integer",
                                "description": "The extension number.",
                                "format": "int64",
                                "example": 1000001036
                              },
                              "extension_type": {
                                "type": "string",
                                "description": "The extension type: `user` or `commonArea`.",
                                "example": "user"
                              },
                              "id": {
                                "type": "string",
                                "description": "The user or common area ID.",
                                "example": "w0RChiauQeqRlv5fgxYULQ"
                              }
                            }
                          }
                        },
                        "privacy": {
                          "type": "boolean",
                          "description": "Whether to allow members to prevent others from picking up a held call, and listening, whispering, barging, or taking over a call if it's configured.",
                          "example": true
                        },
                        "privileges": {
                          "maxItems": 10,
                          "type": "array",
                          "description": "The delegation privileges. 1-Place Calls, 2-Answer Calls, 3- Pick Up Hold Calls.",
                          "items": { "type": "integer", "example": 2 },
                          "enum": [1, 2, 3]
                        }
                      },
                      "description": "The user delegation."
                    },
                    "voice_mail": {
                      "type": "object",
                      "properties": {
                        "access_user_id": {
                          "type": "string",
                          "description": "The user that is allowed to access voicemail messages for the extension.",
                          "example": "w0RChiauQeqRlv5fgxYULQ"
                        },
                        "delete": {
                          "type": "boolean",
                          "description": "Whether the user has delete permissions. The default is **false**.",
                          "example": true
                        },
                        "download": {
                          "type": "boolean",
                          "description": "Whether the user has download permissions. The default is **false**.",
                          "example": true
                        },
                        "shared_id": {
                          "type": "string",
                          "description": "The unique identifier of the voicemail that the user can access.",
                          "example": "--e8ugg0SeS-9clgrDkn2w"
                        }
                      },
                      "description": "This field adds a voicemail setting. &lt;b&gt;Deprecated:&lt;/b&gt; we will completely deprecate this property in a future release. Use property `voicemail_access_members` instead."
                    },
                    "voicemail_access_members": {
                      "maxItems": 50,
                      "uniqueItems": true,
                      "type": "array",
                      "description": "The shared voicemail access member list.",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "access_user_id": {
                                "type": "string",
                                "description": "The Zoom user ID to share the voicemail access permissions with.",
                                "example": "w0RChiauQeqRlv5fgxYULQ"
                              },
                              "allow_delete": {
                                "type": "boolean",
                                "description": "Whether the user has delete permissions. The default is **false**.",
                                "example": false
                              },
                              "allow_download": {
                                "type": "boolean",
                                "description": "Whether the user has download permissions. The default is **false**.",
                                "example": false
                              },
                              "allow_sharing": {
                                "type": "boolean",
                                "description": "Whether the user has permission to share. The default is **false**.",
                                "example": false
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "shared_id": {
                                "type": "string",
                                "description": " The unique identifier of the shared sub-setting that the user can access.",
                                "example": "--e8ugg0SeS-9clgrDkn2w"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "auto_call_recording_access_members": {
                      "maxItems": 50,
                      "uniqueItems": true,
                      "type": "array",
                      "description": "The shared automatic call recording access member list.",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "access_user_id": {
                                "type": "string",
                                "description": "The Zoom user ID to share access permissions.",
                                "example": "w0RChiauQeqRlv5fgxYULQ"
                              },
                              "allow_delete": {
                                "type": "boolean",
                                "description": "Whether the user has delete permissions. The default is **false**.",
                                "example": false
                              },
                              "allow_download": {
                                "type": "boolean",
                                "description": "Whether the user has download permissions. The default is **false**.",
                                "example": false
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "shared_id": {
                                "type": "string",
                                "description": "The unique identifier of the shared sub-setting that the user can access.",
                                "example": "--e8ugg0SeS-9clgrDkn2w"
                              }
                            }
                          }
                        ]
                      }
                    },
                    "ad_hoc_call_recording_access_members": {
                      "maxItems": 50,
                      "uniqueItems": true,
                      "type": "array",
                      "description": "The shared ad hoc call recording access member list.",
                      "items": {
                        "allOf": [
                          {
                            "type": "object",
                            "properties": {
                              "access_user_id": {
                                "type": "string",
                                "description": "The Zoom user ID to share access permissions.",
                                "example": "w0RChiauQeqRlv5fgxYULQ"
                              },
                              "allow_delete": {
                                "type": "boolean",
                                "description": "Whether the user has delete permissions. The default is **false**.",
                                "example": false
                              },
                              "allow_download": {
                                "type": "boolean",
                                "description": "Whether the user has download permissions. The default is **false**.",
                                "example": false
                              }
                            }
                          },
                          {
                            "type": "object",
                            "properties": {
                              "shared_id": {
                                "type": "string",
                                "description": "The unique identifier of the shared sub-setting that the user can access.",
                                "example": "--e8ugg0SeS-9clgrDkn2w"
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id.\nInvalid user sub-setting type.\nVoicemail has already been shared to the user.\nDelegation assistant is required.\nDelegation assistant is not a user or a common area.\nUser delegation assistant does not exist: {delegation_assistant_extension_id}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone:write:shared_setting",
              "phone:write:shared_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin", "phone:write"],
          "x-granular-scopes": [
            "phone:write:shared_setting",
            "phone:write:shared_setting:admin"
          ]
        }
      },
      "delete": {
        "tags": ["Users"],
        "summary": "Delete a user's shared access setting",
        "description": "Removes the user setting according to the setting type, specifically for delegation, intercom and shared access for voicemail and call recordings. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nTo see the shared access settings in the Zoom web portal, go to **Admin &gt; Phone System Management &gt; Users &amp; Rooms** . Click **Users** and select **User Policy**. Go to **Voicemail, Automatic Call Recording and Ad Hoc Call Recording**.\n\n To view the delegation and intercom setting in your Zoom web portal, navigate to **Admin &gt; Phone System Management &gt; Users &amp; Rooms**. Click the **Users** tab and select **User Settings**\n\n **Prerequisites:** \n* A Business or Enterprise account\n\n**Scopes:** `phone:write:admin`,`phone:write`\n\n**Granular Scopes:** `phone:delete:shared_setting`,`phone:delete:shared_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "deleteUserSetting",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The unique identifier of the user.",
            "required": true,
            "schema": { "type": "string", "example": "w0RChiauQeqRlv5fgxYULQ" }
          },
          {
            "name": "settingType",
            "in": "path",
            "description": "Corresponds to the setting item you wish to remove. Allowed values: `voice_mail`, `delegation`, `desk_phone`, `intercom`, `auto_call_recording`,`ad_hoc_call_recording`",
            "required": true,
            "schema": { "type": "string", "example": "voice_mail" }
          },
          {
            "name": "shared_id",
            "in": "query",
            "description": "This field is required only for voicemail, auto_call_recording, and ad_hoc_call_recording setting type.",
            "required": false,
            "schema": { "type": "string", "example": "--e8ugg0SeS-9clgrDkn2w" }
          },
          {
            "name": "assistant_extension_id",
            "in": "query",
            "description": "This field deletes the delegation assistant, used for delegation setting type.",
            "required": false,
            "schema": { "type": "string", "example": "---52bTzRAW2z5Qdu_MQRg" }
          },
          {
            "name": "device_id",
            "in": "query",
            "description": "This field deletes the assigned device, used for `desk_phone` setting type.",
            "required": false,
            "schema": { "type": "string", "example": "-GHFnf5WQe-H-_r0Wwx9iQ" }
          },
          {
            "name": "intercom_extension_id",
            "in": "query",
            "description": "This field deletes the intercom connection for the `intercom` setting type.",
            "required": false,
            "schema": { "type": "string", "example": "GQUUuvGMQu-bvod7HsYYIw" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content  \n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nInvalid user sub-setting type.<br>\n\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found\n\n**Error Code:** `1001` <br>\nUser does not exist: {userId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone:delete:shared_setting",
              "phone:delete:shared_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin", "phone:write"],
          "x-granular-scopes": [
            "phone:delete:shared_setting",
            "phone:delete:shared_setting:admin"
          ]
        }
      },
      "patch": {
        "tags": ["Users"],
        "summary": "Update a user's shared access setting",
        "description": "Updates the user setting according to the setting type, specifically for delegation, intercom and shared access for voicemail and call recordings. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\nTo see the shared access settings in the Zoom web portal, go to **Admin &gt; Phone System Management &gt; Users &amp; Rooms** . Choose **Users** and select **User Policy**. Go to **Voicemail, Automatic Call Recording and Ad Hoc Call Recording**.\n\n To view the delegation and intercom setting in your Zoom web portal, navigate to **Admin &gt; Phone System Management &gt; Users &amp; Rooms**. Choose the **Users** tab and select **User Settings**\n\n **Prerequisites:** \n* A Business or Enterprise account\n\n**Scopes:** `phone:write:admin`,`phone:write`\n\n**Granular Scopes:** `phone:update:shared_setting`,`phone:update:shared_setting:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateUserSetting",
        "parameters": [
          {
            "name": "settingType",
            "in": "path",
            "description": "This field corresponds to the setting item you wish to modify. Allowed values: `voice_mail`, `delegation`, `desk_phone`, `intercom`, `auto_call_recording`,`ad_hoc_call_recording`",
            "required": true,
            "schema": { "type": "string", "example": "voice_mail" }
          },
          {
            "name": "userId",
            "in": "path",
            "description": "The unique identifier of the user.",
            "required": true,
            "schema": { "type": "string", "example": "w0RChiauQeqRlv5fgxYULQ" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "delegation": {
                    "type": "object",
                    "properties": {
                      "privacy": {
                        "type": "boolean",
                        "description": "Whether to allow members to prevent others from picking up a held call, and listening, whispering, barging, or taking over a call if it's configured.",
                        "example": true
                      },
                      "privileges": {
                        "maxItems": 10,
                        "type": "array",
                        "description": "The delegation privileges. 1-Place Calls, 2-Answer Calls, 3- Pick Up Hold Calls.",
                        "items": { "type": "integer", "example": 2 },
                        "enum": [1, 2, 3]
                      },
                      "locked": {
                        "type": "boolean",
                        "description": "Whether to allow users to access to the feature of delegation.",
                        "example": true
                      }
                    },
                    "description": "The user delegation."
                  },
                  "desk_phone": {
                    "type": "object",
                    "properties": {
                      "devices": {
                        "maxItems": 10,
                        "type": "array",
                        "description": "The setting for the devices.",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "description": "The device ID.",
                              "example": "-GHFnf5WQe-H-_r0Wwx9iQ"
                            },
                            "policy": {
                              "type": "object",
                              "properties": {
                                "call_control": {
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "This field allows call control features to the current device: configure the desk phone devices to mirror call control actions of the Zoom desktop client, including making and accepting calls. \nOptions include: \n* `on` \n* `off`",
                                      "example": "off",
                                      "enum": ["on", "off"]
                                    }
                                  }
                                },
                                "hot_desking": {
                                  "type": "object",
                                  "properties": {
                                    "status": {
                                      "type": "string",
                                      "description": "This field allows hot desking feature to the current device: letting the guest user sign in to the desk phone. You can't use the desk phone until the guest user signs out. \nOptions include: \n* `on` \n* `off`",
                                      "example": "off",
                                      "enum": ["on", "off"]
                                    }
                                  }
                                }
                              },
                              "description": "The device policy."
                            }
                          }
                        }
                      },
                      "phone_screen_lock": {
                        "type": "boolean",
                        "description": "After enabling this option, you can lock your desk phone screen. PIN Code is required to unlock your phone. This feature is not supported on some devices. See [Supported Device Types](https://support.zoom.us/hc/en-us/articles/360029698771) for more information.",
                        "example": true
                      },
                      "pin_code": {
                        "type": "string",
                        "description": "The PIN Code to access voicemail, hot desking, and unlocking desk phones.",
                        "example": "09912"
                      }
                    },
                    "description": "This field updates desk phone information."
                  },
                  "voice_mail": {
                    "type": "object",
                    "properties": {
                      "access_user_id": {
                        "type": "string",
                        "description": "The Zoom user ID whose voicemail permissions need to be updated.",
                        "example": "w0RChiauQeqRlv5fgxYULQ"
                      },
                      "delete": {
                        "type": "boolean",
                        "description": "Whether the user has delete permissions. The default is **false**.",
                        "example": true
                      },
                      "download": {
                        "type": "boolean",
                        "description": "Wether the user has download permissions. The default is **false**.",
                        "example": true
                      },
                      "shared_id": {
                        "type": "string",
                        "description": "This field specifies the ID of the voicemail.",
                        "example": "--e8ugg0SeS-9clgrDkn2w"
                      }
                    },
                    "description": "This field updates the voicemail setting. &lt;b&gt;Deprecated:&lt;/b&gt; we will completely deprecate this property in a future release. Use property `voicemail_access_members` instead."
                  },
                  "intercom": {
                    "type": "object",
                    "properties": {
                      "extension_id": {
                        "type": "string",
                        "description": "The ID of the extension that you want to invite intercom connection.",
                        "example": "JHwOJZ_PRICfVhQlL0x_ww"
                      },
                      "device_id": {
                        "type": "string",
                        "description": "The ID of the device to which all your intercom calls will be routed.",
                        "example": "wG2kKqxyTJOCETmOpS5Kww"
                      }
                    },
                    "description": "This field updates the intercom setting."
                  },
                  "voicemail_access_members": {
                    "maxItems": 10,
                    "uniqueItems": true,
                    "type": "array",
                    "description": "The shared voicemail access member list.",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "access_user_id": {
                              "type": "string",
                              "description": "The Zoom user ID to share the voicemail access permissions with.",
                              "example": "w0RChiauQeqRlv5fgxYULQ"
                            },
                            "allow_delete": {
                              "type": "boolean",
                              "description": "Whether the user has delete permissions. The default is **false**.",
                              "example": false
                            },
                            "allow_download": {
                              "type": "boolean",
                              "description": "Whether the user has download permissions. The default is **false**.",
                              "example": false
                            },
                            "allow_sharing": {
                              "type": "boolean",
                              "description": "Whether the user has permission to share. The default is **false**.",
                              "example": false
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "shared_id": {
                              "type": "string",
                              "description": " The unique identifier of the shared sub-setting that the user can access.",
                              "example": "--e8ugg0SeS-9clgrDkn2w"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "auto_call_recording_access_members": {
                    "maxItems": 20,
                    "uniqueItems": true,
                    "type": "array",
                    "description": "The shared automatic call recording access member list.",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "access_user_id": {
                              "type": "string",
                              "description": "The Zoom user ID to share the access permissions with.",
                              "example": "w0RChiauQeqRlv5fgxYULQ"
                            },
                            "allow_delete": {
                              "type": "boolean",
                              "description": "This field specifies whether the user has delete permissions. The default is **false**.",
                              "example": false
                            },
                            "allow_download": {
                              "type": "boolean",
                              "description": "This field specifies whether the user has download permissions. The default is **false**.",
                              "example": false
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "shared_id": {
                              "type": "string",
                              "description": "The unique identifier of the shared sub-setting that the user can access.",
                              "example": "--e8ugg0SeS-9clgrDkn2w"
                            }
                          }
                        }
                      ]
                    }
                  },
                  "ad_hoc_call_recording_access_members": {
                    "maxItems": 20,
                    "uniqueItems": true,
                    "type": "array",
                    "description": "The shared ad hoc call recording access member list.",
                    "items": {
                      "allOf": [
                        {
                          "type": "object",
                          "properties": {
                            "access_user_id": {
                              "type": "string",
                              "description": "The Zoom user ID to share the access permissions with.",
                              "example": "w0RChiauQeqRlv5fgxYULQ"
                            },
                            "allow_delete": {
                              "type": "boolean",
                              "description": "This field specifies whether the user has delete permissions. The default is **false**.",
                              "example": false
                            },
                            "allow_download": {
                              "type": "boolean",
                              "description": "This field specifies whether the user has download permissions. The default is **false**.",
                              "example": false
                            }
                          }
                        },
                        {
                          "type": "object",
                          "properties": {
                            "shared_id": {
                              "type": "string",
                              "description": "The unique identifier of the shared sub-setting that the user can access.",
                              "example": "--e8ugg0SeS-9clgrDkn2w"
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`  \n \nNo Content  \n "
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id.\nInvalid user setting Type: {settingType}.\nDelegation privileges error.\nDelegation privacy error.\nDelegation assistants do not exist. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone:update:shared_setting",
              "phone:update:shared_setting:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin", "phone:write"],
          "x-granular-scopes": [
            "phone:update:shared_setting",
            "phone:update:shared_setting:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/call_logs/{id}/voice_mail": {
      "get": {
        "tags": ["Voicemails"],
        "summary": "Get user voicemail details from a call log",
        "description": "Returns the detailed information on a voicemail associated with a call log ID. \n\nFor user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites:** \n* User must belong to a Business or Enterprise account \n* User must have a Zoom Phone license\n\n**Scopes:** `phone:read`,`phone:read:admin`,`phone_voicemail:read`,`phone_voicemail:read:admin`\n\n**Granular Scopes:** `phone:read:voicemail`,`phone:read:voicemail:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getVoicemailDetailsByCallIdOrCallLogId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user.",
            "required": true,
            "schema": { "type": "string", "example": "IGTRVt3gQ2i-WjoUIjeZxw" }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The unique ID of the call log. You can use `callLogId` or `callId` as path parameters.\n\nYou can find the value for this field with in **[Get account's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/accountCallLogs)** API or **[Get user's call logs](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/phoneUserCallLogs)** API.",
            "required": true,
            "schema": { "type": "string", "example": "46541323465" }
          }
        ],
        "responses": {
          "200": {
            "description": "The voicemail information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_id": {
                      "type": "string",
                      "description": "The phone call ID.",
                      "example": "876634343743"
                    },
                    "call_log_id": {
                      "type": "string",
                      "description": "The call log ID.",
                      "example": "55fd0af0-beb0-433a-be97-388de5e99ab4"
                    },
                    "call_history_id": {
                      "type": "string",
                      "example": "20190519-55fd0af0-beb0-433a-be97-388de5e99ab4"
                    },
                    "callee_name": {
                      "type": "string",
                      "description": "The name of the callee.",
                      "example": "Jane Doe"
                    },
                    "callee_number": {
                      "type": "string",
                      "description": "The callee's phone number.",
                      "example": "34567889"
                    },
                    "callee_number_type": {
                      "type": "integer",
                      "description": "The callee's number type: \n* `1` &mdash; Internal number. \n* `2` &mdash; External number.\n* `3` &mdash; Customized emergency number.",
                      "example": 2,
                      "enum": [1, 2, 3]
                    },
                    "caller_name": {
                      "type": "string",
                      "description": "The name of the caller.",
                      "example": "John Doe"
                    },
                    "caller_number": {
                      "type": "string",
                      "description": "The caller's phone number.",
                      "example": "12345678"
                    },
                    "caller_number_type": {
                      "type": "integer",
                      "description": "The caller's number type: \n* `1` &mdash; Internal number. \n* `2` &mdash; External number.",
                      "example": 1,
                      "enum": [1, 2]
                    },
                    "date_time": {
                      "type": "string",
                      "description": "The date the voicemail was created.",
                      "example": "2019-05-19T20:00:00Z"
                    },
                    "download_url": {
                      "type": "string",
                      "description": "The URL to download the voicemail. For security purposes, you must provide an OAuth access token in the auth header to download the voicemail file using this url.\nExample request:\n```\ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {access_token}' \\\n  --header 'content-type: application/json'\n```",
                      "example": "exampleurl.io"
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The duration of voicemail in seconds.",
                      "example": 18
                    },
                    "id": {
                      "type": "string",
                      "description": "The voicemail ID.",
                      "example": "d43520fc6b7e4b26bbeef58a8a80f235"
                    },
                    "status": {
                      "type": "string",
                      "description": "The voicemail status: either 'read' or 'unread'.",
                      "example": "read",
                      "enum": ["read", "unread"]
                    },
                    "transcription": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string",
                          "description": "The content of the voicemail transcript.",
                          "example": "some transcript content"
                        },
                        "status": {
                          "type": "integer",
                          "description": "The status of the voicemail transcript:\n* `0` &mdash; Transcript is not available.\n* `1` &mdash; Transcript is processing.\n* `2` &mdash; Transcript processed successfully.\n* `4` &mdash; Transcript is disabled.\n* `5` &mdash; Transcript is enabled.\n* `9` &mdash; Transcript web error.\n* `11` &mdash; Transcript download error.\n* `12` &mdash; Transcript upload error.\n* `13` &mdash; Transcript web database error.\n* `14` &mdash; Transcript BYOS (Bring Your Own Storage) upload error.\n* `409` &mdash; Transcript duplicate processing request error.\n* `415` &mdash; Transcript unsupported media error.\n* `422` &mdash; Transcript cannot be processed.\n* `500` &mdash; Transcript server error.\n* `601` &mdash; Transcript AISense after retry error.\n* `602` &mdash; Transcript AISense upload file error.\n* `603` &mdash; Transcript AISense download file error.\n* `999` &mdash; Transcript AISense error.\n",
                          "example": 2,
                          "enum": [
                            0, 1, 2, 4, 5, 9, 11, 12, 13, 14, 409, 415, 422,
                            500, 601, 602, 603, 999
                          ]
                        },
                        "engine": {
                          "type": "string",
                          "description": "This field indicates the company that provides the transcription engine technology.",
                          "example": "otter"
                        }
                      },
                      "description": "The voicemail transcript."
                    }
                  },
                  "description": "The voicemail information."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `404` <br>\n Voice mail does not exist: {0}. <br>\n**Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read",
              "phone:read:admin",
              "phone_voicemail:read",
              "phone_voicemail:read:admin",
              "phone:read:voicemail",
              "phone:read:voicemail:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:read",
            "phone:read:admin",
            "phone_voicemail:read",
            "phone_voicemail:read:admin"
          ],
          "x-granular-scopes": [
            "phone:read:voicemail",
            "phone:read:voicemail:admin"
          ]
        }
      }
    },
    "/phone/users/{userId}/voice_mails": {
      "get": {
        "tags": ["Voicemails"],
        "summary": "Get user's voicemails",
        "description": "Returns a user's Zoom Phone voicemails. For user-level apps, pass [the `me` value](https://marketplace.zoom.us/docs/api-reference/using-zoom-apis#mekeyword) instead of the `userId` parameter.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read`,`phone:read:admin`,`phone_voicemail:read`,`phone_voicemail:read:admin`\n\n**Granular Scopes:** `phone:read:list_voicemails`,`phone:read:list_voicemails:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "phoneUserVoiceMails",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "The user ID or email address of the user. For user-level apps, pass `me` as the value for userId.",
            "required": true,
            "schema": { "type": "string", "example": "DYHrdpjrS3uaOf7dPkkg8w" }
          },
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the voice mail.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "read",
              "default": "all",
              "enum": ["all", "read", "unread"]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through large result sets. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. The date range defined by the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. The month defined should fall within the last six months. If unspecified, returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "**Required** only when the `from` parameter is specified. End time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          },
          {
            "name": "trash",
            "in": "query",
            "description": "Whether to query voicemails from trash.",
            "required": false,
            "schema": { "type": "boolean", "example": true }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nUser object returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "description": "The start date of the query.",
                      "format": "date",
                      "example": "2021-05-19"
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "VcXBknJ0MQ7kuXun5WKmSjHC1hOBGS2bbr2"
                    },
                    "page_count": {
                      "type": "integer",
                      "description": "The total number of pages.",
                      "example": 10
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The zize of each page.",
                      "example": 15
                    },
                    "to": {
                      "type": "string",
                      "description": "The end date.",
                      "format": "date",
                      "example": "2021-06-19"
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records.",
                      "example": 150
                    },
                    "voice_mails": {
                      "maxItems": 100,
                      "type": "array",
                      "description": "The voicemails.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "call_id": {
                            "type": "string",
                            "description": "The phone call's unique ID.",
                            "example": "876634343743"
                          },
                          "call_log_id": {
                            "type": "string",
                            "description": "The phone call log's unique ID.",
                            "example": "55fd0af0-beb0-433a-be97-388de5e99ab4"
                          },
                          "call_history_id": {
                            "type": "string",
                            "description": "The phone call history's unique ID.",
                            "example": "20190519-55fd0af0-beb0-433a-be97-388de5e99ab4"
                          },
                          "callee_name": {
                            "type": "string",
                            "description": "The contact name of callee.",
                            "example": "Jane Doe"
                          },
                          "callee_number": {
                            "type": "string",
                            "description": "The number of the callee.",
                            "example": "34567889"
                          },
                          "callee_number_type": {
                            "type": "integer",
                            "description": "The callee's number type: \n* `1` &mdash; Internal number. \n* `2` &mdash; External number.\n* `3` &mdash; Customized emergency number.",
                            "example": 2,
                            "enum": [1, 2, 3]
                          },
                          "caller_name": {
                            "type": "string",
                            "description": "The contact name of the caller.",
                            "example": "John Doe"
                          },
                          "caller_number": {
                            "type": "string",
                            "description": "The number of the caller.",
                            "example": "12345678"
                          },
                          "caller_number_type": {
                            "type": "integer",
                            "description": "The caller's number type: \n* `1` &mdash; Internal number. \n* `2` &mdash; External number.",
                            "example": 1,
                            "enum": [1, 2]
                          },
                          "date_time": {
                            "type": "string",
                            "description": "The time and date the voice mail started.",
                            "example": "2019-05-19T20:00:00Z"
                          },
                          "download_url": {
                            "type": "string",
                            "description": "The download URL of the attachment. For security purposes, you must provide an OAuth access token in the auth header to download the voicemail file using this URL.\nExample request:\n```\ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {access_token}' \\\n  --header 'content-type: application/json'\n```",
                            "example": "exampleurl.io"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The duration of voicemail in seconds.",
                            "example": 18
                          },
                          "id": {
                            "type": "string",
                            "description": "The voicemail ID.",
                            "example": "d43520fc6b7e4b26bbeef58a8a80f235"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the voice mail. It can be either 'read' or 'unread'",
                            "example": "read",
                            "enum": ["read", "unread"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Invalid user id. <br>\n**Error Code:** `400` <br>\n The next page token is invalid or expired. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `1001` <br>\n User does not exist: {userId}. <br>\n**Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read",
              "phone:read:admin",
              "phone_voicemail:read",
              "phone_voicemail:read:admin",
              "phone:read:list_voicemails",
              "phone:read:list_voicemails:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:read",
            "phone:read:admin",
            "phone_voicemail:read",
            "phone_voicemail:read:admin"
          ],
          "x-granular-scopes": [
            "phone:read:list_voicemails",
            "phone:read:list_voicemails:admin"
          ]
        }
      }
    },
    "/phone/voice_mails": {
      "get": {
        "tags": ["Voicemails"],
        "summary": "Get account voicemails",
        "description": "Gets a user's Zoom Phone voicemails. \n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`,`phone_voicemail:read:admin`\n\n**Granular Scopes:** `phone:read:list_voicemails:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `HEAVY`",
        "operationId": "accountVoiceMails",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned within a single API call.",
            "required": false,
            "schema": {
              "maximum": 300,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The status of the voice mail.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "read",
              "default": "all",
              "enum": ["all", "read", "unread"]
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The site ID.",
            "required": false,
            "schema": { "type": "string", "example": "NjHmTu16Qfe8yOiNJuekXA" }
          },
          {
            "name": "owner_type",
            "in": "query",
            "description": "The owner type. \n\nThe allowed values are `null`, `user`, `callQueue`, `sharedLineGroup`, `autoReceptionist`, or `sharedOffice`(deprecated and to be replaced by `commonArea` after the transition period). \n\nThe default value is `null`.  If the value is `null`, it returns all owner types.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "user",
              "enum": [
                "user",
                "callQueue",
                "sharedLineGroup",
                "autoReceptionist",
                "commonArea"
              ]
            }
          },
          {
            "name": "voicemail_type",
            "in": "query",
            "description": "The voicemail type.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "spam",
              "enum": ["normal", "spam", "maybeSpam"]
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes..",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "from",
            "in": "query",
            "description": "The start time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format. \n\nThe date range defined in the `from` and `to` parameters should be a month as the response only includes one month's worth of data at once. \n\nThe month defined should fall within the last six months. If unspecified, it returns data from the past 30 days.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-01"
            }
          },
          {
            "name": "to",
            "in": "query",
            "description": "This field is **required** only when the `from` parameter is specified. \n\nThe end time and date in **yyyy-mm-dd** or **yyyy-MM-dd'T'HH:mm:ss'Z'** format, the same format as the `from` parameter.",
            "required": false,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2021-12-31"
            }
          },
          {
            "name": "trashed",
            "in": "query",
            "description": "Whether to query voicemails from trash. The default setting is false.",
            "required": false,
            "schema": { "type": "boolean", "example": false, "default": false }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200`  \n \nUser object returned.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "from": {
                      "type": "string",
                      "description": "The start time and date of the query.",
                      "format": "date",
                      "example": "2021-05-19"
                    },
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "VcXBknJ0MQ7kuXun5WKmSjHC1hOBGS2bbr2"
                    },
                    "page_count": {
                      "type": "integer",
                      "description": "The total number of pages.",
                      "example": 10
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "The size of each page.",
                      "example": 15
                    },
                    "to": {
                      "type": "string",
                      "description": "The end time and date of the query.",
                      "format": "date",
                      "example": "2021-06-19"
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total number of records.",
                      "example": 150
                    },
                    "voice_mails": {
                      "type": "array",
                      "description": "The voicemails.",
                      "items": {
                        "type": "object",
                        "properties": {
                          "call_id": {
                            "type": "string",
                            "description": "The phone call's unique ID.",
                            "example": "876634343743"
                          },
                          "call_log_id": {
                            "type": "string",
                            "description": "The phone call log's unique ID.",
                            "example": "46541323465"
                          },
                          "callee_name": {
                            "type": "string",
                            "description": "The contact name of the callee",
                            "example": "Jane Doe"
                          },
                          "callee_number": {
                            "type": "string",
                            "description": "The phone number of the callee (the one receiving the call)",
                            "example": "34567889"
                          },
                          "callee_number_type": {
                            "type": "integer",
                            "description": "The callee's number type: \n* `1` — Internal number. \n* `2` — External number. \n* `3` — Customized emergency number.",
                            "example": 2,
                            "enum": [1, 2, 3]
                          },
                          "caller_name": {
                            "type": "string",
                            "description": "The contact name of the caller.",
                            "example": "John Doe"
                          },
                          "caller_number": {
                            "type": "string",
                            "description": "The phone number of the caller.",
                            "example": "12345678"
                          },
                          "caller_number_type": {
                            "type": "integer",
                            "description": "The caller's number type: \n* `1` — Internal number. \n* `2` — External number.",
                            "example": 1,
                            "enum": [1, 2]
                          },
                          "date_time": {
                            "type": "string",
                            "description": "The start time and date of the voicemail.",
                            "format": "date-time",
                            "example": "2021-05-19T20:00:00Z"
                          },
                          "download_url": {
                            "type": "string",
                            "description": "The download URL of the attachment. For security purposes, you must provide an OAuth access token in the auth header to download the voicemail file using this URL.\nExample request:\n```\ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {access_token}' \\\n  --header 'content-type: application/json'\n```",
                            "example": "exampleurl.io"
                          },
                          "duration": {
                            "type": "integer",
                            "description": "The duration of the voicemail. The unit of time is seconds.",
                            "example": 18
                          },
                          "id": {
                            "type": "string",
                            "description": "The voicemail ID.",
                            "example": "d43520fc6b7e4b26bbeef58a8a80f235"
                          },
                          "status": {
                            "type": "string",
                            "description": "The status of the voicemail: 'read' or 'unread'.",
                            "example": "read",
                            "enum": ["read", "unread"]
                          },
                          "owner": {
                            "type": "object",
                            "properties": {
                              "extension_number": {
                                "type": "integer",
                                "description": "The extension number associated with the call number.",
                                "format": "int64",
                                "example": 1000123476
                              },
                              "id": {
                                "type": "string",
                                "description": "The owner's ID.",
                                "example": "NL3cEpSdRc-c2t8aLoZqiw"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the owner.",
                                "example": "user@test.com"
                              },
                              "type": {
                                "type": "string",
                                "description": "The owner's type, can be `user`, `callQueue`, `sharedLineGroup`, `autoReceptionist`, or `sharedOffice`(deprecated and to be replaced by `commonArea`. During the transition period, if `sharedOffice` is provided as the `owner_type` parameter, `sharedOffice` is returned as a response. Conversely, if `commonArea` is provided, `commonArea` will be returned. If `null` is provided, `sharedOffice` will be returned temporarily, but it will be replaced by `commonArea` after the transition period).",
                                "example": "user",
                                "enum": [
                                  "user",
                                  "callQueue",
                                  "sharedLineGroup",
                                  "autoReceptionist",
                                  "commonArea"
                                ]
                              },
                              "extension_status": {
                                "type": "string",
                                "description": "This field indicates the status of extension. * `inactive` * `deleted`.",
                                "example": "deleted",
                                "enum": ["inactive", "deleted"]
                              },
                              "extension_deleted_time": {
                                "type": "string",
                                "description": "The date time the extension was deleted. It exists only when extension_status is `deleted`.",
                                "example": "2022-10-14T22:10:54Z"
                              }
                            },
                            "description": "The owner of the voicemail."
                          },
                          "deleted_time": {
                            "type": "string",
                            "description": "The time and date the voicemail was deleted. It exists only when voicemail is from trash.",
                            "format": "date-time",
                            "example": "2023-04-18T22:10:49.907Z"
                          },
                          "days_left_auto_permantely_delete": {
                            "type": "integer",
                            "description": "The number of days left until voicemail is permanently deleted. If the voicemail never auto deletes, the value is '-1'. It exists only when voicemail is from trash.",
                            "example": 30
                          },
                          "soft_deleted_type": {
                            "type": "string",
                            "description": "This field indicates how the voicemail was deleted. It exists only when voicemail is from trash.",
                            "example": "Manual",
                            "enum": ["Manual", "Data Retention"]
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "**HTTP Status Code:** `401` <br>\n Unauthorized  \n\n **Error Code:** `124` <br>\n Account does not exist: {accountId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone_voicemail:read:admin",
              "phone:read:list_voicemails:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin", "phone_voicemail:read:admin"],
          "x-granular-scopes": ["phone:read:list_voicemails:admin"]
        }
      }
    },
    "/phone/voice_mails/download/{fileId}": {
      "get": {
        "tags": ["Voicemails"],
        "summary": "Download a phone voicemail",
        "description": "Downloads the Zoom phone voicemail. \n\n**Prerequisites:**\n\n* A Business or Enterprise account\n* A Zoom Phone license\n\n**Scopes:** `phone:read`,`phone:read:admin`,`phone_voicemail:read`,`phone_voicemail:read:admin`\n\n**Granular Scopes:** `phone:read:voicemail:admin`,`phone:read:voicemail`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "phoneDownloadVoicemailFile",
        "parameters": [
          {
            "name": "fileId",
            "in": "path",
            "description": "The file ID of the phone voicemail.",
            "required": true,
            "schema": { "type": "string", "example": "SJD6tIJpQHeTU4RDde-NVA" }
          }
        ],
        "responses": {
          "200": { "description": "**HTTP Status Code:** `200` **OK**  " },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `404` <br>\n File does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read",
              "phone:read:admin",
              "phone_voicemail:read",
              "phone_voicemail:read:admin",
              "phone:read:voicemail:admin",
              "phone:read:voicemail"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:read",
            "phone:read:admin",
            "phone_voicemail:read",
            "phone_voicemail:read:admin"
          ],
          "x-granular-scopes": [
            "phone:read:voicemail:admin",
            "phone:read:voicemail"
          ]
        }
      }
    },
    "/phone/voice_mails/{voicemailId}": {
      "get": {
        "tags": ["Voicemails"],
        "summary": "Get voicemail details",
        "description": "Returns the information about a [voicemail message](https://support.zoom.us/hc/en-us/articles/360021400211-Managing-voicemail-messages). \n\n**Prerequisites:** \n* Zoom Phone license\n\n**Scopes:** `phone:read`,`phone:read:admin`,`phone_voicemail:read:admin`,`phone_voicemail:read`\n\n**Granular Scopes:** `phone:read:voicemail`,`phone:read:voicemail:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "getVoicemailDetails",
        "parameters": [
          {
            "name": "voicemailId",
            "in": "path",
            "description": "The unique identifier of the voicemail. It retrieves the value for this field by calling the [Get voicemails](https://marketplace.zoom.us/docs/api-reference/phone/methods/#operation/phoneUserVoiceMails) API.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "d43520fc6b7e4b26bbeef58a8a80f235"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "The voicemail information.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "call_id": {
                      "type": "string",
                      "description": "The phone call's unique ID.",
                      "example": "876634343743"
                    },
                    "call_log_id": {
                      "type": "string",
                      "description": "The phone call log's unique ID.",
                      "example": "46541323465"
                    },
                    "callee_name": {
                      "type": "string",
                      "description": "The name of the callee.",
                      "example": "Jane Doe"
                    },
                    "callee_number": {
                      "type": "string",
                      "description": "The callee's phone number.",
                      "example": "34567889"
                    },
                    "callee_number_type": {
                      "type": "integer",
                      "description": "The callee's number type: \n* `1` — Internal number \n* `2` — External number \n* `3` — Customized emergency number",
                      "example": 2,
                      "enum": [1, 2, 3]
                    },
                    "caller_name": {
                      "type": "string",
                      "description": "The name of the caller.",
                      "example": "John Doe"
                    },
                    "caller_number": {
                      "type": "string",
                      "description": "The caller's phone number.",
                      "example": "12345678"
                    },
                    "caller_number_type": {
                      "type": "integer",
                      "description": "The caller's number type: \n* `1` — Internal number \n* `2` — External number",
                      "example": 1,
                      "enum": [1, 2]
                    },
                    "date_time": {
                      "type": "string",
                      "description": "The creation date of the voicemail.",
                      "example": "2021-05-19T20:00:00Z"
                    },
                    "download_url": {
                      "type": "string",
                      "description": "The URL to download the voicemail. For security purposes, you must provide an OAuth access token in the auth header to download the voicemail file using this url.\nExample request:\n```\ncurl --request GET \\\n  --url {download_url} \\\n  --header 'authorization: Bearer {access_token}' \\\n  --header 'content-type: application/json'\n```",
                      "example": "exampleurl.io"
                    },
                    "duration": {
                      "type": "integer",
                      "description": "The duration of voicemail in seconds.",
                      "example": 18
                    },
                    "id": {
                      "type": "string",
                      "description": "The voicemail ID.",
                      "example": "d43520fc6b7e4b26bbeef58a8a80f235"
                    },
                    "status": {
                      "type": "string",
                      "description": "The status of the voicemail. It can be either **read** or **unread**.",
                      "example": "read",
                      "enum": ["read", "unread"]
                    },
                    "transcription": {
                      "type": "object",
                      "properties": {
                        "content": {
                          "type": "string",
                          "description": "The content of the voicemail transcript.",
                          "example": "some transcript content"
                        },
                        "status": {
                          "type": "integer",
                          "description": "The status of the voicemail transcript: \n* `0` — Transcript is not available. \n* `1` — Transcript is processing. \n* `2` — Transcript processed successfully. \n* `4` — Transcript is disabled. \n* `5` — Transcript is enabled. \n* `9` — Transcript web error. \n* `11` — Transcript download error. \n* `12` — Transcript upload error. \n* `13` — Transcript web database error. \n* `14` — Transcript BYOS (Bring Your Own Storage) upload error. \n* `409` — Transcript duplicate processing request error. \n* `415` — Transcript unsupported media error. \n* `422` — Transcript cannot be processed. \n* `500` — Transcript server error. \n* `601` — Transcript AISense after retry error. \n* `602` — Transcript AISense upload file error. \n* `603` — Transcript AISense download file error. \n* `999` — Transcript AISense error.",
                          "example": 2,
                          "enum": [
                            0, 1, 2, 4, 5, 9, 11, 12, 13, 14, 409, 415, 422,
                            500, 601, 602, 603, 999
                          ]
                        },
                        "engine": {
                          "type": "string",
                          "description": "This field indicates the company that provides the transcription engine technology.",
                          "example": "otter"
                        }
                      },
                      "description": "The voicemail transcript."
                    },
                    "deleted_time": {
                      "type": "string",
                      "description": "The deletion time and date of the voicemail. It exists only when voicemail is from trash.",
                      "format": "date-time",
                      "example": "2023-04-18T22:10:49.907Z"
                    },
                    "days_left_auto_permantely_delete": {
                      "type": "integer",
                      "description": "The number of days left until voicemail is permanently deleted. If the voicemail never auto deletes, the value is `-1`. It exists only when voicemail is from trash.",
                      "example": 30
                    },
                    "soft_deleted_type": {
                      "type": "string",
                      "description": "This field indicates how the voicemail was deleted. It exists only when voicemail is from trash.",
                      "example": "Manual",
                      "enum": ["Manual", "Data Retention"]
                    },
                    "intent_detect_status": {
                      "type": "string",
                      "description": "The current intent detection state of the voicemail: \n* `not_started` &mdash; AI detect was not started. \n* `processing` &mdash; processing. \n* `success` &mdash; success. \n* `ai_detection_failed` &mdash; failed, AI detection failed.\n* `unknown_reason_failed` &mdash; failed, unknown reason.",
                      "example": "success",
                      "enum": [
                        "not_started",
                        "processing",
                        "success",
                        "ai_detection_failed",
                        "unknown_reason_failed"
                      ]
                    },
                    "intent_results": {
                      "type": "array",
                      "description": "The matched intents of the voicemail",
                      "items": {
                        "type": "object",
                        "properties": {
                          "intent_id": {
                            "type": "string",
                            "description": "The intent ID.",
                            "example": ""
                          },
                          "confidence_score": {
                            "type": "number",
                            "description": "The confidence score of the intent detected by the AI to this current voicemail",
                            "example": 1
                          }
                        }
                      }
                    },
                    "voice_mail_task": {
                      "type": "object",
                      "properties": {
                        "status": {
                          "type": "string",
                          "description": "This field indicates the processing status of extracting task from the voicemail transcription.\n\n* `processing`: Indicates that the task extraction process is still ongoing.\n* `success`: Indicates that the task is successfully extracted from the voicemail transcription.\n* `no_task`: Indicates that no recognizable task is found in the voicemail transcription.\n* `failure`: Indicates that an error occurred during the task extraction transcription.",
                          "example": "success",
                          "enum": [
                            "processing",
                            "success",
                            "no_task",
                            "failure"
                          ]
                        },
                        "content": {
                          "type": "string",
                          "description": "The voicemail task extracted from the voicemail transcription.",
                          "example": "Call back the caller at +12091112222 tomorrow."
                        },
                        "feedback": {
                          "type": "string",
                          "description": "This field provides feedback on the voicemail task.",
                          "example": "thumbs_up",
                          "enum": ["none", "thumbs_up", "thumbs_down"]
                        }
                      }
                    }
                  },
                  "description": "The voicemail information."
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Voice mail does not exist: {voicemailId}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read",
              "phone:read:admin",
              "phone_voicemail:read:admin",
              "phone_voicemail:read",
              "phone:read:voicemail",
              "phone:read:voicemail:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:read",
            "phone:read:admin",
            "phone_voicemail:read:admin",
            "phone_voicemail:read"
          ],
          "x-granular-scopes": [
            "phone:read:voicemail",
            "phone:read:voicemail:admin"
          ]
        }
      },
      "patch": {
        "tags": ["Voicemails"],
        "summary": "Update Voicemail Read Status",
        "description": "Updates the status of [voicemail message](https://support.zoom.us/hc/en-us/articles/360021400211-Managing-voicemail-messages).\n\n**Prerequisites:**\n * A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`,`phone:write`,`phone_voicemail:write`,`phone_voicemail:write:admin`\n\n**Granular Scopes:** `phone:update:voicemail`,`phone:update:voicemail:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "updateVoicemailReadStatus",
        "parameters": [
          {
            "name": "voicemailId",
            "in": "path",
            "description": "The unique identifier of the voicemail. It retrieves the value for this field by calling the [Get voicemails](https://marketplace.zoom.us/docs/api-reference/phone/methods/#operation/phoneUserVoiceMails) API.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "d43520fc6b7e4b26bbeef58a8a80f235"
            }
          },
          {
            "name": "read_status",
            "in": "query",
            "description": "The voicemail status. The `Unread` feature must enable **Mark Voicemail as Unread**.",
            "required": true,
            "schema": {
              "type": "string",
              "example": "Unread",
              "enum": ["Read", "Unread"]
            }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nVoicemail status updated."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request \n\n **Error Code:** `400` <br>\n The read status is invalid.<br>Request failed because \"Mark Voicemail as Unread\" feature has not been enabled for this account.<br> <br>\n**Error Code:** `404` <br>\n Voice mail does not exist: {0}. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write",
              "phone_voicemail:write",
              "phone_voicemail:write:admin",
              "phone:update:voicemail",
              "phone:update:voicemail:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": [
            "phone:write:admin",
            "phone:write",
            "phone_voicemail:write",
            "phone_voicemail:write:admin"
          ],
          "x-granular-scopes": [
            "phone:update:voicemail",
            "phone:update:voicemail:admin"
          ]
        }
      }
    },
    "/phone/rooms": {
      "get": {
        "tags": ["Zoom Rooms"],
        "summary": "List Zoom Rooms under Zoom Phone license",
        "description": "Retrieves a list of [Zoom Rooms](https://support.zoom.us/hc/en-us/articles/360025153711) under the account that has the Zoom Phone license assigned.**Prerequisites:** * A Pro or higher account plan * A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_rooms:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `MEDIUM`",
        "operationId": "listZoomRooms",
        "parameters": [
          {
            "name": "page_size",
            "in": "query",
            "description": "The number of records returned from a single API call.",
            "required": false,
            "schema": {
              "maximum": 100,
              "type": "integer",
              "example": 30,
              "default": 30
            }
          },
          {
            "name": "next_page_token",
            "in": "query",
            "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
            "required": false,
            "schema": {
              "type": "string",
              "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
            }
          },
          {
            "name": "site_id",
            "in": "query",
            "description": "The site ID retrievable from the [List Phone Sites](https://marketplace.zoom.us/docs/api-reference/phone/methods#operation/listPhoneSites) API.",
            "required": false,
            "schema": { "type": "string", "example": "kLD4F3WBT-O9LYE31C0tRQ" }
          },
          {
            "name": "calling_type",
            "in": "query",
            "description": "The type of calling plan.",
            "required": false,
            "schema": { "type": "integer", "example": 100 }
          },
          {
            "name": "keyword",
            "in": "query",
            "description": "The Zoom room name or phone number from which to filter the results .",
            "required": false,
            "schema": { "type": "string", "example": "test_zoom_room" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nZoom Rooms retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "next_page_token": {
                      "type": "string",
                      "description": "The next page token paginates through a large set of results. A next page token returns whenever the set of available results exceeds the current page size. The expiration period for this token is 15 minutes.",
                      "example": "BJLYC6PABbAHdjwSkGVQeeR6B1juwHqj3G2"
                    },
                    "page_size": {
                      "maximum": 300,
                      "type": "integer",
                      "description": "The number of records returned from a single API call.",
                      "example": 30,
                      "default": 30
                    },
                    "rooms": {
                      "maxItems": 300,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "calling_plans": {
                            "maxItems": 100,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string",
                                  "description": "Name of the calling plan that Zoom Room is enrolled in.",
                                  "example": "AU/NZ Metered"
                                },
                                "type": {
                                  "type": "integer",
                                  "description": "The type of calling plan of which the Zoom Room is enrolled.",
                                  "example": 100
                                },
                                "billing_account_id": {
                                  "type": "string",
                                  "description": "The billing account ID. it's displayed when the zoom room is located in India.",
                                  "example": "3WWAEiEjTj2IQuyDiKMd_A"
                                },
                                "billing_account_name": {
                                  "type": "string",
                                  "description": "The billing account name. It's displayed when the Zoom Room is located in India.",
                                  "example": "Delhi billing"
                                }
                              }
                            }
                          },
                          "extension_id": {
                            "type": "string",
                            "description": "The extension ID.",
                            "example": "_zQiBLNDQumOuA_tOnBIrw"
                          },
                          "extension_number": {
                            "type": "integer",
                            "description": "The extension number assigned to the Zoom Room's Zoom phone number.",
                            "format": "int64",
                            "example": 10010
                          },
                          "id": {
                            "type": "string",
                            "description": "The unique Identifier of the Zoom Room.",
                            "example": "3JTPXDqTQCuzYJEwH6kN4g"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the Zoom Room.",
                            "example": "test"
                          },
                          "phone_numbers": {
                            "maxItems": 5,
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The ID for phone number.",
                                  "example": "CMOXjhb7RHeVeiH0zL0f9A"
                                },
                                "number": {
                                  "type": "string",
                                  "description": "The phone number in E164 format.",
                                  "example": "12058945544"
                                }
                              }
                            }
                          },
                          "site": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "description": "The [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites) ID.",
                                "example": "kLD4F3WBT-O9LYE31C0tRQ"
                              },
                              "name": {
                                "type": "string",
                                "description": "The name of the site.",
                                "example": "API DZ SITE3"
                              }
                            }
                          }
                        }
                      }
                    },
                    "total_records": {
                      "type": "integer",
                      "description": "The total records found for this query.",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `403` <br>\n You do not have permission. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_rooms:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_rooms:admin"]
        }
      },
      "post": {
        "tags": ["Zoom Rooms"],
        "summary": "Add a Zoom Room to a Zoom Phone",
        "description": "Associates a [Zoom Room](https://support.zoom.us/hc/en-us/articles/360025153711#h_70c74c57-50d6-406b-a4fa-2f33d4bebdbc) with a Zoom Phone license. \n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:room:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "addZoomRoom",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string",
                    "description": "The Zoom Room ID.",
                    "example": "_zQiBLNDQumOuA_tOnBIrw"
                  },
                  "site_id": {
                    "type": "string",
                    "description": "The ID of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                    "example": "kLD4F3WBT-O9LYE31C0tRQ"
                  },
                  "calling_plans": {
                    "maxItems": 100,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "integer",
                          "description": "The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of calling plan.",
                          "example": 100
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status code:** `201`  \n \nZoom Room added successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `404` <br>\n Unknown or invalid calling plan: {type}.<br> <br>\n**Error Code:** `404` <br>\n Room does not exist:{roomId}. <br>\n"
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:write:admin", "phone:write:room:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:room:admin"]
        }
      }
    },
    "/phone/rooms/unassigned": {
      "get": {
        "tags": ["Zoom Rooms"],
        "summary": "List Zoom Rooms without Zoom Phone assignment",
        "description": "Returns [Zoom Rooms](https://support.zoom.us/hc/en-us/articles/360025153711) that are not assigned a Zoom Phone.**Prerequisites:** * A Pro or higher account plan * A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:list_rooms:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Medium`",
        "operationId": "listUnassignedZoomRooms",
        "parameters": [
          {
            "name": "keyword",
            "in": "query",
            "description": "A search keyword for Zoom Room's name.",
            "required": false,
            "schema": { "type": "string", "example": "room_1" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nAvailable Zoom Rooms retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "rooms": {
                      "maxItems": 100,
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The Zoom Room ID.",
                            "example": "_zQiBLNDQumOuA_tOnBIrw"
                          },
                          "display_name": {
                            "type": "string",
                            "description": "Name of the Zoom Room.",
                            "example": "room_1"
                          },
                          "location_id": {
                            "type": "string",
                            "description": "The Zoom Room location ID.",
                            "example": "3zEOmHchRaWCb7hx9XwROg"
                          },
                          "location_info": {
                            "type": "string",
                            "description": "The Zoom Room location information.",
                            "example": "San Jose City,California State,Unite States Country/Region"
                          },
                          "department": {
                            "type": "string",
                            "description": "The department the Zoom Room belongs to.",
                            "example": "pbx department"
                          },
                          "cost_center": {
                            "type": "string",
                            "description": "The cost center the Zoom Room belongs to.",
                            "example": "pbx cost center"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "**HTTP Status Code:** `404` <br>\n Not Found  \n\n **Error Code:** `2001` <br>\n Account does not exist. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:read:admin",
              "phone:read:list_rooms:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:list_rooms:admin"]
        }
      }
    },
    "/phone/rooms/{roomId}": {
      "get": {
        "tags": ["Zoom Rooms"],
        "summary": "Get a Zoom Room under Zoom Phone license",
        "description": "Use this API to get a specific [Zoom Room](https://support.zoom.us/hc/en-us/articles/360025153711) in an account that has the Zoom Phone license assigned.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n**Scopes:** `phone:read:admin`\n\n**Granular Scopes:** `phone:read:room:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "getZoomRoom",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "3JTPXDqTQCuzYJEwH6kN4g" }
          }
        ],
        "responses": {
          "200": {
            "description": "**HTTP Status Code:** `200` **OK**  \n \nZoom Room retrieved successfully.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "calling_plans": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string",
                            "description": "Name of the calling plan that Zoom Room is enrolled in.",
                            "example": "AU/NZ Metered"
                          },
                          "type": {
                            "type": "integer",
                            "description": "Type of calling plan that Zoom Room is enrolled in.",
                            "example": 100
                          },
                          "billing_account_id": {
                            "type": "string",
                            "description": "Billing account ID. Displayed when the zoom room is located in India.",
                            "example": "3WWAEiEjTj2IQuyDiKMd_A"
                          },
                          "billing_account_name": {
                            "type": "string",
                            "description": "Billing account name. Displayed when the zoom room is located in India.",
                            "example": "Delhi billing"
                          }
                        }
                      }
                    },
                    "emergency_address": {
                      "type": "object",
                      "properties": {
                        "address_line1": {
                          "type": "string",
                          "description": "The emergency location address line 1.",
                          "example": "122"
                        },
                        "address_line2": {
                          "type": "string",
                          "description": "The emergency location address line 2.",
                          "example": "122"
                        },
                        "city": {
                          "type": "string",
                          "description": "The emergency location address's city.",
                          "example": "12"
                        },
                        "country": {
                          "type": "string",
                          "description": "Two-lettered country code (Aplha-2 code in ISO-3166 format).",
                          "example": "SG"
                        },
                        "id": {
                          "type": "string",
                          "description": "The emergency location address ID.",
                          "example": "fXEdhQmSQheGaNuLYbm8Wg"
                        },
                        "state_code": {
                          "type": "string",
                          "description": "The emergency location address's state code.",
                          "example": "123"
                        },
                        "zip": {
                          "type": "string",
                          "description": "The emergency address zip code.",
                          "example": "50383"
                        }
                      },
                      "description": "The emergency location's address information."
                    },
                    "extension_id": {
                      "type": "string",
                      "description": "Extension ID.",
                      "example": "_zQiBLNDQumOuA_tOnBIrw"
                    },
                    "extension_number": {
                      "type": "integer",
                      "description": "The extension number of the Zoom Room. ",
                      "format": "int64",
                      "example": 1233012
                    },
                    "id": {
                      "type": "string",
                      "description": "Unique Identifier of the Zoom Room.",
                      "example": "3JTPXDqTQCuzYJEwH6kN4g"
                    },
                    "name": {
                      "type": "string",
                      "description": "Name of the Zoom Room.",
                      "example": "test"
                    },
                    "phone_numbers": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "ID for phone number.",
                            "example": "6fTPXDwT2CuzYrwwH6sN4g"
                          },
                          "number": {
                            "type": "string",
                            "description": "Phone number in E164 format.",
                            "example": "12058945544"
                          }
                        }
                      }
                    },
                    "policy": {
                      "type": "object",
                      "properties": {
                        "international_calling": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Allow current extension to place international calls outside of the calling plan.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "site",
                              "enum": [
                                "invalid",
                                "account",
                                "user_group",
                                "site",
                                "extension"
                              ]
                            }
                          }
                        },
                        "select_outbound_caller_id": {
                          "type": "object",
                          "properties": {
                            "enable": {
                              "type": "boolean",
                              "description": "Allow current extension to change outbound caller ID when placing calls.",
                              "example": false
                            },
                            "locked_by": {
                              "type": "string",
                              "description": "Which level of administrator prohibits modifying the current settings.",
                              "example": "account",
                              "enum": [
                                "invalid",
                                "account",
                                "user_group",
                                "site",
                                "extension"
                              ]
                            }
                          }
                        }
                      }
                    },
                    "site": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                          "example": "kLD4F3WBT-O9LYE31C0tRQ"
                        },
                        "name": {
                          "type": "string",
                          "description": "Name of the site.",
                          "example": "API DZ SITE3"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:read:admin", "phone:read:room:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:read:admin"],
          "x-granular-scopes": ["phone:read:room:admin"]
        }
      },
      "delete": {
        "tags": ["Zoom Rooms"],
        "summary": "Remove a Zoom Room from a ZP account",
        "description": "Use this API to remove [Zoom Room](https://support.zoom.us/hc/en-us/articles/360025153711#h_140e30ba-5a88-40b9-b799-16883fa0a037) from a Zoom Phone account.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:room:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "RemoveZoomRoom",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "3JTPXDqTQCuzYJEwH6kN4g" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nZoom Room removed successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nRoom does not exist:{roomId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:write:admin", "phone:delete:room:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:room:admin"]
        }
      },
      "patch": {
        "tags": ["Zoom Rooms"],
        "summary": "Update a Zoom Room under Zoom Phone license",
        "description": "Use this API to update a [Zoom Room](https://support.zoom.us/hc/en-us/articles/360025153711) in an account that has the Zoom Phone license assigned.\n\n**Prerequisites:** \n* A Pro or higher account plan \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:update:room:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "updateZoomRoom",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "3JTPXDqTQCuzYJEwH6kN4g" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "extension_number": {
                    "type": "integer",
                    "description": "The extension number of the Zoom Room. The number must be complete (i.e. site number + short extension).",
                    "format": "int64",
                    "example": 123487
                  },
                  "policy": {
                    "type": "object",
                    "properties": {
                      "international_calling": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Allow current extension to place international calls outside of the calling plan.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Using site setting.",
                            "example": true
                          }
                        }
                      },
                      "select_outbound_caller_id": {
                        "type": "object",
                        "properties": {
                          "enable": {
                            "type": "boolean",
                            "description": "Allow current extension to change outbound caller ID when placing calls.",
                            "example": true
                          },
                          "reset": {
                            "type": "boolean",
                            "description": "Using site setting.",
                            "example": true
                          }
                        }
                      }
                    }
                  },
                  "site_id": {
                    "type": "string",
                    "description": "Unique identifier of the [site](https://support.zoom.us/hc/en-us/articles/360020809672-Managing-Multiple-Sites).",
                    "example": "kLD4F3WBT-O9LYE31C0tRQ"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204` **No Content**  \n \nZoom Room updated successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nExtension number error.\n\n**Error Code:** `400` <br>\nPolicy locked: {policy_key}.\n\n**Error Code:** `404` <br>\nRoom does not exist:{roomId}\nSite does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": ["phone:write:admin", "phone:update:room:admin"],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:update:room:admin"]
        }
      }
    },
    "/phone/rooms/{roomId}/calling_plans": {
      "post": {
        "tags": ["Zoom Rooms"],
        "summary": "Assign calling plans to a Zoom Room",
        "description": "Assigns [calling plans](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) to a [Zoom Room](https://support.zoom.us/hc/en-us/articles/360025153711#h_70c74c57-50d6-406b-a4fa-2f33d4bebdbc). Up to 200 numbers at a time.**Prerequisites:** * A Business or Enterprise account * A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:room_calling_plan:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "assignCallingPlanToRoom",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "3JTPXDqTQCuzYJEwH6kN4g" }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "calling_plans": {
                    "maxItems": 5,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "integer",
                          "description": "[Type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan.",
                          "example": 100
                        },
                        "billing_account_id": {
                          "type": "string",
                          "description": "Billing account ID. If the zoom room is located in India, the field is required.",
                          "example": "3WWAEiEjTj2IQuyDiKMd_A"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status code:** `201`  \n \nCalling plan assigned successfully.",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `300` <br>\n Plan invalid. <br>\n**Error Code:** `404` <br>\n Room does not exist:{roomId}. <br>\n**Error Code:** `429` <br>\n Room batch operation is limited to 5 per request. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:room_calling_plan:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:room_calling_plan:admin"]
        }
      }
    },
    "/phone/rooms/{roomId}/calling_plans/{type}": {
      "delete": {
        "tags": ["Zoom Rooms"],
        "summary": "Remove a calling plan from a Zoom Room",
        "description": "Use this API to unassign a [calling plan](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) from a [Zoom Room](https://support.zoom.us/hc/en-us/articles/360025153711#h_140e30ba-5a88-40b9-b799-16883fa0a037).\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:room_calling_plan:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "unassignCallingPlanFromRoom",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "3JTPXDqTQCuzYJEwH6kN4g" }
          },
          {
            "name": "type",
            "in": "path",
            "description": "The [type](https://marketplace.zoom.us/docs/api-reference/other-references/plans#zoom-phone-calling-plans) of the calling plan that was assigned to the Zoom Room. (e.g: The value of type would be &quot;200&quot; for Unlimited US/Canada calling plan.)\n",
            "required": true,
            "schema": { "type": "integer", "example": 100 }
          },
          {
            "name": "billing_account_id",
            "in": "query",
            "description": "The billing account ID. If the zoom room is located in India, the parameter is required.",
            "required": false,
            "schema": { "type": "string", "example": "3WWAEiEjTj2IQuyDiKMd_A" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`   \n \nCalling plan removed successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `300` <br>\nPlan invalid.\n\n**Error Code:** `404` <br>\nRoom does not exist:{roomId}.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:room_calling_plan:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:room_calling_plan:admin"]
        }
      }
    },
    "/phone/rooms/{roomId}/phone_numbers": {
      "post": {
        "tags": ["Zoom Rooms"],
        "summary": "Assign phone numbers to a Zoom Room",
        "description": "[Assigns phone numbers to a Zoom Room](https://support.zoom.us/hc/en-us/articles/360025153711). Up to 200 numbers at a time.\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:write:room_phone_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `LIGHT`",
        "operationId": "assignPhoneNumberToZoomRoom",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "required": true,
            "schema": { "type": "string", "example": "3JTPXDqTQCuzYJEwH6kN4g" }
          }
        ],
        "requestBody": {
          "description": "Provide either the ID or phone number in the request body.",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "phone_numbers": {
                    "maxItems": 5,
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "description": "ID for phone number",
                          "example": "---M1padRvSUtw7YihN7sA"
                        },
                        "number": {
                          "type": "string",
                          "description": "Phone number in E164 format.",
                          "example": "12058945616"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "**HTTP Status Code:** `201`   \n \nPhone number assigned successfully.",
            "content": {
              "application/json": {
                "schema": { "type": "object", "properties": {} }
              }
            }
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request  \n\n **Error Code:** `404` <br>\n Room does not exist:{roomId}.\nPhone number does not exist. <br>\n**Error Code:** `409` <br>\n Phone number already in use.\nThis function requires a Zoom Phone Metered, Unlimited, or Pro plan. <br>\n**Error Code:** `429` <br>\n Room batch operation is limited to 5 per request. <br>\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:write:room_phone_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-permissions": [],
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:write:room_phone_number:admin"]
        }
      }
    },
    "/phone/rooms/{roomId}/phone_numbers/{phoneNumberId}": {
      "delete": {
        "tags": ["Zoom Rooms"],
        "summary": "Remove a phone number from a Zoom Room",
        "description": "Use this API to unassign a [phone number](https://support.zoom.us/hc/en-us/articles/360020808292-Managing-Phone-Numbers#h_38ba8b01-26e3-4b1b-a9b5-0717c00a7ca6) from a [Zoom Room](https://support.zoom.us/hc/en-us/articles/360025153711#h_140e30ba-5a88-40b9-b799-16883fa0a037).\n\n**Prerequisites:** \n* A Business or Enterprise account \n* A Zoom Phone license \n* The Zoom Room must have been previously assigned a Zoom Phone number\n\n**Scopes:** `phone:write:admin`\n\n**Granular Scopes:** `phone:delete:room_phone_number:admin`\n\n**[Rate Limit Label](https://marketplace.zoom.us/docs/api-reference/rate-limits#rate-limits):** `Light`",
        "operationId": "UnassignPhoneNumberFromZoomRoom",
        "parameters": [
          {
            "name": "roomId",
            "in": "path",
            "description": "Provide roomId of the Zoom Room.",
            "required": true,
            "schema": { "type": "string", "example": "3JTPXDqTQCuzYJEwH6kN4g" }
          },
          {
            "name": "phoneNumberId",
            "in": "path",
            "description": "Provide phoneNumberId of the Zoom Room. ",
            "required": true,
            "schema": { "type": "string", "example": "ecj-KtsRRV-LcUPxAh99zQ" }
          }
        ],
        "responses": {
          "204": {
            "description": "**HTTP Status Code:** `204`\nThe phone number has been removed successfully."
          },
          "400": {
            "description": "**HTTP Status Code:** `400` <br>\n Bad Request\n\n**Error Code:** `404` <br>\nRoom does not exist:{roomId}.\nPhone number does not exist.\n\n"
          },
          "429": {
            "description": "**HTTP Status Code:** `429` <br>\n Too Many Requests. For more information, see [rate limits](https://developers.zoom.us/docs/api/rest/rate-limits/). \n\n "
          }
        },
        "security": [
          {
            "openapi_oauth": [
              "phone:write:admin",
              "phone:delete:room_phone_number:admin"
            ],
            "openapi_authorization": []
          }
        ],
        "x-extensions": {
          "x-macro-scopes": ["phone:write:admin"],
          "x-granular-scopes": ["phone:delete:room_phone_number:admin"]
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "openapi_authorization": {
        "type": "apiKey",
        "name": "Authorization",
        "in": "header"
      },
      "openapi_oauth": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "/",
            "tokenUrl": "",
            "refreshUrl": "",
            "scopes": {
              "phone:read:admin": "phone:read:admin",
              "phone:read:list_account_settings:admin": "phone:read:list_account_settings:admin",
              "phone:write:admin": "phone:write:admin",
              "phone:write:customized_number:admin": "phone:write:customized_number:admin",
              "phone:read:list_customized_number:admin": "phone:read:list_customized_number:admin",
              "phone:delete:customized_number:admin": "phone:delete:customized_number:admin",
              "phone:write:alert_setting:admin": "phone:write:alert_setting:admin",
              "phone:read:list_alert_settings:admin": "phone:read:list_alert_settings:admin",
              "phone:read:alert_setting:admin": "phone:read:alert_setting:admin",
              "phone:patch:alert_setting:admin": "phone:patch:alert_setting:admin",
              "phone:delete:alert_setting:admin": "phone:delete:alert_setting:admin",
              "phone:read": "phone:read",
              "phone:read:audio": "phone:read:audio",
              "phone:read:audio:admin": "phone:read:audio:admin",
              "phone:write": "phone:write",
              "phone:delete:audio": "phone:delete:audio",
              "phone:delete:audio:admin": "phone:delete:audio:admin",
              "phone:update:audio": "phone:update:audio",
              "phone:update:audio:admin": "phone:update:audio:admin",
              "phone:read:list_audios": "phone:read:list_audios",
              "phone:read:list_audios:admin": "phone:read:list_audios:admin",
              "phone:write:audio": "phone:write:audio",
              "phone:write:audio:admin": "phone:write:audio:admin",
              "phone:write:batch_audios": "phone:write:batch_audios",
              "phone:write:batch_audios:admin": "phone:write:batch_audios:admin",
              "phone:read:list_auto_receptionists:admin": "phone:read:list_auto_receptionists:admin",
              "phone:write:auto_receptionist:admin": "phone:write:auto_receptionist:admin",
              "phone:delete:auto_receptionist:admin": "phone:delete:auto_receptionist:admin",
              "phone:update:auto_receptionist:admin": "phone:update:auto_receptionist:admin",
              "phone:read:auto_receptionist:admin": "phone:read:auto_receptionist:admin",
              "phone:delete:auto_receptionist_number:admin": "phone:delete:auto_receptionist_number:admin",
              "phone:write:auto_receptionist_number:admin": "phone:write:auto_receptionist_number:admin",
              "phone:update:auto_receptionist_policy:admin": "phone:update:auto_receptionist_policy:admin",
              "phone:read:auto_receptionist_policy:admin": "phone:read:auto_receptionist_policy:admin",
              "phone:delete:auto_receptionist_policy:admin": "phone:delete:auto_receptionist_policy:admin",
              "phone:write:auto_receptionist_policy:admin": "phone:write:auto_receptionist_policy:admin",
              "phone:read:list_billing_accounts:admin": "phone:read:list_billing_accounts:admin",
              "phone:read:billing_account:admin": "phone:read:billing_account:admin",
              "phone:write:blocked_list:admin": "phone:write:blocked_list:admin",
              "phone:read:list_blocked_lists:admin": "phone:read:list_blocked_lists:admin",
              "phone:delete:blocked_list:admin": "phone:delete:blocked_list:admin",
              "phone:read:blocked_list:admin": "phone:read:blocked_list:admin",
              "phone:update:blocked_list:admin": "phone:update:blocked_list:admin",
              "phone:read:list_call_handling_settings:admin": "phone:read:list_call_handling_settings:admin",
              "phone:update:call_handling_setting:admin": "phone:update:call_handling_setting:admin",
              "phone:delete:call_handling_setting:admin": "phone:delete:call_handling_setting:admin",
              "phone:write:call_handling_setting:admin": "phone:write:call_handling_setting:admin",
              "phone_call_log:read:admin": "phone_call_log:read:admin",
              "phone:read:list_call_logs:admin": "phone:read:list_call_logs:admin",
              "phone:read:call_log:admin": "phone:read:call_log:admin",
              "phone:update:call_log:admin": "phone:update:call_log:admin",
              "phone_call_log:read": "phone_call_log:read",
              "phone:read:list_call_logs": "phone:read:list_call_logs",
              "phone_call_log:write": "phone_call_log:write",
              "phone_call_log:write:admin": "phone_call_log:write:admin",
              "phone:delete:call_log": "phone:delete:call_log",
              "phone:delete:call_log:admin": "phone:delete:call_log:admin",
              "phone:write:call_queue:admin": "phone:write:call_queue:admin",
              "phone:read:list_call_queues:admin": "phone:read:list_call_queues:admin",
              "phone:delete:call_queue:admin": "phone:delete:call_queue:admin",
              "phone:update:call_queue:admin": "phone:update:call_queue:admin",
              "phone:read:call_queue:admin": "phone:read:call_queue:admin",
              "phone:write:call_queue_member:admin": "phone:write:call_queue_member:admin",
              "phone:delete:call_queue_member:admin": "phone:delete:call_queue_member:admin",
              "phone:read:list_call_queue_members:admin": "phone:read:list_call_queue_members:admin",
              "phone:write:call_queue_number:admin": "phone:write:call_queue_number:admin",
              "phone:delete:call_queue_number:admin": "phone:delete:call_queue_number:admin",
              "phone:write:call_queue_policy:admin": "phone:write:call_queue_policy:admin",
              "phone:delete:call_queue_policy:admin": "phone:delete:call_queue_policy:admin",
              "phone:update:call_queue_policy:admin": "phone:update:call_queue_policy:admin",
              "phone:read:list_call_queue_recordings:admin": "phone:read:list_call_queue_recordings:admin",
              "phone:update:carrier_number:admin": "phone:update:carrier_number:admin",
              "phone:write:carrier_number:admin": "phone:write:carrier_number:admin",
              "phone:read:list_carrier_numbers:admin": "phone:read:list_carrier_numbers:admin",
              "phone:delete:carrier_number:admin": "phone:delete:carrier_number:admin",
              "phone:write:common_area:admin": "phone:write:common_area:admin",
              "phone:read:common_area:admin": "phone:read:common_area:admin",
              "phone:read:list_common_area_activation_codes:admin": "phone:read:list_common_area_activation_codes:admin",
              "phone:write:apply_template_to_common_areas:admin": "phone:write:apply_template_to_common_areas:admin",
              "phone:delete:common_area:admin": "phone:delete:common_area:admin",
              "phone:update:common_area:admin": "phone:update:common_area:admin",
              "phone:write:common_area_calling_plan:admin": "phone:write:common_area_calling_plan:admin",
              "phone:delete:common_area_calling_plan:admin": "phone:delete:common_area_calling_plan:admin",
              "phone:write:common_area_number:admin": "phone:write:common_area_number:admin",
              "phone:delete:common_area_number:admin": "phone:delete:common_area_number:admin",
              "phone:read:list_common_area_settings:admin": "phone:read:list_common_area_settings:admin",
              "phone:update:common_area_setting:admin": "phone:update:common_area_setting:admin",
              "phone:delete:common_area_setting:admin": "phone:delete:common_area_setting:admin",
              "phone:write:common_area_setting:admin": "phone:write:common_area_setting:admin",
              "phone:read:call_qos:admin": "phone:read:call_qos:admin",
              "phone:read:default_emergency_address:admin": "phone:read:default_emergency_address:admin",
              "phone:read:detectable_personal_location:admin": "phone:read:detectable_personal_location:admin",
              "phone:read:nomadic_emergency_services:admin": "phone:read:nomadic_emergency_services:admin",
              "phone:read:realtime_location_devices:admin": "phone:read:realtime_location_devices:admin",
              "phone:read:realtime_location_users:admin": "phone:read:realtime_location_users:admin",
              "phone:read:list_tracked_locations:admin": "phone:read:list_tracked_locations:admin",
              "phone:update:device_line_keys": "phone:update:device_line_keys",
              "phone:update:device_line_keys:admin": "phone:update:device_line_keys:admin",
              "phone:read:device_line_keys": "phone:read:device_line_keys",
              "phone:read:device_line_keys:admin": "phone:read:device_line_keys:admin",
              "phone:delete:directory:admin": "phone:delete:directory:admin",
              "phone:read:directory:admin": "phone:read:directory:admin",
              "phone:write:directory:admin": "phone:write:directory:admin",
              "phone:write:emergency_address:admin": "phone:write:emergency_address:admin",
              "phone:read:list_emergency_addresses:admin": "phone:read:list_emergency_addresses:admin",
              "phone:read:emergency_address:admin": "phone:read:emergency_address:admin",
              "phone:delete:emergency_address:admin": "phone:delete:emergency_address:admin",
              "phone:update:emergency_address:admin": "phone:update:emergency_address:admin",
              "phone:write:batch_emergency_locations:admin": "phone:write:batch_emergency_locations:admin",
              "phone:read:list_emergency_locations:admin": "phone:read:list_emergency_locations:admin",
              "phone:write:emergency_location:admin": "phone:write:emergency_location:admin",
              "phone:read:emergency_location:admin": "phone:read:emergency_location:admin",
              "phone:update:emergency_location:admin": "phone:update:emergency_location:admin",
              "phone:delete:emergency_location:admin": "phone:delete:emergency_location:admin",
              "phone:write:external_contact:admin": "phone:write:external_contact:admin",
              "phone:read:list_external_contacts:admin": "phone:read:list_external_contacts:admin",
              "phone:delete:external_contact:admin": "phone:delete:external_contact:admin",
              "phone:read:external_contact:admin": "phone:read:external_contact:admin",
              "phone:update:external_contact:admin": "phone:update:external_contact:admin",
              "phone:read:list_firmware_update_rules:admin": "phone:read:list_firmware_update_rules:admin",
              "phone:write:firmware_update_rule:admin": "phone:write:firmware_update_rule:admin",
              "phone:delete:firmware_update_rule:admin": "phone:delete:firmware_update_rule:admin",
              "phone:update:firmware_update_rule:admin": "phone:update:firmware_update_rule:admin",
              "phone:read:firmware_update_rule:admin": "phone:read:firmware_update_rule:admin",
              "phone:read:list_firmwares:admin": "phone:read:list_firmwares:admin",
              "phone:read:list_call_pickup_groups:admin": "phone:read:list_call_pickup_groups:admin",
              "phone:write:call_pickup_group:admin": "phone:write:call_pickup_group:admin",
              "phone:read:call_pickup_group:admin": "phone:read:call_pickup_group:admin",
              "phone:update:call_pickup_group:admin": "phone:update:call_pickup_group:admin",
              "phone:delete:call_pickup_group:admin": "phone:delete:call_pickup_group:admin",
              "phone:write:call_pickup_group_member:admin": "phone:write:call_pickup_group_member:admin",
              "phone:read:call_pickup_group_member:admin": "phone:read:call_pickup_group_member:admin",
              "phone:delete:call_pickup_group_member:admin": "phone:delete:call_pickup_group_member:admin",
              "phone:read:group_setting:admin": "phone:read:group_setting:admin",
              "phone:read:auto_receptionist_ivr:admin": "phone:read:auto_receptionist_ivr:admin",
              "phone:update:auto_receptionist_ivr:admin": "phone:update:auto_receptionist_ivr:admin",
              "phone:read:list_extension_inbound_block_rules:admin": "phone:read:list_extension_inbound_block_rules:admin",
              "phone:read:list_extension_inbound_block_rules": "phone:read:list_extension_inbound_block_rules",
              "phone:delete:extension_inbound_block_rule:admin": "phone:delete:extension_inbound_block_rule:admin",
              "phone:delete:extension_inbound_block_rule": "phone:delete:extension_inbound_block_rule",
              "phone:write:extension_inbound_block_rule:admin": "phone:write:extension_inbound_block_rule:admin",
              "phone:write:extension_inbound_block_rule": "phone:write:extension_inbound_block_rule",
              "phone:delete:extension_inbound_block_rule_stat:admin": "phone:delete:extension_inbound_block_rule_stat:admin",
              "phone:read:list_extension_inbound_block_rules_stat:admin": "phone:read:list_extension_inbound_block_rules_stat:admin",
              "phone:update:inbound_blocked_for_all:admin": "phone:update:inbound_blocked_for_all:admin",
              "phone:delete:inbound_block_rule:admin": "phone:delete:inbound_block_rule:admin",
              "phone:read:list_inbound_block_rules:admin": "phone:read:list_inbound_block_rules:admin",
              "phone:write:inbound_block_rule:admin": "phone:write:inbound_block_rule:admin",
              "phone:update:inbound_block_rule:admin": "phone:update:inbound_block_rule:admin",
              "phone:update:line_keys": "phone:update:line_keys",
              "phone:update:line_keys:admin": "phone:update:line_keys:admin",
              "phone:read:line_keys": "phone:read:line_keys",
              "phone:read:line_keys:admin": "phone:read:line_keys:admin",
              "phone:delete:line_keys": "phone:delete:line_keys",
              "phone:delete:line_keys:admin": "phone:delete:line_keys:admin",
              "phone:read:list_monitoring_groups:admin": "phone:read:list_monitoring_groups:admin",
              "phone:write:monitoring_group:admin": "phone:write:monitoring_group:admin",
              "phone:delete:monitoring_group:admin": "phone:delete:monitoring_group:admin",
              "phone:update:monitoring_group:admin": "phone:update:monitoring_group:admin",
              "phone:read:monitoring_group:admin": "phone:read:monitoring_group:admin",
              "phone:read:list_monitoring_group_members:admin": "phone:read:list_monitoring_group_members:admin",
              "phone:write:monitoring_group_member:admin": "phone:write:monitoring_group_member:admin",
              "phone:delete:monitoring_group_member:admin": "phone:delete:monitoring_group_member:admin",
              "phone:read:common_area_outbound_calling_rule:admin": "phone:read:common_area_outbound_calling_rule:admin",
              "phone:update:common_area_outbound_calling_rule:admin": "phone:update:common_area_outbound_calling_rule:admin",
              "phone:write:common_area_outbound_calling_rule:admin": "phone:write:common_area_outbound_calling_rule:admin",
              "phone:delete:common_area_outbound_calling_rule:admin": "phone:delete:common_area_outbound_calling_rule:admin",
              "phone:read:list_outbound_calling_rules:admin": "phone:read:list_outbound_calling_rules:admin",
              "phone:update:outbound_calling_rule:admin": "phone:update:outbound_calling_rule:admin",
              "phone:write:outbound_calling_rule:admin": "phone:write:outbound_calling_rule:admin",
              "phone:delete:outbound_calling_rule:admin": "phone:delete:outbound_calling_rule:admin",
              "phone:update:site_outbound_calling_rule:admin": "phone:update:site_outbound_calling_rule:admin",
              "phone:read:site_outbound_calling_rule:admin": "phone:read:site_outbound_calling_rule:admin",
              "phone:write:site_outbound_calling_rule:admin": "phone:write:site_outbound_calling_rule:admin",
              "phone:delete:site_outbound_calling_rule:admin": "phone:delete:site_outbound_calling_rule:admin",
              "phone:update:user_outbound_calling_rule:admin": "phone:update:user_outbound_calling_rule:admin",
              "phone:read:user_outbound_calling_rule:admin": "phone:read:user_outbound_calling_rule:admin",
              "phone:write:user_outbound_calling_rule:admin": "phone:write:user_outbound_calling_rule:admin",
              "phone:delete:user_outbound_calling_rule:admin": "phone:delete:user_outbound_calling_rule:admin",
              "phone:read:list_devices:admin": "phone:read:list_devices:admin",
              "phone:write:device:admin": "phone:write:device:admin",
              "phone:write:sync_device:admin": "phone:write:sync_device:admin",
              "phone:update:device:admin": "phone:update:device:admin",
              "phone:delete:device:admin": "phone:delete:device:admin",
              "phone:read:device:admin": "phone:read:device:admin",
              "phone:write:device_extension:admin": "phone:write:device_extension:admin",
              "phone:delete:device_extension:admin": "phone:delete:device_extension:admin",
              "phone:update:device_provision_template:admin": "phone:update:device_provision_template:admin",
              "phone:write:reboot_device:admin": "phone:write:reboot_device:admin",
              "phone:write:byo_carrier_number:admin": "phone:write:byo_carrier_number:admin",
              "phone:delete:number:admin": "phone:delete:number:admin",
              "phone:read:list_numbers:admin": "phone:read:list_numbers:admin",
              "phone:update:site_number:admin": "phone:update:site_number:admin",
              "phone:read:numbers:admin": "phone:read:numbers:admin",
              "phone:update:number:admin": "phone:update:number:admin",
              "phone:write:user_number": "phone:write:user_number",
              "phone:write:user_number:admin": "phone:write:user_number:admin",
              "phone:delete:user_number": "phone:delete:user_number",
              "phone:delete:user_number:admin": "phone:delete:user_number:admin",
              "phone:read:list_calling_plans:admin": "phone:read:list_calling_plans:admin",
              "phone:read:list_roles:admin": "phone:read:list_roles:admin",
              "phone:write:role:admin": "phone:write:role:admin",
              "phone:update:role:admin": "phone:update:role:admin",
              "phone:read:role:admin": "phone:read:role:admin",
              "phone:delete:role:admin": "phone:delete:role:admin",
              "phone:read:role_member:admin": "phone:read:role_member:admin",
              "phone:write:role_member:admin": "phone:write:role_member:admin",
              "phone:delete:role_member:admin": "phone:delete:role_member:admin",
              "phone:write:private_directory_member:admin": "phone:write:private_directory_member:admin",
              "phone:read:list_private_directory_members:admin": "phone:read:list_private_directory_members:admin",
              "phone:update:private_directory_member:admin": "phone:update:private_directory_member:admin",
              "phone:delete:private_directory_member:admin": "phone:delete:private_directory_member:admin",
              "phone_peering:read:admin": "phone_peering:read:admin",
              "phone:read:list_peering_numbers:admin": "phone:read:list_peering_numbers:admin",
              "phone_peering:write:admin": "phone_peering:write:admin",
              "phone:write:peering_number:admin": "phone:write:peering_number:admin",
              "phone:delete:peering_number:admin": "phone:delete:peering_number:admin",
              "phone:update:peering_number:admin": "phone:update:peering_number:admin",
              "phone:write:provision_template:admin": "phone:write:provision_template:admin",
              "phone:read:list_provision_templates:admin": "phone:read:list_provision_templates:admin",
              "phone:update:provision_template:admin": "phone:update:provision_template:admin",
              "phone:read:provision_template:admin": "phone:read:provision_template:admin",
              "phone:delete:provision_template:admin": "phone:delete:provision_template:admin",
              "phone_recording:read": "phone_recording:read",
              "phone_recording:read:admin": "phone_recording:read:admin",
              "phone:read:call_recording": "phone:read:call_recording",
              "phone:read:call_recording:admin": "phone:read:call_recording:admin",
              "phone:read:recording_transcript": "phone:read:recording_transcript",
              "phone:read:recording_transcript:admin": "phone:read:recording_transcript:admin",
              "phone:read:list_call_recordings:admin": "phone:read:list_call_recordings:admin",
              "phone_recording:write": "phone_recording:write",
              "phone_recording:write:admin": "phone_recording:write:admin",
              "phone:update:call_recording": "phone:update:call_recording",
              "phone:update:call_recording:admin": "phone:update:call_recording:admin",
              "phone:delete:call_recording": "phone:delete:call_recording",
              "phone:delete:call_recording:admin": "phone:delete:call_recording:admin",
              "phone:read:list_recordings": "phone:read:list_recordings",
              "phone:read:list_recordings:admin": "phone:read:list_recordings:admin",
              "phone:read:call_charges:admin": "phone:read:call_charges:admin",
              "phone:read:operation_logs:admin": "phone:read:operation_logs:admin",
              "phone:read:sms_charges:admin": "phone:read:sms_charges:admin",
              "phone:read:list_routing_rules:admin": "phone:read:list_routing_rules:admin",
              "phone:write:routing_rule:admin": "phone:write:routing_rule:admin",
              "phone:update:routing_rule:admin": "phone:update:routing_rule:admin",
              "phone:read:routing_rule:admin": "phone:read:routing_rule:admin",
              "phone:delete:routing_rule:admin": "phone:delete:routing_rule:admin",
              "phone_sms:read": "phone_sms:read",
              "phone_sms:read:admin": "phone_sms:read:admin",
              "phone:read:list_sms_sessions": "phone:read:list_sms_sessions",
              "phone:read:list_sms_sessions:admin": "phone:read:list_sms_sessions:admin",
              "phone:read:sms_session": "phone:read:sms_session",
              "phone:read:sms_session:admin": "phone:read:sms_session:admin",
              "phone:read:sms_message": "phone:read:sms_message",
              "phone:read:sms_message:admin": "phone:read:sms_message:admin",
              "phone:read:list_sms_campaigns:admin": "phone:read:list_sms_campaigns:admin",
              "phone:read:sms_campaign:admin": "phone:read:sms_campaign:admin",
              "phone:write:sms_campaign_number:admin": "phone:write:sms_campaign_number:admin",
              "phone:read:sms_campaign_number_opt_status:admin": "phone:read:sms_campaign_number_opt_status:admin",
              "phone:update:sms_campaign_number_opt_status:admin": "phone:update:sms_campaign_number_opt_status:admin",
              "phone:delete:sms_campaign_number:admin": "phone:delete:sms_campaign_number:admin",
              "phone:write:setting_template:admin": "phone:write:setting_template:admin",
              "phone:read:list_setting_templates:admin": "phone:read:list_setting_templates:admin",
              "phone:update:setting_template:admin": "phone:update:setting_template:admin",
              "phone:read:setting_template:admin": "phone:read:setting_template:admin",
              "phone:read:list_ported_numbers:admin": "phone:read:list_ported_numbers:admin",
              "phone:read:ported_number:admin": "phone:read:ported_number:admin",
              "phone:update:settings:admin": "phone:update:settings:admin",
              "phone:read:settings:admin": "phone:read:settings:admin",
              "phone:read:list_sip_groups:admin": "phone:read:list_sip_groups:admin",
              "phone:read:list_sip_trunks:admin": "phone:read:list_sip_trunks:admin",
              "phone:read:list_shared_line_appearances:admin": "phone:read:list_shared_line_appearances:admin",
              "phone:read:list_shared_line_groups:admin": "phone:read:list_shared_line_groups:admin",
              "phone:write:shared_line_group:admin": "phone:write:shared_line_group:admin",
              "phone:read:shared_line_group:admin": "phone:read:shared_line_group:admin",
              "phone:read:shared_line_group_policy:admin": "phone:read:shared_line_group_policy:admin",
              "phone:update:shared_line_group_policy:admin": "phone:update:shared_line_group_policy:admin",
              "phone:update:shared_line_group:admin": "phone:update:shared_line_group:admin",
              "phone:delete:shared_line_group:admin": "phone:delete:shared_line_group:admin",
              "phone:delete:shared_line_member:admin": "phone:delete:shared_line_member:admin",
              "phone:write:shared_line_member:admin": "phone:write:shared_line_member:admin",
              "phone:delete:shared_line_group_number:admin": "phone:delete:shared_line_group_number:admin",
              "phone:write:shared_line_group_number:admin": "phone:write:shared_line_group_number:admin",
              "phone:delete:shared_line_group_policy:admin": "phone:delete:shared_line_group_policy:admin",
              "phone:write:shared_line_group_policy:admin": "phone:write:shared_line_group_policy:admin",
              "phone:read:list_sites:admin": "phone:read:list_sites:admin",
              "phone:write:site:admin": "phone:write:site:admin",
              "phone:read:site:admin": "phone:read:site:admin",
              "phone:delete:site:admin": "phone:delete:site:admin",
              "phone:update:site:admin": "phone:update:site:admin",
              "phone:read:list_site_customized_number:admin": "phone:read:list_site_customized_number:admin",
              "phone:delete:site_customized_number:admin": "phone:delete:site_customized_number:admin",
              "phone:write:site_customized_number:admin": "phone:write:site_customized_number:admin",
              "phone:read:site_setting:admin": "phone:read:site_setting:admin",
              "phone:write:site_setting:admin": "phone:write:site_setting:admin",
              "phone:delete:site_setting:admin": "phone:delete:site_setting:admin",
              "phone:update:site_setting:admin": "phone:update:site_setting:admin",
              "phone:read:list_users:admin": "phone:read:list_users:admin",
              "phone:write:batch_users:admin": "phone:write:batch_users:admin",
              "phone:update:batch_users:admin": "phone:update:batch_users:admin",
              "phone:read:user": "phone:read:user",
              "phone:read:user:admin": "phone:read:user:admin",
              "phone:update:user": "phone:update:user",
              "phone:update:user:admin": "phone:update:user:admin",
              "phone:write:calling_plan": "phone:write:calling_plan",
              "phone:write:calling_plan:admin": "phone:write:calling_plan:admin",
              "phone:update:calling_plan": "phone:update:calling_plan",
              "phone:update:calling_plan:admin": "phone:update:calling_plan:admin",
              "phone:delete:users_calling_plan": "phone:delete:users_calling_plan",
              "phone:delete:users_calling_plan:admin": "phone:delete:users_calling_plan:admin",
              "phone:read:list_user_customized_number": "phone:read:list_user_customized_number",
              "phone:read:list_user_customized_number:admin": "phone:read:list_user_customized_number:admin",
              "phone:write:user_customized_number": "phone:write:user_customized_number",
              "phone:write:user_customized_number:admin": "phone:write:user_customized_number:admin",
              "phone:delete:user_customized_number": "phone:delete:user_customized_number",
              "phone:delete:user_customized_number:admin": "phone:delete:user_customized_number:admin",
              "phone:read:user_setting:admin": "phone:read:user_setting:admin",
              "phone:read:user_setting": "phone:read:user_setting",
              "phone:update:user_setting": "phone:update:user_setting",
              "phone:update:user_setting:admin": "phone:update:user_setting:admin",
              "phone:update:shared_setting": "phone:update:shared_setting",
              "phone:update:shared_setting:admin": "phone:update:shared_setting:admin",
              "phone:write:shared_setting": "phone:write:shared_setting",
              "phone:write:shared_setting:admin": "phone:write:shared_setting:admin",
              "phone:delete:shared_setting": "phone:delete:shared_setting",
              "phone:delete:shared_setting:admin": "phone:delete:shared_setting:admin",
              "phone_voicemail:read": "phone_voicemail:read",
              "phone_voicemail:read:admin": "phone_voicemail:read:admin",
              "phone:read:voicemail": "phone:read:voicemail",
              "phone:read:voicemail:admin": "phone:read:voicemail:admin",
              "phone:read:list_voicemails": "phone:read:list_voicemails",
              "phone:read:list_voicemails:admin": "phone:read:list_voicemails:admin",
              "phone_voicemail:write": "phone_voicemail:write",
              "phone_voicemail:write:admin": "phone_voicemail:write:admin",
              "phone:update:voicemail": "phone:update:voicemail",
              "phone:update:voicemail:admin": "phone:update:voicemail:admin",
              "phone:read:list_rooms:admin": "phone:read:list_rooms:admin",
              "phone:write:room:admin": "phone:write:room:admin",
              "phone:read:room:admin": "phone:read:room:admin",
              "phone:delete:room:admin": "phone:delete:room:admin",
              "phone:update:room:admin": "phone:update:room:admin",
              "phone:write:room_calling_plan:admin": "phone:write:room_calling_plan:admin",
              "phone:delete:room_calling_plan:admin": "phone:delete:room_calling_plan:admin",
              "phone:write:room_phone_number:admin": "phone:write:room_phone_number:admin",
              "phone:delete:room_phone_number:admin": "phone:delete:room_phone_number:admin"
            }
          }
        }
      }
    }
  }
}
